{
    "org.apache.cayenne.util.Util:org.xml.sax.XMLReader createXmlReader()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader:org.apache.cayenne.configuration.ConfigurationTree load(org.apache.cayenne.resource.Resource)",
            "org.apache.cayenne.dba.TypesHandler:void <init>(java.net.URL)",
            "org.apache.cayenne.map.MapLoader:org.apache.cayenne.map.DataMap loadDataMap(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader:org.apache.cayenne.configuration.ConfigurationTree load(org.apache.cayenne.resource.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.dba.TypesHandler:void <init>(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.TypesHandler:org.apache.cayenne.dba.TypesHandler getHandler(java.net.URL)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:org.apache.cayenne.map.DataMap loadDataMap(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.XMLDataMapLoader:org.apache.cayenne.map.DataMap load(org.apache.cayenne.resource.Resource)",
            "org.apache.cayenne.map.MapLoader:org.apache.cayenne.map.DataMap loadDataMap(java.lang.String)"
        ]
    },
    "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain get()"
        ]
    },
    "org.apache.cayenne.dba.TypesHandler:org.apache.cayenne.dba.TypesHandler getHandler(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.configuration.XMLDataMapLoader:org.apache.cayenne.map.DataMap load(org.apache.cayenne.resource.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataChannelChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:org.apache.cayenne.map.DataMap loadDataMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2Adapter:void <init>()",
            "org.apache.cayenne.dba.derby.DerbyAdapter:void <init>()",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:void <init>()",
            "org.apache.cayenne.dba.h2.H2Adapter:void <init>()",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:void <init>()",
            "org.apache.cayenne.dba.ingres.IngresAdapter:void <init>()",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void <init>()",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:void <init>()",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void <init>()",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:void <init>()",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void <init>()",
            "org.apache.cayenne.dba.sybase.SybaseAdapter:void <init>()",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()"
        ]
    },
    "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataChannelChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.SAXNestedTagHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.configuration.server.DataDomainProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2Adapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2Sniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.derby.DerbySniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.frontbase.FrontBaseSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.h2.H2Adapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.h2.H2Sniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.hsqldb.HSQLDBNoSchemaAdapter:void <init>()",
            "org.apache.cayenne.dba.hsqldb.HSQLDBSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.ingres.IngresAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.ingres.IngresSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBaseSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8Adapter:void <init>()",
            "org.apache.cayenne.dba.oracle.OracleSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.postgres.PostgresSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlite.SQLiteSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:void <init>()",
            "org.apache.cayenne.dba.sybase.SybaseSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter$1:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.configuration.SAXNestedTagHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter getAdapter()"
        ]
    },
    "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientRuntime:org.apache.cayenne.remote.ClientConnection getConnection()",
            "org.apache.cayenne.configuration.rop.client.LocalClientServerChannelProvider:org.apache.cayenne.DataChannel get()",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.ServerRuntime:org.apache.cayenne.access.DataDomain getDataDomain()",
            "org.apache.cayenne.configuration.web.CayenneFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.cayenne.configuration.web.SessionContextRequestHandler:void requestStart(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.DataChannel getChannel()",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.ObjectContext getContext()",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.ObjectContext getContext(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.BaseContext:void attachToRuntime(org.apache.cayenne.di.Injector)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.ConstructorInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:void injectMember(java.lang.Object,java.lang.reflect.Field,java.lang.String)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultInjector:void injectMembers(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.di.spi.ListProvider:java.util.List get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.ListProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.MapProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2Sniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbySniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBaseSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.h2.H2Sniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBNoSchemaAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.hsqldb.HSQLDBSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.ingres.IngresSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8Adapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter$1:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter getAdapter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String getBatchTerminator()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.AutoAdapter:boolean supportsUniqueConstraints()",
            "org.apache.cayenne.dba.AutoAdapter:boolean supportsGeneratedKeys()",
            "org.apache.cayenne.dba.AutoAdapter:boolean supportsBatchUpdates()",
            "org.apache.cayenne.dba.AutoAdapter:java.util.Collection dropTableStatements(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String[] externalTypesForJdbcType(int)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.types.ExtendedTypeMap getExtendedTypes()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.PkGenerator getPkGenerator()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.map.DbAttribute buildAttribute(java.lang.String,java.lang.String,int,int,int,boolean)",
            "org.apache.cayenne.dba.AutoAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String tableTypeForTable()",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String tableTypeForView()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.merge.MergerFactory mergerFactory()",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.QuotingStrategy getQuotingStrategy(boolean)"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.ClientRuntime:org.apache.cayenne.remote.ClientConnection getConnection()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.rop.client.LocalClientServerChannelProvider:org.apache.cayenne.DataChannel get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalClientServerChannelProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.hessian.service.HessianServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cayenne.configuration.server.ServerRuntime:org.apache.cayenne.access.DataDomain getDataDomain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)"
        ]
    },
    "org.apache.cayenne.configuration.web.CayenneFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.web.SessionContextRequestHandler:void requestStart(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.web.CayenneFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.DataChannel getChannel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.ObjectContext getContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.ObjectContext getContext(org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.BaseContext:void attachToRuntime(org.apache.cayenne.di.Injector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:boolean attachToRuntimeIfNeeded()"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.di.spi.ConstructorInjectingProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.di.spi.FieldInjectingProvider:void injectMember(java.lang.Object,java.lang.reflect.Field,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.FieldInjectingProvider:void injectMembers(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:void injectMembers(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.configuration.DefaultAdhocObjectFactory:java.lang.Object newInstance(java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.cayenne.di.spi.ListProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.di.spi.MapProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)"
        ]
    },
    "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)"
        ]
    },
    "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:java.lang.String getBatchTerminator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String getBatchTerminator()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:boolean supportsUniqueConstraints()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:boolean supportsUniqueConstraints()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:boolean supportsGeneratedKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:boolean includeInBatch(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.AutoAdapter:boolean supportsGeneratedKeys()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:boolean supportsBatchUpdates()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter:boolean supportsBatchUpdates()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:java.util.Collection dropTableStatements(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.AutoAdapter:java.util.Collection dropTableStatements(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DropTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.AddRelationshipToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:java.lang.String[] externalTypesForJdbcType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String[] externalTypesForJdbcType(int)",
            "org.apache.cayenne.merge.AddColumnToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.SetColumnTypeToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.types.ExtendedTypeMap getExtendedTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.types.ExtendedTypeMap getExtendedTypes()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.PkGenerator getPkGenerator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.PkGenerator getPkGenerator()",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.map.DbAttribute buildAttribute(java.lang.String,java.lang.String,int,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.map.DbAttribute buildAttribute(java.lang.String,java.lang.String,int,int,int,boolean)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void setInParam(java.sql.CallableStatement,org.apache.cayenne.map.ProcedureParameter,java.lang.Object,int)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:java.lang.String tableTypeForTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:java.util.Map getNameTablesInDB(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DbLoader:java.lang.String[] getDefaultTableTypes()",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String tableTypeForTable()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:java.lang.String tableTypeForView()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:java.lang.String[] getDefaultTableTypes()",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String tableTypeForView()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.merge.MergerFactory mergerFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.merge.MergerFactory mergerFactory()",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.QuotingStrategy getQuotingStrategy(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void appendDbAttribute(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.derby.DerbyMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.derby.DerbyMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.hsqldb.HSQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.QuotingStrategy getQuotingStrategy(boolean)",
            "org.apache.cayenne.merge.AbstractToDbToken$Entity:org.apache.cayenne.dba.QuotingStrategy getQuotingStrategy(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.AddColumnToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.DropColumnToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.DropRelationshipToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.SetAllowNullToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.SetColumnTypeToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.SetNotNullToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.LocalClientServerChannelProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.remote.hessian.service.HessianServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.BaseContext:boolean attachToRuntimeIfNeeded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.BaseContext:org.apache.cayenne.DataChannel getChannel()",
            "org.apache.cayenne.BaseContext:org.apache.cayenne.map.EntityResolver getEntityResolver()",
            "org.apache.cayenne.BaseContext:org.apache.cayenne.cache.QueryCache getQueryCache()"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.di.spi.FieldInjectingProvider:void injectMembers(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:void injectMembers(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.configuration.DefaultAdhocObjectFactory:java.lang.Object newInstance(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter createAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter defaultAdapter()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:org.apache.cayenne.configuration.server.DataSourceFactory getDataSourceFactory(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(org.apache.cayenne.conn.DataSourceInfo)"
        ]
    },
    "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory$1:org.apache.cayenne.dba.DbAdapter get()"
        ]
    },
    "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssembler:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:java.sql.PreparedStatement createStatement()"
        ]
    },
    "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()"
        ]
    },
    "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:boolean includeInBatch(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedInsert(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:void buildStatements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,java.util.Collection,org.apache.cayenne.access.DataDomain,org.apache.cayenne.log.JdbcEventLogger)"
        ]
    },
    "org.apache.cayenne.merge.DropTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.merge.AddRelationshipToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.merge.AddColumnToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.SetColumnTypeToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.oracle.OracleSQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:org.apache.cayenne.map.DataMap loadDataMapFromDB(java.lang.String,java.lang.String,java.lang.String[],org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.ProcedureTranslator:void setInParam(java.sql.CallableStatement,org.apache.cayenne.map.ProcedureParameter,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssembler:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:java.sql.PreparedStatement createStatement()"
        ]
    },
    "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:java.util.Map getNameTablesInDB(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:java.lang.String[] getDefaultTableTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:org.apache.cayenne.map.DataMap loadDataMapFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer access$000(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.access.trans.BatchQueryBuilder:void appendDbAttribute(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void <init>(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.OrderingTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.QualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.AbstractToDbToken$Entity:org.apache.cayenne.dba.QuotingStrategy getQuotingStrategy(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.h2.H2MergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLMergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$5:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)"
        ]
    },
    "org.apache.cayenne.merge.DropColumnToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.DropRelationshipToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.SetAllowNullToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.SetNotNullToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void <init>(org.apache.cayenne.DataChannel,org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.ResultIterator performIteratedQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.ResultIterator internalPerformIteratedQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.DataRowStore getDataRowCache()"
        ]
    },
    "org.apache.cayenne.BaseContext:org.apache.cayenne.DataChannel getChannel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRowsFromParentContext(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.QueryResponse performGenericQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextMergeHandler:boolean shouldProcessEvent(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.ObjectContextQueryAction:void runQuery()",
            "org.apache.cayenne.CayenneContextGraphManager:void graphCommitted(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContextGraphManager:void send(org.apache.cayenne.graph.GraphDiff,org.apache.cayenne.event.EventSubject,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:boolean shouldProcessEvent(org.apache.cayenne.graph.GraphEvent)"
        ]
    },
    "org.apache.cayenne.BaseContext:org.apache.cayenne.map.EntityResolver getEntityResolver()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.map.EntityResolver getEntityResolver()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:java.lang.Object newObject(java.lang.Class)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent newObject(java.lang.String)",
            "org.apache.cayenne.access.DataContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ObjectDiff:void <init>(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectResolver$InheritanceStrategy:org.apache.cayenne.reflect.ClassDescriptor descriptorForRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.map.EntityResolver getEntityResolver()",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processUpdatedSnapshot(java.lang.Object,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.service.LocalConnection:java.lang.Object doSendMessage(org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handlePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.BaseContext:void attachToChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.map.ObjEntity getObjEntity(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:java.util.Map extractObjectId(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.util.Map)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:java.lang.Object newObject(java.lang.Class)",
            "org.apache.cayenne.CayenneContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent createFault(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)",
            "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deletePersistent(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.PersistentObject:java.lang.Object getMapKey(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.BaseContext:org.apache.cayenne.cache.QueryCache getQueryCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.cache.QueryCache getQueryCache()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.cache.QueryCache getQueryCache()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decode(java.io.Reader)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)"
        ]
    },
    "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter createAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter defaultAdapter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)"
        ]
    },
    "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:org.apache.cayenne.configuration.server.DataSourceFactory getDataSourceFactory(org.apache.cayenne.configuration.DataNodeDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:void runGenerator(org.apache.cayenne.conn.DataSourceInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory$1:org.apache.cayenne.dba.DbAdapter get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory$1:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack getJoinStack()"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssembler:java.sql.PreparedStatement createStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleSelectTranslator:java.sql.PreparedStatement createStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void appendQueries(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedInsert(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void addFlattenedInsert(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,java.util.Collection,org.apache.cayenne.access.DataDomain,org.apache.cayenne.log.JdbcEventLogger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,java.util.Collection)",
            "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.log.JdbcEventLogger,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleSQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain$1:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:void access$000(org.apache.cayenne.access.DataDomainQueryAction)"
        ]
    },
    "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataPort:void execute()"
        ]
    },
    "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataPort:void execute()"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:org.apache.cayenne.map.DataMap loadDataMapFromDB(java.lang.String,java.lang.String,java.lang.String[],org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:org.apache.cayenne.map.DataMap loadDataMapFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()"
        ]
    },
    "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.BaseSchemaUpdateStrategy:void updateSchema(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:org.apache.cayenne.map.DataMap loadDataMapFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer access$000(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.OrderingTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.TrimmingQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler,java.lang.String)",
            "org.apache.cayenne.dba.mysql.MySQLQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.dba.JdbcAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.h2.H2MergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLMergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLMergerFactory$5:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.access.DataContext:void <init>(org.apache.cayenne.DataChannel,org.apache.cayenne.access.ObjectStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void <init>()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.ObjectContext createChildContext()",
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataContext createDataContext(boolean)",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createFromGenericChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createFromDataContext(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createdFromDataDomain(org.apache.cayenne.access.DataDomain)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.ResultIterator performIteratedQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.ResultIterator internalPerformIteratedQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.ResultIterator performIteratedQuery(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.DataRowStore getDataRowCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void <init>(org.apache.cayenne.DataChannel,org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.DataContext:void attachToChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRows(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.DataContext:void writeObject(java.io.ObjectOutputStream)",
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.HierarchicalObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void snapshotsChanged(org.apache.cayenne.access.event.SnapshotEvent)"
        ]
    },
    "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRowsFromParentContext(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRows(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void commitChangesToParent()",
            "org.apache.cayenne.access.DataContext:void commitChanges()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.QueryResponse performGenericQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.util.Collection)",
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler:boolean shouldProcessEvent(org.apache.cayenne.graph.GraphEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processUpdatedSnapshot(java.lang.Object,org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptPaginatedQuery()"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:void runQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:void executePostCache()",
            "org.apache.cayenne.CayenneContextQueryAction:void access$000(org.apache.cayenne.CayenneContextQueryAction)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void graphCommitted(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void send(org.apache.cayenne.graph.GraphDiff,org.apache.cayenne.event.EventSubject,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContextMergeHandler:boolean shouldProcessEvent(org.apache.cayenne.graph.GraphEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.CayenneContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.map.EntityResolver getEntityResolver()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.service.LocalConnection:java.lang.Object doSendMessage(org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.BaseContext:void attachToChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptOIDQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow,boolean)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow,boolean)"
        ]
    },
    "org.apache.cayenne.access.DataContext:java.lang.Object newObject(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent newObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.lang.Object newObject(java.lang.Class)"
        ]
    },
    "org.apache.cayenne.access.DataContext:void registerNewObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeElement(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object createObject(org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.CayenneDataObject:void willConnect(java.lang.String,org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.Persistent objectFromDataRow(org.apache.cayenne.DataRow,org.apache.cayenne.ObjectId,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:void <init>(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectDiff:void applySimplePropertyChanges(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver$InheritanceStrategy:org.apache.cayenne.reflect.ClassDescriptor descriptorForRow(org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.Persistent objectFromDataRow(org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.map.EntityResolver getEntityResolver()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void processUpdatedSnapshot(java.lang.Object,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader:void nodeCreated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.BaseRemoteService:java.lang.Object processMessage(org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.service.LocalConnection:java.lang.Object doSendMessage(org.apache.cayenne.remote.ClientMessage)"
        ]
    },
    "org.apache.cayenne.remote.service.LocalConnection:java.lang.Object doSendMessage(org.apache.cayenne.remote.ClientMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.BaseConnection:java.lang.Object sendMessage(org.apache.cayenne.remote.ClientMessage)"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRowsFromParentContext(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void runQuery()"
        ]
    },
    "org.apache.cayenne.util.ObjectContextGraphAction:void handlePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:void propertyChanged(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:void <init>(org.apache.cayenne.CayenneContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.RelationshipFault:java.util.List resolveFromDB()"
        ]
    },
    "org.apache.cayenne.BaseContext:void attachToChannel(org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void attachToChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.CayenneContext:void attachToChannel(org.apache.cayenne.DataChannel)"
        ]
    },
    "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.SimpleAttributeProperty:void resolveFault(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readProperty(java.lang.String)",
            "org.apache.cayenne.CayenneDataObject:void writeProperty(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void setToOneTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.ObjectContextDeleteAction:boolean performDelete(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent newObject(java.lang.String)",
            "org.apache.cayenne.access.DataContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:void registerNewObject(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.reflect.ClassDescriptor)"
        ]
    },
    "org.apache.cayenne.Cayenne:org.apache.cayenne.map.ObjEntity getObjEntity(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.PersistentObject:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.Cayenne:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.reflect.Property getProperty(org.apache.cayenne.Persistent,java.lang.String)"
        ]
    },
    "org.apache.cayenne.Cayenne:java.util.Map extractObjectId(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:java.util.Map compoundPKForObject(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContext:java.lang.Object newObject(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContext:void registerNewObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeElement(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object createObject(org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.CayenneDataObject:void willConnect(java.lang.String,org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent createFault(org.apache.cayenne.ObjectId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void graphCommitted(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.CayenneDataObject:void setToOneTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.CayenneDataObject:void setToOneTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:void validateForInsert(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void validateForUpdate(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLEncoder:void encodeSerializable(java.lang.String,org.apache.cayenne.xml.XMLSerializable)"
        ]
    },
    "org.apache.cayenne.ObjectContextDeleteAction:void deletePersistent(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ObjectContextDeleteAction:boolean performDelete(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ObjectContextDeleteAction:void deleteNew(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deletePersistent(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.PersistentObject:java.lang.Object getMapKey(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.cache.QueryCache getQueryCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.cache.QueryCache getQueryCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decode(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String)"
        ]
    },
    "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory$1:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack getJoinStack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String getCurrentAlias()",
            "org.apache.cayenne.access.trans.SelectTranslator:void resetJoinStack()",
            "org.apache.cayenne.access.trans.SelectTranslator:void dbRelationshipAdded(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack getJoinStack()"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack getJoinStack()"
        ]
    },
    "org.apache.cayenne.access.DataDomainSyncBucket:void appendQueries(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlushAction:void addFlattenedInsert(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.log.JdbcEventLogger,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.log.JdbcEventLogger)"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void objectNode(java.lang.Object,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomain$1:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void access$000(org.apache.cayenne.access.DataDomainQueryAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$2:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataPort:void execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.dbsync.BaseSchemaUpdateStrategy:void updateSchema(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.trans.TrimmingQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler,java.lang.String)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler,java.lang.String)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler,java.lang.String)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.DataContext:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.ObjectContext createChildContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataContext createDataContext(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataContext createDataContext()"
        ]
    },
    "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createFromGenericChannel(org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createContext(org.apache.cayenne.DataChannel)"
        ]
    },
    "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createFromDataContext(org.apache.cayenne.access.DataContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createContext(org.apache.cayenne.DataChannel)"
        ]
    },
    "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createdFromDataDomain(org.apache.cayenne.access.DataDomain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createContext()",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createContext(org.apache.cayenne.DataChannel)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataContext:void attachToChannel(org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void <init>(org.apache.cayenne.DataChannel,org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.BaseContext:void attachToRuntime(org.apache.cayenne.di.Injector)"
        ]
    },
    "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRows(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptObjectFromDataRowsQuery()"
        ]
    },
    "org.apache.cayenne.access.DataContext:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.QueryResponse onQueryNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List)",
            "org.apache.cayenne.access.HierarchicalObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.reflect.ClassDescriptor,boolean)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRows(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:void <init>(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void unregisterObjects(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:java.lang.Object unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void snapshotsChanged(org.apache.cayenne.access.event.SnapshotEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:void commitChangesToParent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:void commitChanges()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(java.lang.String)",
            "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cayenne.BaseContext:void invalidateObjects(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.BaseContext:void invalidateObjects(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextQueryAction:boolean interceptPaginatedQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:void executePostCache()",
            "org.apache.cayenne.CayenneContextQueryAction$1:java.lang.Object createObject()"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:void executePostCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()",
            "org.apache.cayenne.util.ObjectContextQueryAction:void access$000(org.apache.cayenne.util.ObjectContextQueryAction)"
        ]
    },
    "org.apache.cayenne.CayenneContextQueryAction:void access$000(org.apache.cayenne.CayenneContextQueryAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextQueryAction$1:java.lang.Object createObject()"
        ]
    },
    "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:void commitChanges()",
            "org.apache.cayenne.CayenneContext:void commitChangesToParent()",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.access.DataContext:void rollbackChanges()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContext:void rollbackChanges()"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()"
        ]
    },
    "org.apache.cayenne.access.DataContextQueryAction:boolean interceptOIDQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.DataContext$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object createObject(org.w3c.dom.Element,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void willConnect(java.lang.String,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.CayenneDataObject:void setToOneTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.Persistent objectFromDataRow(org.apache.cayenne.DataRow,org.apache.cayenne.ObjectId,org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.Persistent objectFromDataRow(org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:java.lang.Object convertObject(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.util.DeepMergeOperation,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.QueryResponse execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.QueryResponse onQueryNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseArcProperty:void setReverse(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseArcProperty:void setReverse(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:void executePostCache()"
        ]
    },
    "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:boolean isNoop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:void applySimplePropertyChanges(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectDiff:void access$200(org.apache.cayenne.access.ObjectDiff,org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List synchronizedObjectsFromDataRows(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.Persistent objectFromDataRow(org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void nodeCreated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void processDeletedID(java.lang.Object)",
            "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deletePersistent(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handleSimplePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handleArcPropertyChange(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ArcProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handleArcPropertyChange(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ArcProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.ObjectStore:void snapshotsChanged(org.apache.cayenne.access.event.SnapshotEvent)"
        ]
    },
    "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void appendQueries(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.CayenneContextChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.remote.service.BaseRemoteService:java.lang.Object processMessage(org.apache.cayenne.remote.ClientMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.hessian.HessianConnection:java.lang.Object doSendMessage(org.apache.cayenne.remote.ClientMessage)"
        ]
    },
    "org.apache.cayenne.remote.BaseConnection:java.lang.Object sendMessage(org.apache.cayenne.remote.ClientMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:java.lang.Object send(org.apache.cayenne.remote.ClientMessage,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:void runQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.BaseContext:void propertyChanged(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectHolder:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void writeProperty(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.CayenneDataObject:void setToOneTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)"
        ]
    },
    "org.apache.cayenne.access.DataContextQueryAction:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.CayenneContextQueryAction:void <init>(org.apache.cayenne.CayenneContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.util.RelationshipFault:java.util.List resolveFromDB()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:java.util.List resolvedObjectList()",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map resolvedObjectMap()",
            "org.apache.cayenne.util.PersistentObjectSet:java.util.Set resolvedObjectSet()"
        ]
    },
    "org.apache.cayenne.CayenneContext:void attachToChannel(org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:void attachToRuntime(org.apache.cayenne.di.Injector)",
            "org.apache.cayenne.CayenneContext:void <init>(org.apache.cayenne.DataChannel,boolean,boolean)"
        ]
    },
    "org.apache.cayenne.reflect.SimpleAttributeProperty:void resolveFault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.SimpleAttributeProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:java.lang.Object readProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectBaseProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readSimpleProperty(java.lang.String)",
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.CayenneDataObject:void setToOneTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void writeProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTObjPath:void injectValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectBaseProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void setToOneTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:void setTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)",
            "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)"
        ]
    },
    "org.apache.cayenne.ObjectContextDeleteAction:boolean performDelete(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:void deleteObjects(java.lang.Object[])",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.CayenneContext:void registerNewObject(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:java.lang.Object newObject(java.lang.Class)",
            "org.apache.cayenne.CayenneContext:void registerNewObject(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.PersistentObject:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectHolder:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectHolder:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.Cayenne:org.apache.cayenne.reflect.Property getProperty(org.apache.cayenne.Persistent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:java.lang.Object readSimpleProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:long longPKForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:int intPKForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.DataObjectUtils:java.lang.Object pkForObject(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.Cayenne:java.util.Map compoundPKForObject(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:java.util.Map compoundPKForObject(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,int)"
        ]
    },
    "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,int)"
        ]
    },
    "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void validateForInsert(org.apache.cayenne.validation.ValidationResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void validateForUpdate(org.apache.cayenne.validation.ValidationResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)"
        ]
    },
    "org.apache.cayenne.xml.XMLEncoder:void encodeSerializable(java.lang.String,org.apache.cayenne.xml.XMLSerializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLEncoder:void encodeProperty(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cayenne.ObjectContextDeleteAction:void deleteNew(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ObjectContextDeleteAction:boolean performDelete(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,org.apache.cayenne.ObjectContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.BaseSchemaUpdateStrategy:void updateSchema(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String getCurrentAlias()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:void resetJoinStack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:void dbRelationshipAdded(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)"
        ]
    },
    "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.log.JdbcEventLogger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void objectNode(java.lang.Object,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void objectNode(java.lang.Object,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain$2:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.RowDescriptor getDescriptor(org.apache.cayenne.access.types.ExtendedTypeMap)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQueryInTransaction()"
        ]
    },
    "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.AggregateConditionNode:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.parser.ASTNotIn:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression transform(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction$2:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlushAction:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:java.util.Map getNameTablesInDB(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void reconnect()",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.JdbcPkGenerator:boolean autoPkTableExists(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.JdbcPkGenerator:int runUpdate(org.apache.cayenne.access.DataNode,java.lang.String)",
            "org.apache.cayenne.merge.AbstractToDbToken:void executeSql(org.apache.cayenne.merge.MergerContext,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void reconnect()"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2Adapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.derby.DerbyAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.ingres.IngresAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8QualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.postgres.PostgresAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataContext createDataContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:void <init>(org.apache.cayenne.access.DataDomain)"
        ]
    },
    "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createContext(org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.ObjectContext getContext(org.apache.cayenne.DataChannel)"
        ]
    },
    "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalClientServerChannelProvider:org.apache.cayenne.DataChannel get()",
            "org.apache.cayenne.configuration.web.SessionContextRequestHandler:void requestStart(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.ObjectContext getContext()",
            "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.DataChannel createChannel()"
        ]
    },
    "org.apache.cayenne.access.DataContextQueryAction:boolean interceptObjectFromDataRowsQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptInternalQuery()"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.QueryResponse onQueryNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain$DataDomainQueryFilterChain:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.reflect.ClassDescriptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolverNode:void <init>(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.access.DataContext:void unregisterObjects(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ObjectStore:java.lang.Object unregisterNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deleteNew(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()"
        ]
    },
    "org.apache.cayenne.BaseContext:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.access.DataContext:void rollbackChanges()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContext:void rollbackChanges()"
        ]
    },
    "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseArcProperty:void setReverse(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseArcProperty:void setReverse(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.CayenneContextQueryAction$1:java.lang.Object createObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.access.DataContext:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRowsFromParentContext(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.QueryResponse performGenericQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContext:java.util.List performQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void runQuery()"
        ]
    },
    "org.apache.cayenne.CayenneContext:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRowsFromParentContext(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void runQuery()",
            "org.apache.cayenne.CayenneContext:java.util.List performQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.QueryResponse performGenericQuery(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:void access$000(org.apache.cayenne.util.ObjectContextQueryAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction$1:java.lang.Object createObject()"
        ]
    },
    "org.apache.cayenne.CayenneContext:void commitChanges()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContext:void commitChangesToParent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.DataContext:void rollbackChanges()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:org.apache.cayenne.graph.GraphDiff onContextRollback(org.apache.cayenne.ObjectContext)"
        ]
    },
    "org.apache.cayenne.CayenneContext:void rollbackChanges()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:org.apache.cayenne.graph.GraphDiff onContextRollback(org.apache.cayenne.ObjectContext)"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRowsFromParentContext(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void runQuery()"
        ]
    },
    "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decode(java.io.Reader,java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)"
        ]
    },
    "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:java.lang.Object convertObject(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.util.DeepMergeOperation,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)"
        ]
    },
    "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.reflect.BaseArcProperty:void setReverse(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.BaseToOneProperty:void setTarget(java.lang.Object,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitProperties(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitProperties(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)"
        ]
    },
    "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)"
        ]
    },
    "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.access.DataContext:void rollbackChanges()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContext:void rollbackChanges()"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:void access$200(org.apache.cayenne.access.ObjectDiff,org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$2:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:java.util.List synchronizedObjectsFromDataRows(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRows(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.access.PrefetchProcessorNode synchronizedRootResultNodeFromDataRows(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List synchronizedObjectsFromDataRows(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void processDeletedID(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)"
        ]
    },
    "org.apache.cayenne.util.ObjectContextGraphAction:void handleSimplePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextGraphAction:void handlePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.ObjectContextGraphAction:void handleArcPropertyChange(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ArcProperty,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextGraphAction:void handlePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void runWithEventsDisabled(java.lang.Runnable)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler$2:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void runWithEventsDisabled(java.lang.Runnable)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler$3:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void runWithEventsDisabled(java.lang.Runnable)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataChannelSyncCallbackAction$FlushCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.DataChannelSyncCallbackAction$RollbackCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:void rollbackChanges()",
            "org.apache.cayenne.CayenneContext:void rollbackChangesLocally()"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.hessian.HessianConnection:java.lang.Object doSendMessage(org.apache.cayenne.remote.ClientMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.BaseConnection:java.lang.Object sendMessage(org.apache.cayenne.remote.ClientMessage)"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:java.lang.Object send(org.apache.cayenne.remote.ClientMessage,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.map.EntityResolver getEntityResolver()"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:org.apache.cayenne.QueryResponse execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectHolder:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.PersistentObjectList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectHolder:void resolve()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectHolder:java.lang.Object getValue()",
            "org.apache.cayenne.util.PersistentObjectHolder:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.util.List resolvedObjectList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ToManyList:int hashCode()",
            "org.apache.cayenne.util.IndexPropertyList:java.util.List unwrapList()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object getValue()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void clear()",
            "org.apache.cayenne.util.PersistentObjectList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int hashCode()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object get(int)",
            "org.apache.cayenne.util.PersistentObjectList:int indexOf(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:boolean isEmpty()",
            "org.apache.cayenne.util.PersistentObjectList:java.util.Iterator iterator()",
            "org.apache.cayenne.util.PersistentObjectList:int lastIndexOf(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator()",
            "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator(int)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.PersistentObjectList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int size()",
            "org.apache.cayenne.util.PersistentObjectList:java.util.List subList(int,int)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.util.Map resolvedObjectMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object getValue()",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void clear()",
            "org.apache.cayenne.util.PersistentObjectMap:boolean containsKey(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:boolean containsValue(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Set entrySet()",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:boolean isEmpty()",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Set keySet()",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void putAll(java.util.Map)",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:int size()",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Collection values()",
            "org.apache.cayenne.util.PersistentObjectMap:void putDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void removeDirectly(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:java.util.Set resolvedObjectSet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object getValue()",
            "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void clear()",
            "org.apache.cayenne.util.PersistentObjectSet:boolean contains(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:int hashCode()",
            "org.apache.cayenne.util.PersistentObjectSet:boolean isEmpty()",
            "org.apache.cayenne.util.PersistentObjectSet:java.util.Iterator iterator()",
            "org.apache.cayenne.util.PersistentObjectSet:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:int size()",
            "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object[] toArray()",
            "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.CayenneContext:void <init>(org.apache.cayenne.DataChannel,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.CayenneContextFactory:org.apache.cayenne.ObjectContext createContext(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.CayenneContext:void <init>(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.ObjectContext createChildContext()"
        ]
    },
    "org.apache.cayenne.reflect.SimpleAttributeProperty:java.lang.Object readProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readSimpleProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.SimpleAttributeProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectBaseProperty:java.lang.Object readProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connect(org.apache.cayenne.Persistent,java.util.List)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readSimpleProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:java.lang.Object readSimpleProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readNestedProperty(java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTObjPath:void injectValue(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTEqual:void injectValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectBaseProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:void setTarget(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.Util$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.Util$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.BaseContext:void deleteObjects(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.BaseContext:void deleteObject(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.Cayenne:java.lang.Object readSimpleProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.Cayenne:long longPKForObject(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:long longPKForObject(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.Cayenne:int intPKForObject(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:int intPKForObject(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object pkForObject(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.DataObjectUtils:java.util.Map compoundPKForObject(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseArcProperty$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseArcProperty$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.xml.XMLEncoder:void encodeProperty(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeProperty(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processColumn(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.TrimmingQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void access$000(org.apache.cayenne.access.trans.SelectTranslator,java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void objectNode(java.lang.Object,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void objectNode(java.lang.Object,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List buildResultColumns()"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.TraversalHandler)",
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.access.DataDomain$2:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.RowDescriptor getDescriptor(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.ResultIterator internalPerformIteratedQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain$DataDomainSyncFilterChain:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void runQueryInTransaction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$1:java.lang.Object createObject()",
            "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.QueryResponse execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptOIDQuery()"
        ]
    },
    "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void appendQueries(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.exp.parser.AggregateConditionNode:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression transform(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression transform(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotIn:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression transform(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression transform(org.apache.commons.collections.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.QualifierTranslator:org.apache.cayenne.exp.Expression extractQualifier()",
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator:void doAppendPart(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression expWithParameters(java.util.Map,boolean)",
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression deepCopy()",
            "org.apache.cayenne.map.DbEntity:org.apache.cayenne.exp.Expression translateToRelatedEntity(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.exp.Expression translateToDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.exp.Expression translateToRelatedEntity(org.apache.cayenne.exp.Expression,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PooledConnectionImpl:void reconnect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.ConnectionWrapper:void reconnect(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2PkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.ingres.IngresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.ingres.IngresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OraclePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:boolean autoPkTableExists(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:int runUpdate(org.apache.cayenne.access.DataNode,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)"
        ]
    },
    "org.apache.cayenne.merge.AbstractToDbToken:void executeSql(org.apache.cayenne.merge.MergerContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2Adapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8QualifierTranslator:void <init>(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8Adapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannel:void <init>(org.apache.cayenne.access.DataDomain)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.DataChannel createChannel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.remote.service.ServerSession createServerSession()",
            "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.remote.service.ServerSession createServerSession(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataContextQueryAction:boolean interceptInternalQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:void executePostCache()"
        ]
    },
    "org.apache.cayenne.access.DataDomain$DataDomainQueryFilterChain:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void graphCommitted(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.access.DataContext:java.util.List performQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.List performQuery(java.lang.String,java.util.Map,boolean)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.util.RelationshipFault:java.util.List resolveFromDB()",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.CayenneContext:java.util.List performQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.util.RelationshipFault:java.util.List resolveFromDB()",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.CayenneContext:org.apache.cayenne.QueryResponse performGenericQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.util.Collection)",
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.lang.Object[])",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction$1:java.lang.Object createObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.BaseContext:org.apache.cayenne.graph.GraphDiff onContextRollback(org.apache.cayenne.ObjectContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decode(java.io.Reader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToOneProperty:void setTarget(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.Util$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.Util$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitProperties(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.access.DataRowUtils:void refreshObjectWithSnapshot(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow,boolean)",
            "org.apache.cayenne.access.DataRowUtils:void forceMergeWithSnapshot(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.ObjectDiff:void <init>(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectDiff:void applySimplePropertyChanges(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void shallowMerge(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSuperclassProperties(org.apache.cayenne.reflect.PersistentDescriptor)",
            "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff$2:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver:org.apache.cayenne.access.PrefetchProcessorNode resolveObjectTree(org.apache.cayenne.query.PrefetchTreeNode,java.util.List,java.util.Map)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:org.apache.cayenne.access.PrefetchProcessorNode buildTree(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.util.Collection adjacentJointNodes()",
            "org.apache.cayenne.query.PrefetchTreeNode:java.util.Collection jointNodes()",
            "org.apache.cayenne.query.PrefetchTreeNode:java.util.Collection disjointNodes()",
            "org.apache.cayenne.query.PrefetchTreeNode:java.util.Collection nonPhantomNodes()",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.access.PrefetchProcessorNode synchronizedRootResultNodeFromDataRows(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List)"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void runWithEventsDisabled(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.CayenneContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.CayenneContextMergeHandler:void merge(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction$FlushCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataChannelSyncCallbackAction:org.apache.cayenne.DataChannelSyncCallbackAction getCallbackAction(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction$RollbackCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataChannelSyncCallbackAction:org.apache.cayenne.DataChannelSyncCallbackAction getCallbackAction(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.CayenneContext:void rollbackChangesLocally()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.map.EntityResolver getEntityResolver()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.service.LocalConnection:java.lang.Object doSendMessage(org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.BaseContext:void attachToChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.jdbc.BindDirective:void bind(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ParameterBinding)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void addMultiColumnOperand(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void <init>(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery,org.apache.cayenne.ejbql.EJBQLCompiledExpression,org.apache.cayenne.access.jdbc.EJBQLTranslatorFactory)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void pushMarker(java.lang.String,boolean)",
            "org.apache.cayenne.access.jdbc.ResultDirective:void bindResult(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ColumnDescriptor)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void initDefaultFactories()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void addFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.access.DataDomain:void addFilter(org.apache.cayenne.DataChannelFilter)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void addDirtyObject(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean add(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void registerLifecycleEventInducedChange(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void addObject(org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.QueryResult:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.QueryResult:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.QueryResult:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataChannelChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataNodeChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.conn.PoolManager:int growPool(int,java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection uncheckConnection(javax.sql.PooledConnection)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.h2.H2MergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLMergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$5:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void push(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.dba.TypesMapping:void <init>(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.ListProvider:void add(org.apache.cayenne.di.Provider)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addEntityResult(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:void addPath(org.apache.cayenne.ejbql.parser.EJBQLPath)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void pushNode(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void openNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.event.DefaultEventManager$Dispatch:boolean fire(org.apache.cayenne.util.Invocation)",
            "org.apache.cayenne.event.DefaultEventManager:void <init>(int)",
            "org.apache.cayenne.event.DefaultEventManager:void postNonBlockingEvent(java.util.EventObject,org.apache.cayenne.event.EventSubject)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void pushNode(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void openNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:void add(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void registerDiff(org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void addJoin(org.apache.cayenne.map.DbJoin)",
            "org.apache.cayenne.map.EntityInheritanceTree:void addChildNode(org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.EntityResult:void addField(org.apache.cayenne.map.EntityResult$FieldResult)",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.map.QueryLoader:void addOrdering(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.QueryLoader:void addPrefetch(java.lang.String)",
            "org.apache.cayenne.map.SQLResult:void addEntityResult(org.apache.cayenne.map.EntityResult)",
            "org.apache.cayenne.map.SQLResult:void addColumnResult(java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkPrimaryKeyChange(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.query.DeleteBatchQuery:void add(java.util.Map)",
            "org.apache.cayenne.query.InsertBatchQuery:void add(java.util.Map,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void addResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode$AdjacentJoinsOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void addChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.ProcedureQuery:void addResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.query.QueryChain:void addQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void addOrdering(org.apache.cayenne.query.Ordering)",
            "org.apache.cayenne.query.UpdateBatchQuery:void add(java.util.Map,java.util.Map,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void addFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addDefaultCallback(org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addCallback(java.lang.Class,org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addRootDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void addAccessor(org.apache.cayenne.reflect.Accessor)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.EntityMergeSupport:void addEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)",
            "org.apache.cayenne.util.GenericResponse:void addBatchUpdateCount(int[])",
            "org.apache.cayenne.util.GenericResponse:void addUpdateCount(int)",
            "org.apache.cayenne.util.GenericResponse:void addResultList(java.util.List)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.PersistentObjectList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void addDirectly(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:void addClassPath(java.lang.String)",
            "org.apache.cayenne.util.ResourceLocator:void addFilesystemPath(java.lang.String)",
            "org.apache.cayenne.validation.ValidationResult:void addFailure(org.apache.cayenne.validation.ValidationFailure)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.BaseContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.BaseContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.BaseContext$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void addOperation(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssembler:void addToParamList(org.apache.cayenne.map.DbAttribute,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:void add(int,java.lang.Object)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void add(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object remove(int)",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object remove(int)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void removeFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.DataDomain:void removeFilter(org.apache.cayenne.DataChannelFilter)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean remove(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void removeConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void removeJoin(org.apache.cayenne.map.DbJoin)",
            "org.apache.cayenne.map.EntityResolver:void removeDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjRelationship:void removeDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void removeResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(java.lang.String)",
            "org.apache.cayenne.query.ProcedureQuery:void removeResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.query.QueryChain:boolean removeQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void removeOrdering(org.apache.cayenne.query.Ordering)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void removeFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void removeDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.EntityMergeSupport:void removeEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)",
            "org.apache.cayenne.util.PersistentObjectList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void removeDirectly(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectList:void clear()",
            "org.apache.cayenne.util.PersistentObjectList:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String registerReusableJoin(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String createIdAlias(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void rebindParameter(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindParameter(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String getTableAlias(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.ResultDirective:void <clinit>()",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.RowDescriptorBuilder overrideColumnType(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.SQLTemplateResourceManager:org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int,java.lang.String)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedEnumType:void register(java.lang.Enum,java.lang.Object)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void registerType(org.apache.cayenne.access.types.ExtendedType)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void <clinit>()",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedInsert(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void addDirtyObject(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void <clinit>()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectDiff:org.apache.cayenne.ObjectId getArcSnapshotValue(java.lang.String)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void updateArcSnapshot(java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.access.ObjectStore:void processIdChange(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void registerNode(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void putResolved(java.util.Map,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.access.jdbc.ColumnDescriptor appendColumn(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.QueryResult:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.QueryResult:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.QueryResult:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.Transaction:boolean addConnection(java.lang.String,java.sql.Connection)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object putArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.MapQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification nonNullSpec(java.lang.String)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void attachToScope(javax.sql.DataSource)",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataChannelChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.dba.TypesHandler:org.apache.cayenne.dba.TypesHandler getHandler(java.net.URL)",
            "org.apache.cayenne.dba.TypesMapping:void <init>(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.TypesMapping:void <clinit>()",
            "org.apache.cayenne.di.spi.DefaultInjector:void putBinding(org.apache.cayenne.di.Key,org.apache.cayenne.di.Provider)",
            "org.apache.cayenne.di.spi.MapProvider:void put(java.lang.String,org.apache.cayenne.di.Provider)",
            "org.apache.cayenne.ejbql.parser.Compiler$FromItemVisitor:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)",
            "org.apache.cayenne.ejbql.parser.Compiler$JoinVisitor:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQLSum:void <clinit>()",
            "org.apache.cayenne.event.DefaultEventManager:org.apache.cayenne.event.DispatchQueue dispatchQueueForSubject(org.apache.cayenne.event.EventSubject,boolean)",
            "org.apache.cayenne.event.DispatchQueue:java.util.Collection invocationsForSender(java.lang.Object,boolean)",
            "org.apache.cayenne.event.EventSubject:org.apache.cayenne.event.EventSubject getSubject(java.lang.Class,java.lang.String)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void registerDiff(org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.graph.GraphMap:void registerNode(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:void <clinit>()",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.MapLoader:void <init>()",
            "org.apache.cayenne.map.MapLoader:void processStartDataMapProperty(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:void addAttributeOverride(java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.QueryLoader:void addSql(java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.QueryLoader:void addProperty(java.lang.String,java.lang.String)",
            "org.apache.cayenne.merge.DefaultValueForNullProvider:void set(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute,java.lang.Object,int)",
            "org.apache.cayenne.query.BatchQuery:java.lang.Object getValue(java.util.Map,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.EJBQLQuery:void setParameter(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.query.EJBQLQuery:void setParameter(int,java.lang.Object)",
            "org.apache.cayenne.query.ProcedureQuery:void addParameter(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.query.QueryMetadataWrapper:void override(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.query.SelectQueryMetadata:void addPathSplitAliases(java.lang.String,java.lang.String[])",
            "org.apache.cayenne.query.SQLTemplate:void setTemplate(java.lang.String,java.lang.String)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void addDescriptor(java.lang.String,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.reflect.ConverterFactory:void <init>()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addCallback(java.lang.Class,org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addSuperProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addDeclaredProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addSubclassDescriptor(java.lang.String,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addDbField(java.lang.String,java.lang.String)",
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.reflect.SingletonFaultFactory:org.apache.cayenne.Fault getMapFault(org.apache.cayenne.reflect.Accessor)",
            "org.apache.cayenne.remote.service.HttpRemoteService:void saveSharedChannel(java.lang.String,org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.NameConverter:void <clinit>()",
            "org.apache.cayenne.util.NamedObjectFactory:void <clinit>()",
            "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void putDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.xml.XMLDecoder:void <clinit>()",
            "org.apache.cayenne.BaseContext:void setUserProperty(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void writePropertyDirectly(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void setMarker(java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectMap:void clear()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void unregisterType(java.lang.String)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataNode:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void processIdChange(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void processDeletedID(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object removeArc(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeOutgoing(java.lang.Object)",
            "org.apache.cayenne.cache.MapQueryCache:void remove(java.lang.String)",
            "org.apache.cayenne.configuration.web.WebConfiguration:java.util.Map getOtherParameters()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeAllListeners(org.apache.cayenne.event.EventSubject)",
            "org.apache.cayenne.graph.GraphMap:java.lang.Object unregisterNode(java.lang.Object)",
            "org.apache.cayenne.query.ProcedureQuery:void removeParameter(java.lang.String)",
            "org.apache.cayenne.query.SQLTemplate:void removeTemplate(java.lang.String)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void removeDescriptor(java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void removeDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:void removeDirectly(java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.ObjectContextChangeLog:void removeMarker(java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.jdbc.BindDirective:void bind(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ParameterBinding)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextUniqueRow()",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.DbAttribute,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.ResultDirective:void bindResult(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ColumnDescriptor)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void initDefaultFactories()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void addFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void registerLifecycleEventInducedChange(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void reset(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:boolean runDirectDFS()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataChannelChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataNodeChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:void addPath(org.apache.cayenne.ejbql.parser.EJBQLPath)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.map.CallbackDescriptor:void addCallbackMethod(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.EntityInheritanceTree:void addChildNode(org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.EntityResult:void addField(org.apache.cayenne.map.EntityResult$FieldResult)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void addResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode$AdjacentJoinsOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void addChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.QueryChain:void addQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addDefaultCallback(org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addCallback(java.lang.Class,org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addRootDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void addAccessor(org.apache.cayenne.reflect.Accessor)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean addLocal(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean removeLocal(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void addDirectly(java.lang.Object)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:boolean addAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void removeFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.map.CallbackDescriptor:void removeCallbackMethod(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.EntityResolver:void removeDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.query.PrefetchSelectQuery:void removeResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(java.lang.String)",
            "org.apache.cayenne.query.QueryChain:boolean removeQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void removeDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean addLocal(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean removeLocal(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void removeDirectly(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void nodeIdChanged(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:void clear()",
            "org.apache.cayenne.util.PersistentObjectSet:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectHolder:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object getValue()"
        ]
    },
    "org.apache.cayenne.access.ToManyList:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:int hashCode()",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.access.ToManyList:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int hashCode()"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:java.util.List unwrapList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:void sort()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object getValue()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendInserts(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendDeletes(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataNodeDescriptor cloneDataNodeDescriptor(org.apache.cayenne.configuration.DataNodeDescriptor,org.apache.cayenne.configuration.DataChannelDescriptor)",
            "org.apache.cayenne.dba.AutoAdapter:void <clinit>()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:void addAll(java.util.Collection)",
            "org.apache.cayenne.map.DbRelationship:void setJoins(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void <init>(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.Procedure:void setCallParameters(java.util.List)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.SelectQuery:void addOrderings(java.util.List)",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void clear()",
            "org.apache.cayenne.access.ListWithPrefetches:void clear()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void close()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void clearFactories()",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.di.spi.InjectionStack:void reset()",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void reset()",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void reset()",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void removeAllJoins()",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.ObjRelationship:void clearDbRelationships()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.Procedure:void clearCallParameters()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void clearFactories()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void clear()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void clear()",
            "org.apache.cayenne.util.GenericResponse:void clear()",
            "org.apache.cayenne.util.PersistentObjectList:void clear()",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean contains(java.lang.Object)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.event.EventBridge:void onExternalEvent(org.apache.cayenne.event.CayenneEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:boolean isGeneric()",
            "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.query.DeleteBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.UpdateBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.util.PersistentObjectList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:int hashCode()",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.access.ToManyList:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int hashCode()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.EntityResultSegment nextEntityResult()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String nextColumnAlias()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForUpdatedLOBColumns()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:org.apache.cayenne.DataChannelFilter nextFilter()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object get(int)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node rootNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node rootNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToDependentEntity()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToPK()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.DeleteBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.InsertBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.InsertBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.UpdateBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:java.util.List currentList()",
            "org.apache.cayenne.util.GenericResponse:int[] currentUpdateCount()",
            "org.apache.cayenne.util.GenericResponse:boolean isList()",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object get(int)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object get(int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:org.apache.cayenne.graph.GraphDiff get(int)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.ListWithPrefetches:int indexOf(java.lang.Object)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int indexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataPort:void execute()",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void sendUpdateNotification(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DbGenerator:boolean isEmpty(boolean)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean isEmpty()",
            "org.apache.cayenne.access.ListWithPrefetches:boolean isEmpty()",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:boolean hasNext()",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceDefiningTargetPrecenseAndType(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.query.PrefetchTreeNode:boolean hasChildren()",
            "org.apache.cayenne.query.QueryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.query.QueryChain:boolean isEmpty()",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean isEmpty()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void setDiscriminatorColumns(java.util.Collection)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean hasSubclasses()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean isEmpty()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.PersistentObjectList:boolean isEmpty()",
            "org.apache.cayenne.util.RelationshipFault:java.util.List resolveFromDB()",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateNotEmpty(java.lang.Object,java.lang.String,java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.util.Collection)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.Iterator iterator()",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:java.util.Iterator getObjectIterator()",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.Iterator iterator()",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:int lastIndexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:int lastIndexOf(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:java.util.ListIterator listIterator()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()",
            "org.apache.cayenne.conn.PoolManager:void shutdown()",
            "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.ListIterator listIterator(int)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator(int)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.IdRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void <init>(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:boolean hasExceptions()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:void <init>(org.apache.cayenne.access.DataDomain)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:int size()",
            "org.apache.cayenne.access.ListWithPrefetches:int size()",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void afterInit()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:int getPoolSize()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyInUse()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyUnused()",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:boolean canCreatePK(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.exp.Expression:java.util.List filterObjects(java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getTargetAttributes()",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getSourceAttributes()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.EntityInheritanceTree:int getChildrenCount()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isFlattened()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.DeleteBatchQuery:int size()",
            "org.apache.cayenne.query.InsertBatchQuery:int size()",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:int size()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int defaultListenersSize()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:int size()",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:boolean next()",
            "org.apache.cayenne.util.GenericResponse:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:int size()",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:void <init>(java.util.List,int,int)",
            "org.apache.cayenne.ObjectContextChangeLog:void setMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffs()",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffsAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:int size()",
            "org.apache.cayenne.ObjectContextChangeLog:int sizeAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.util.List subList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.IncrementalFaultList:java.util.List subList(int,int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.List subList(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.util.List subList(int,int)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.List subList(int,int)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:java.lang.Object writeReplace()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:java.lang.Object[] toArray(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray()",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:org.apache.cayenne.util.EntityMergeListener[] getEntityMergeListeners()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object getValue()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateResourceManager:void clearCache()",
            "org.apache.cayenne.access.DataDomain:void resetProperties()",
            "org.apache.cayenne.access.DataDomain:void reset()",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.QueryResult:void clear()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeOutgoing(java.lang.Object)",
            "org.apache.cayenne.cache.MapQueryCache:void clear()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.dba.JdbcPkGenerator:void reset()",
            "org.apache.cayenne.map.EntityResolver:void clearCache()",
            "org.apache.cayenne.query.ProcedureQuery:void setParameters(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void clearParameters()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void clearDescriptors()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void clear()",
            "org.apache.cayenne.util.DeepMergeOperation:void reset()",
            "org.apache.cayenne.util.ObjectDetachOperation:void reset()",
            "org.apache.cayenne.util.PersistentObjectMap:void clear()",
            "org.apache.cayenne.CayenneDataObject:void setPersistenceState(int)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean checkNullParameter(org.apache.cayenne.ejbql.EJBQLExpression,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String createIdAlias(java.lang.String)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:boolean isOverriden(java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedEnumType:void register(java.lang.Enum,java.lang.Object)",
            "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Enum lookup(java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.ObjectDiff:boolean containsArcSnapshot(java.lang.String)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean containsVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean hasArc(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:boolean isReflexive(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void attachToScope(javax.sql.DataSource)",
            "org.apache.cayenne.exp.Expression$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.merge.DefaultValueForNullProvider:boolean hasValueFor(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.QueryMetadataWrapper:boolean overrideExists(java.lang.String)",
            "org.apache.cayenne.util.PersistentObjectMap:boolean containsKey(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readSimpleProperty(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:boolean hasMarker(java.lang.String)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedEnumType:void register(java.lang.Enum,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Set entrySet()",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:java.util.Collection getOverrides(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean checkNullParameter(org.apache.cayenne.ejbql.EJBQLExpression,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Map,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$ObjectMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String resolveId(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindPositionalParameter(int)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindNamedParameter(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.Object getBoundParameter(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String getTableAlias(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String guessType(java.lang.String)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.jdbc.SQLTemplateResourceManager:org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int,java.lang.String)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:org.apache.cayenne.map.DbAttribute getAttribute(java.lang.String)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:java.lang.Object getValue(java.lang.String)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Enum lookup(java.lang.Object)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getRegisteredType(java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getExplictlyRegisteredType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataNode getNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataNode lookupDataNode(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedInsert(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.access.ObjectDiff objectDiff(java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:org.apache.cayenne.query.Query queryForExecutedQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainSyncBucket$PropagatedValueFactory:java.lang.Object create()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void addDirtyObject(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$4:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.DataRowUtils:void forceMergeWithSnapshot(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff:java.lang.Object getSnapshotValue(java.lang.String)",
            "org.apache.cayenne.access.ObjectDiff:org.apache.cayenne.ObjectId getArcSnapshotValue(java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void processDeletedID(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processUpdatedSnapshot(java.lang.Object,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.ObjectStore:java.lang.Object getNode(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:java.lang.Object getNodeNoSync(java.lang.Object)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.Persistent getResolved(java.util.Map)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.access.jdbc.ColumnDescriptor appendColumn(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.QueryResult:java.util.List getResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.QueryResult:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.QueryResult:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object resolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.access.Transaction:java.sql.Connection getConnection(java.lang.String)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object putArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object getArc(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object removeArc(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int outgoingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean hasArc(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter$DbEntityComparator:int compare(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.MapQueryCacheFactory:org.apache.cayenne.cache.QueryCache getQueryCache(java.util.Map)",
            "org.apache.cayenne.cache.OSQueryCache:java.lang.String getCronExpression(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:int getRrefreshPeriod(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification nonNullSpec(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification getRefreshSpecification(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultRuntimeProperties:java.lang.String get(java.lang.String)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.TypesHandler:org.apache.cayenne.dba.TypesHandler getHandler(java.net.URL)",
            "org.apache.cayenne.dba.TypesHandler:java.lang.String[] externalTypesForJdbcType(int)",
            "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByName(java.lang.String)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String getSqlNameByType(int)",
            "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByJava(java.lang.String)",
            "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByJava(java.lang.Class)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String getJavaBySqlType(int)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String getJavaBySqlType(int,int,int)",
            "org.apache.cayenne.dba.TypesMapping:void <init>(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.di.spi.DefaultInjector:org.apache.cayenne.di.spi.Binding getBinding(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultInjector:void changeBindingScope(org.apache.cayenne.di.Key,org.apache.cayenne.di.Scope)",
            "org.apache.cayenne.di.spi.DefaultInjector:org.apache.cayenne.di.Provider getProvider(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.ejbql.parser.CompiledExpression:org.apache.cayenne.reflect.ClassDescriptor getEntityDescriptor(java.lang.String)",
            "org.apache.cayenne.ejbql.parser.CompiledExpression:java.util.List getIncomingRelationships(java.lang.String)",
            "org.apache.cayenne.ejbql.parser.Compiler$JoinVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLSum:java.lang.String getJavaType(java.lang.String)",
            "org.apache.cayenne.event.DefaultEventManager:org.apache.cayenne.event.DispatchQueue dispatchQueueForSubject(org.apache.cayenne.event.EventSubject,boolean)",
            "org.apache.cayenne.event.DispatchQueue:java.util.Collection invocationsForSender(java.lang.Object,boolean)",
            "org.apache.cayenne.event.EventSubject:org.apache.cayenne.event.EventSubject getSubject(java.lang.Class,java.lang.String)",
            "org.apache.cayenne.event.JavaGroupsBridgeFactory:org.apache.cayenne.event.EventBridge createJavaGroupsBridge(java.util.Collection,java.lang.String,java.util.Map)",
            "org.apache.cayenne.event.JMSBridgeFactory:org.apache.cayenne.event.EventBridge createEventBridge(java.util.Collection,java.lang.String,java.util.Map)",
            "org.apache.cayenne.event.XMPPBridgeFactory:org.apache.cayenne.event.EventBridge createEventBridge(java.util.Collection,java.lang.String,java.util.Map)",
            "org.apache.cayenne.exp.parser.ASTDbPath:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.Expression$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void registerDiff(org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.graph.GraphMap:java.lang.Object getNode(java.lang.Object)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Embeddable getEmbeddable(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.SQLResult getResult(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityInheritanceTree lookupInheritanceTree(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.query.Query lookupQuery(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DbEntity _lookupDbEntity(java.lang.Object)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity _lookupObjEntity(java.lang.String)",
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Attribute getAttribute(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.PathComponentIterator:org.apache.cayenne.map.PathComponent next()",
            "org.apache.cayenne.merge.DefaultValueForNullProvider:org.apache.cayenne.access.jdbc.ParameterBinding get(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BatchQuery:java.lang.Object getValue(java.util.Map,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.NamedQuery:int hashCode()",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String getCacheKey()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.query.QueryMetadataWrapper:boolean isFetchingDataRows()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getPageSize()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getFetchLimit()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getStatementFetchSize()",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SQLTemplate:java.lang.String getTemplate(java.lang.String)",
            "org.apache.cayenne.query.SQLTemplate:java.lang.String getCustomTemplate(java.lang.String)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(java.lang.String)",
            "org.apache.cayenne.reflect.ConverterFactory:org.apache.cayenne.reflect.Converter getConverter(java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addCallback(java.lang.Class,org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.ClassDescriptor getSubclassDescriptor(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.Property getDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.reflect.PropertyUtils:java.lang.Object getSimpleProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.reflect.SingletonFaultFactory:org.apache.cayenne.Fault getMapFault(org.apache.cayenne.reflect.Accessor)",
            "org.apache.cayenne.remote.service.BaseRemoteService:void initEventBridgeParameters(java.util.Map)",
            "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.DataChannel getSharedChannel(java.lang.String)",
            "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.NameConverter:java.lang.String specialCharsToJava(java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String createName(java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String createName(java.lang.Class,java.lang.Object,java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object createObject(java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object createObject(java.lang.Class,java.lang.Object,java.lang.String)",
            "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:org.apache.cayenne.xml.SerializableEntity getEntity(java.lang.String)",
            "org.apache.cayenne.BaseContext:java.lang.Object getUserProperty(java.lang.String)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readPropertyDirectly(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffsAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:int sizeAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:int hashCode()",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.SQLTemplateProcessor:org.apache.cayenne.access.jdbc.SQLStatement processTemplate(java.lang.String,java.util.Map)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:boolean isEmpty()",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendInserts(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendDeletes(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean isEmpty()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void appendQueries(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void sendUpdateNotification(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.exp.Expression buildIdQualifier(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStore:boolean hasChanges()",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeOutgoing(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean isEmpty()",
            "org.apache.cayenne.configuration.web.WebConfiguration:java.util.Map getOtherParameters()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.SelectQueryMetadata:void resolveAutoAliases(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean isEmpty()",
            "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.ClassDescriptor getSubclassDescriptor(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.util.PersistentObjectMap:boolean isEmpty()",
            "org.apache.cayenne.ObjectId:boolean isReplacementIdAttached()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand:java.util.Collection getKeys()",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:java.util.Iterator keys()",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.QueryResult:java.util.Iterator getQueries()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:java.util.Iterator vertexIterator()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean containsAllVertices(java.util.Collection)",
            "org.apache.cayenne.cache.OSQueryCache:java.util.Collection getGroupNames()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String[] getDatabaseTypes()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:int hashCode()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:java.util.Collection getTemplateKeys()",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Set keySet()",
            "org.apache.cayenne.ObjectId:int hashCode()",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendPrimaryKeys(java.util.Map)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:void appendRelationships(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void setParameters(java.util.Map)",
            "org.apache.cayenne.query.SelectQueryMetadata:void resolveAutoAliases(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.PersistentObjectMap:void putAll(java.util.Map)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindParameter(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String getTableAlias(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EntityRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:boolean hasExceptions()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.ObjectStore:int registeredObjectsCount()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeOutgoing(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int order()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int outgoingSize(java.lang.Object)",
            "org.apache.cayenne.cache.MapQueryCache:int size()",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int listenersSize()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$DataRowListHelper:boolean incorrectObjectType(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:int size()",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:int hashCode()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:java.util.Collection getDataNodes()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendInserts(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendDeletes(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:java.util.Collection getDataMaps()",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.ObjectStore:java.util.Iterator getObjectIterator()",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:java.util.Collection registeredNodes()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphMap:java.util.Collection registeredNodes()",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.util.PersistentObjectMap:void clear()",
            "org.apache.cayenne.util.PersistentObjectMap:void putAll(java.util.Map)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Collection values()",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.ObjectContextDeleteAction:java.util.Collection toCollection(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:void putDirectly(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:void removeDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object getValue()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendInserts(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendDeletes(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:boolean runDirectDFS()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataNodeDescriptor cloneDataNodeDescriptor(org.apache.cayenne.configuration.DataNodeDescriptor,org.apache.cayenne.configuration.DataChannelDescriptor)",
            "org.apache.cayenne.map.CallbackDescriptor:boolean moveMethod(java.lang.String,int)",
            "org.apache.cayenne.map.CallbackDescriptor:void setCallbackMethodAt(int,java.lang.String)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void <init>(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void reset(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:boolean runDirectDFS()",
            "org.apache.cayenne.map.CallbackDescriptor:void clear()",
            "org.apache.cayenne.map.CallbackDescriptor:boolean moveMethod(java.lang.String,int)",
            "org.apache.cayenne.map.CallbackDescriptor:void setCallbackMethodAt(int,java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void clear()",
            "org.apache.cayenne.util.PersistentObjectSet:void clear()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.ashwood.graph.StrongConnection$DFSSeenVerticesPredicate:boolean evaluate(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection$NotSeenPredicate:boolean evaluate(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.event.EventBridge:void onExternalEvent(org.apache.cayenne.event.CayenneEvent)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:boolean isGeneric()",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.DeleteBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.UpdateBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean contains(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean containsAllVertices(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.merge.DbMerger:void checkPrimaryKeyChange(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:int hashCode()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataPort:void execute()",
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void sendUpdateNotification(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceDefiningTargetPrecenseAndType(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.query.PrefetchTreeNode:boolean hasChildren()",
            "org.apache.cayenne.query.QueryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.query.QueryChain:boolean isEmpty()",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean isEmpty()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void setDiscriminatorColumns(java.util.Collection)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean hasSubclasses()",
            "org.apache.cayenne.util.PersistentObjectSet:boolean isEmpty()",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateNotEmpty(java.lang.Object,java.lang.String,java.util.Collection)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.util.Collection)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.ObjectContextStateLog:boolean hasChanges()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:java.util.Iterator keys()",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.Iterator getObjectIterator()",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:java.util.Iterator getQueries()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:java.util.Iterator vertexIterator()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:java.util.Iterator iterator()",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.util.PersistentObjectSet:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.DbAttribute,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.IdRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:boolean canCreatePK(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String[] getDatabaseTypes()",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.EntityInheritanceTree:int getChildrenCount()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int defaultListenersSize()",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:int size()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:java.lang.Object[] toArray(java.lang.Object)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.query.NamedQuery:int hashCode()",
            "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object[] toArray()",
            "org.apache.cayenne.ObjectId:int hashCode()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String[] getDatabaseTypes()",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.CayenneContextFactory:org.apache.cayenne.ObjectContext createContext(org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.CayenneContextFactory:org.apache.cayenne.ObjectContext createContext()",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.ObjectContext getContext(org.apache.cayenne.DataChannel)"
        ]
    },
    "org.apache.cayenne.CayenneContext:void <init>(org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:void <init>()"
        ]
    },
    "org.apache.cayenne.CayenneContext:org.apache.cayenne.ObjectContext createChildContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ObjectDiff$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff$3:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.AttributePropertyDecorator:java.lang.Object readProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readSimpleProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyAccessor:java.lang.Object getValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.AttributePropertyDecorator:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyAccessor:void setValue(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.FieldEmbeddableDescriptor:java.lang.Object createObject(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorNode:void connect(org.apache.cayenne.Persistent,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()"
        ]
    },
    "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:java.lang.Object readNestedProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTObjPath:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readNestedProperty(java.lang.String)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTEqual:void injectValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTAnd:void injectValue(java.lang.Object)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.BaseArcProperty$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.BaseArcProperty$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.util.Util$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.util.Util$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.CayenneContextChildDiffLoader$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.BaseContext:void deleteObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readNestedProperty(java.lang.String)"
        ]
    },
    "org.apache.cayenne.DataObjectUtils:long longPKForObject(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.DataObjectUtils:int intPKForObject(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.Util$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.BaseArcProperty$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.Util$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.BaseArcProperty$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.xml.XMLEncoder:void encodeProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLEncoder:java.lang.String encode(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLEncoder:void encodeProperty(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processColumn(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.TrimmingQualifierTranslator:void processColumn(org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.access.trans.TrimmingQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processColumn(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List buildResultColumns()"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List buildResultColumns()"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:void access$000(org.apache.cayenne.access.trans.SelectTranslator,java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)"
        ]
    },
    "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:java.lang.Appendable appendPart(java.lang.Appendable)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:java.util.List buildResultColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.TraversalHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void doAppendPart(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator:void doAppendPart(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexQualifiers(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:void processResultSet(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.DataDomain$DataDomainSyncFilterChain:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction$1:java.lang.Object createObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptOIDQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:org.apache.cayenne.exp.Expression extractQualifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void doAppendPart()"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleQualifierTranslator:void doAppendPart(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.QualifierTranslator:void doAppendPart()"
        ]
    },
    "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression expWithParameters(java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression expWithParameters(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map,boolean)"
        ]
    },
    "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression deepCopy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DbEntity:org.apache.cayenne.exp.Expression translateToRelatedEntity(org.apache.cayenne.exp.Expression,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.exp.Expression translateToRelatedEntity(org.apache.cayenne.exp.Expression,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.exp.Expression translateToDbPath(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression getDbQualifier()"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.exp.Expression translateToRelatedEntity(org.apache.cayenne.exp.Expression,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void reconnect(java.sql.SQLException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.Statement createStatement()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.Statement createStatement(int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int[])",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.ConnectionWrapper:void reconnect(java.sql.SQLException)",
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection uncheckConnection(javax.sql.PooledConnection)"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.Object generatePk(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybasePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.oracle.Oracle8Adapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.access.trans.QualifierTranslator getQualifierTranslator(org.apache.cayenne.access.trans.QueryAssembler)"
        ]
    },
    "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.remote.service.ServerSession createServerSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.remote.RemoteSession establishSession()"
        ]
    },
    "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.remote.service.ServerSession createServerSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.remote.RemoteSession establishSharedSession(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRowsFromParentContext(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void runQuery()"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.access.DataContext:java.util.List performQuery(java.lang.String,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.List performQuery(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void resolveAll()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.util.List subList(int,int)"
        ]
    },
    "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ToOneFault:java.lang.Object resolveFault(org.apache.cayenne.Persistent,java.lang.String)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)"
        ]
    },
    "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils:void refreshObjectWithSnapshot(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils:void mergeObjectWithSnapshot(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.ObjectStore:void processUpdatedSnapshot(java.lang.Object,org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils:void forceMergeWithSnapshot(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils:void mergeObjectWithSnapshot(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processUpdatedSnapshot(java.lang.Object,org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitProperties(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.access.DataRowUtils:void refreshObjectWithSnapshot(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow,boolean)",
            "org.apache.cayenne.access.DataRowUtils:void forceMergeWithSnapshot(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.ObjectDiff:void <init>(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectDiff:void applySimplePropertyChanges(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSuperclassProperties(org.apache.cayenne.reflect.PersistentDescriptor)",
            "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void shallowMerge(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptor:void shallowMerge(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void shallowMerge(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSuperclassProperties(org.apache.cayenne.reflect.PersistentDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.lang.Object convertSingleObject(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.util.ObjectDetachOperation,java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void afterInit()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver:org.apache.cayenne.access.PrefetchProcessorNode resolveObjectTree(org.apache.cayenne.query.PrefetchTreeNode,java.util.List,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver:org.apache.cayenne.access.PrefetchProcessorNode synchronizedRootResultNodeFromDataRows(org.apache.cayenne.query.PrefetchTreeNode,java.util.List,java.util.Map)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:org.apache.cayenne.access.PrefetchProcessorNode buildTree(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver:org.apache.cayenne.access.PrefetchProcessorNode resolveObjectTree(org.apache.cayenne.query.PrefetchTreeNode,java.util.List,java.util.Map)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.BaseQueryMetadata:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:java.util.Collection adjacentJointNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:java.util.Collection jointNodes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.PrefetchTreeNode:java.util.Collection disjointNodes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.PrefetchTreeNode:java.util.Collection nonPhantomNodes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:void routePrefetches(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void merge(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void graphCommitted(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:org.apache.cayenne.DataChannelSyncCallbackAction getCallbackAction(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BindDirective:void bind(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ParameterBinding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void addMultiColumnOperand(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator$1:void appendMultiColumnPath(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator$2:void appendMultiColumnPath(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator$1:void appendMultiColumnPath(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)",
            "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator:void access$000(org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator,org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void <init>(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery,org.apache.cayenne.ejbql.EJBQLCompiledExpression,org.apache.cayenne.access.jdbc.EJBQLTranslatorFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitInnerFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitInnerJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitOuterFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitOuterJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitSelectClause(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void pushMarker(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIsEmpty(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitDistinct(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ResultDirective:void bindResult(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ColumnDescriptor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void pushJoin(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:void initDefaultFactories()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void <init>()"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:void addFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void registerType(org.apache.cayenne.access.types.ExtendedType)"
        ]
    },
    "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGlobalException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.QueryResult:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGlobalException(java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeCreated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeIdChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void addFilter(org.apache.cayenne.DataChannelFilter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)"
        ]
    },
    "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.BatchQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.BatchQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void appendQueries(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataDomainSyncBucket:void addDirtyObject(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.jdbc.BindDirective:void bind(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ParameterBinding)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void addMultiColumnOperand(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void <init>(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery,org.apache.cayenne.ejbql.EJBQLCompiledExpression,org.apache.cayenne.access.jdbc.EJBQLTranslatorFactory)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void pushMarker(java.lang.String,boolean)",
            "org.apache.cayenne.access.jdbc.ResultDirective:void bindResult(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ColumnDescriptor)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void initDefaultFactories()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void addFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.access.DataDomain:void addFilter(org.apache.cayenne.DataChannelFilter)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void addDirtyObject(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean add(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void registerLifecycleEventInducedChange(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void addObject(org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.QueryResult:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.QueryResult:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.QueryResult:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataChannelChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataNodeChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.conn.PoolManager:int growPool(int,java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection uncheckConnection(javax.sql.PooledConnection)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.h2.H2MergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLMergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$5:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void push(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.dba.TypesMapping:void <init>(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.ListProvider:void add(org.apache.cayenne.di.Provider)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addEntityResult(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:void addPath(org.apache.cayenne.ejbql.parser.EJBQLPath)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void pushNode(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void openNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.event.DefaultEventManager$Dispatch:boolean fire(org.apache.cayenne.util.Invocation)",
            "org.apache.cayenne.event.DefaultEventManager:void <init>(int)",
            "org.apache.cayenne.event.DefaultEventManager:void postNonBlockingEvent(java.util.EventObject,org.apache.cayenne.event.EventSubject)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void pushNode(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void openNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:void add(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void registerDiff(org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void addJoin(org.apache.cayenne.map.DbJoin)",
            "org.apache.cayenne.map.EntityInheritanceTree:void addChildNode(org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.EntityResult:void addField(org.apache.cayenne.map.EntityResult$FieldResult)",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.map.QueryLoader:void addOrdering(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.QueryLoader:void addPrefetch(java.lang.String)",
            "org.apache.cayenne.map.SQLResult:void addEntityResult(org.apache.cayenne.map.EntityResult)",
            "org.apache.cayenne.map.SQLResult:void addColumnResult(java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkPrimaryKeyChange(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.query.DeleteBatchQuery:void add(java.util.Map)",
            "org.apache.cayenne.query.InsertBatchQuery:void add(java.util.Map,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void addResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode$AdjacentJoinsOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void addChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.ProcedureQuery:void addResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.query.QueryChain:void addQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void addOrdering(org.apache.cayenne.query.Ordering)",
            "org.apache.cayenne.query.UpdateBatchQuery:void add(java.util.Map,java.util.Map,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void addFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addDefaultCallback(org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addCallback(java.lang.Class,org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addRootDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void addAccessor(org.apache.cayenne.reflect.Accessor)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.EntityMergeSupport:void addEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)",
            "org.apache.cayenne.util.GenericResponse:void addBatchUpdateCount(int[])",
            "org.apache.cayenne.util.GenericResponse:void addUpdateCount(int)",
            "org.apache.cayenne.util.GenericResponse:void addResultList(java.util.List)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.PersistentObjectList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void addDirectly(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:void addClassPath(java.lang.String)",
            "org.apache.cayenne.util.ResourceLocator:void addFilesystemPath(java.lang.String)",
            "org.apache.cayenne.validation.ValidationResult:void addFailure(org.apache.cayenne.validation.ValidationFailure)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.BaseContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.BaseContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.BaseContext$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void addOperation(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.jdbc.BindDirective:void bind(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ParameterBinding)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void addMultiColumnOperand(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void <init>(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery,org.apache.cayenne.ejbql.EJBQLCompiledExpression,org.apache.cayenne.access.jdbc.EJBQLTranslatorFactory)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void pushMarker(java.lang.String,boolean)",
            "org.apache.cayenne.access.jdbc.ResultDirective:void bindResult(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ColumnDescriptor)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void initDefaultFactories()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void addFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.access.DataDomain:void addFilter(org.apache.cayenne.DataChannelFilter)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void addDirtyObject(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean add(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void registerLifecycleEventInducedChange(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void addObject(org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.QueryResult:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.QueryResult:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.QueryResult:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataChannelChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataNodeChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.conn.PoolManager:int growPool(int,java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection uncheckConnection(javax.sql.PooledConnection)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.h2.H2MergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLMergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$5:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void push(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.dba.TypesMapping:void <init>(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.ListProvider:void add(org.apache.cayenne.di.Provider)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addEntityResult(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:void addPath(org.apache.cayenne.ejbql.parser.EJBQLPath)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void pushNode(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void openNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.event.DefaultEventManager$Dispatch:boolean fire(org.apache.cayenne.util.Invocation)",
            "org.apache.cayenne.event.DefaultEventManager:void <init>(int)",
            "org.apache.cayenne.event.DefaultEventManager:void postNonBlockingEvent(java.util.EventObject,org.apache.cayenne.event.EventSubject)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void pushNode(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void openNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:void add(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void registerDiff(org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void addJoin(org.apache.cayenne.map.DbJoin)",
            "org.apache.cayenne.map.EntityInheritanceTree:void addChildNode(org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.EntityResult:void addField(org.apache.cayenne.map.EntityResult$FieldResult)",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.map.QueryLoader:void addOrdering(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.QueryLoader:void addPrefetch(java.lang.String)",
            "org.apache.cayenne.map.SQLResult:void addEntityResult(org.apache.cayenne.map.EntityResult)",
            "org.apache.cayenne.map.SQLResult:void addColumnResult(java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkPrimaryKeyChange(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.query.DeleteBatchQuery:void add(java.util.Map)",
            "org.apache.cayenne.query.InsertBatchQuery:void add(java.util.Map,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void addResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode$AdjacentJoinsOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void addChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.ProcedureQuery:void addResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.query.QueryChain:void addQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void addOrdering(org.apache.cayenne.query.Ordering)",
            "org.apache.cayenne.query.UpdateBatchQuery:void add(java.util.Map,java.util.Map,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void addFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addDefaultCallback(org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addCallback(java.lang.Class,org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addRootDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void addAccessor(org.apache.cayenne.reflect.Accessor)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.EntityMergeSupport:void addEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)",
            "org.apache.cayenne.util.GenericResponse:void addBatchUpdateCount(int[])",
            "org.apache.cayenne.util.GenericResponse:void addUpdateCount(int)",
            "org.apache.cayenne.util.GenericResponse:void addResultList(java.util.List)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.PersistentObjectList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void addDirectly(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:void addClassPath(java.lang.String)",
            "org.apache.cayenne.util.ResourceLocator:void addFilesystemPath(java.lang.String)",
            "org.apache.cayenne.validation.ValidationResult:void addFailure(org.apache.cayenne.validation.ValidationFailure)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.BaseContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.BaseContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.BaseContext$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void addOperation(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void registerLifecycleEventInducedChange(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:void addObject(org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.StackLookupParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:void nextBatchCount(org.apache.cayenne.query.Query,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextBatchCount(org.apache.cayenne.query.Query,int[])"
        ]
    },
    "org.apache.cayenne.access.QueryResult:void nextCount(org.apache.cayenne.query.Query,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:boolean processUpdate(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:void nextRows(org.apache.cayenne.query.Query,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection next()"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void indexSorter()"
        ]
    },
    "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataNodeChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.SAXNestedTagHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection newPooledConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:int growPool(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:void init(javax.sql.ConnectionPoolDataSource,int,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:java.sql.Connection uncheckConnection(javax.sql.PooledConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection getConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextCount(org.apache.cayenne.query.Query,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:boolean processUpdate(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void push(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybasePkGenerator:java.util.List createAutoPkStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.DbAdapterFactoryChain:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.TypesMapping:void <init>(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void <init>(org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultScopeProvider:void <init>(org.apache.cayenne.di.spi.DefaultScope,org.apache.cayenne.di.Provider)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.di.spi.ListProvider:void add(org.apache.cayenne.di.Provider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder add(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder add(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addEntityResult(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler:void addPath(org.apache.cayenne.ejbql.parser.EJBQLPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler:void access$600(org.apache.cayenne.ejbql.parser.Compiler,org.apache.cayenne.ejbql.parser.EJBQLPath)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_scan_token(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Token jj_consume_token(int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void pushNode(org.apache.cayenne.ejbql.parser.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void openNodeScope(org.apache.cayenne.ejbql.parser.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void classname()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameters()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void count()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void avg()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void max()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void min()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sum()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void where_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void having_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void empty_collection_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void exists_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void any_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void some_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void negative()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void concat()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void substring()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void lower()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void upper()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim_specification()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void length()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void locate()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abs()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sqrt()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void mod()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void size()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_datetime()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abstract_schema_name()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void tok()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void path_component()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void integer_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void decimal_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void named_input_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void positional_input_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void escape_character()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim_character()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void EQ()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void NE()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void GT()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void GE()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void LT()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void LE()"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager$Dispatch:boolean fire(org.apache.cayenne.util.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:void <init>()",
            "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection,boolean)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:void postNonBlockingEvent(java.util.EventObject,org.apache.cayenne.event.EventSubject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:void addListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object)",
            "org.apache.cayenne.remote.ClientChannel:boolean setupRemoteChannelListener()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.Token jj_consume_token(int)"
        ]
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:void pushNode(org.apache.cayenne.exp.parser.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)"
        ]
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:void openNodeScope(org.apache.cayenne.exp.parser.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void orCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void andCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void notCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarCommaList()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConditionExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConstExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarNumericExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void multiplySubtractExp()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericTerm()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void namedParameter()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void pathExpression()"
        ]
    },
    "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:java.util.List filterObjects(java.util.List)"
        ]
    },
    "org.apache.cayenne.graph.CompoundDiff:void add(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void registerDiff(org.apache.cayenne.graph.NodeDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity:void dbAttributeAdded(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbAttributeChanged(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbAttributeRemoved(org.apache.cayenne.map.event.AttributeEvent)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:void addJoin(org.apache.cayenne.map.DbJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.MapLoader:void processStartDbAttributePair(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:void addChildNode(org.apache.cayenne.map.EntityInheritanceTree)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:void constructCache()"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allSubEntities()",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()"
        ]
    },
    "org.apache.cayenne.map.EntityResult:void addField(org.apache.cayenne.map.EntityResult$FieldResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResult:void addObjectField(java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.EntityResult:void addObjectField(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.EntityResult:void addDbField(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processStartEntitylistener(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:void setDbRelationshipPath(java.lang.String)",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromDeferredPath()"
        ]
    },
    "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.MapLoader:void processStartProcedureParameter(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.QueryLoader:void addOrdering(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processEndQueryOrdering()"
        ]
    },
    "org.apache.cayenne.map.QueryLoader:void addPrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processEndQueryPrefetch()"
        ]
    },
    "org.apache.cayenne.map.SQLResult:void addEntityResult(org.apache.cayenne.map.EntityResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.map.SQLResult:void addColumnResult(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:void checkPrimaryKeyChange(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.query.DeleteBatchQuery:void add(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)"
        ]
    },
    "org.apache.cayenne.query.InsertBatchQuery:void add(java.util.Map,org.apache.cayenne.ObjectId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.query.InsertBatchQuery:void add(java.util.Map)"
        ]
    },
    "org.apache.cayenne.query.PrefetchSelectQuery:void addResultPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode$AdjacentJoinsOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:void addChild(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode addPath(java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:void addResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.QueryChain:void addQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SelectQuery:void addOrdering(org.apache.cayenne.query.Ordering)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:void addOrdering(java.lang.String,org.apache.cayenne.query.SortOrder)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrdering(org.apache.cayenne.query.Ordering)"
        ]
    },
    "org.apache.cayenne.query.UpdateBatchQuery:void add(java.util.Map,java.util.Map,org.apache.cayenne.ObjectId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.query.UpdateBatchQuery:void add(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:void addFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addDefaultCallback(org.apache.cayenne.reflect.AbstractCallback)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addDefaultListener(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addCallback(java.lang.Class,org.apache.cayenne.reflect.AbstractCallback)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addListener(java.lang.Class,java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addListener(java.lang.Class,java.lang.Object,java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addListener(java.lang.Class,java.lang.Object,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void addRootDbEntity(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void appendDeclaredRootDbEntity(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptor:void addSuperProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addDeclaredProperty(org.apache.cayenne.reflect.Property)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void addAccessor(org.apache.cayenne.reflect.Accessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:org.apache.cayenne.reflect.Accessor createAccessor(java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.jdbc.BindDirective:void bind(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ParameterBinding)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void addMultiColumnOperand(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void <init>(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery,org.apache.cayenne.ejbql.EJBQLCompiledExpression,org.apache.cayenne.access.jdbc.EJBQLTranslatorFactory)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void pushMarker(java.lang.String,boolean)",
            "org.apache.cayenne.access.jdbc.ResultDirective:void bindResult(org.apache.velocity.context.InternalContextAdapter,org.apache.cayenne.access.jdbc.ColumnDescriptor)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void initDefaultFactories()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void addFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.access.DataDomain:void addFilter(org.apache.cayenne.DataChannelFilter)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:void route(org.apache.cayenne.access.QueryEngine,org.apache.cayenne.query.Query,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void addDirtyObject(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean add(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void registerLifecycleEventInducedChange(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void addObject(org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.QueryResult:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.QueryResult:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.QueryResult:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataChannelChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.configuration.XMLDataChannelDescriptorLoader$DataNodeChildrenHandler:org.xml.sax.ContentHandler createChildTagHandler(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.conn.PoolManager:int growPool(int,java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection uncheckConnection(javax.sql.PooledConnection)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.h2.H2MergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLMergerFactory$3:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$5:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void push(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.dba.TypesMapping:void <init>(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.ListProvider:void add(org.apache.cayenne.di.Provider)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addEntityResult(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:void addPath(org.apache.cayenne.ejbql.parser.EJBQLPath)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void pushNode(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void openNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.event.DefaultEventManager$Dispatch:boolean fire(org.apache.cayenne.util.Invocation)",
            "org.apache.cayenne.event.DefaultEventManager:void <init>(int)",
            "org.apache.cayenne.event.DefaultEventManager:void postNonBlockingEvent(java.util.EventObject,org.apache.cayenne.event.EventSubject)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void pushNode(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void openNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:void add(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void registerDiff(org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void addJoin(org.apache.cayenne.map.DbJoin)",
            "org.apache.cayenne.map.EntityInheritanceTree:void addChildNode(org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.EntityResult:void addField(org.apache.cayenne.map.EntityResult$FieldResult)",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.map.QueryLoader:void addOrdering(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.map.QueryLoader:void addPrefetch(java.lang.String)",
            "org.apache.cayenne.map.SQLResult:void addEntityResult(org.apache.cayenne.map.EntityResult)",
            "org.apache.cayenne.map.SQLResult:void addColumnResult(java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkPrimaryKeyChange(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendDropOriginalPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.query.DeleteBatchQuery:void add(java.util.Map)",
            "org.apache.cayenne.query.InsertBatchQuery:void add(java.util.Map,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void addResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode$AdjacentJoinsOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startPhantomPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode$CollectionBuilderOperation:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void addChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.ProcedureQuery:void addResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.query.QueryChain:void addQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void addOrdering(org.apache.cayenne.query.Ordering)",
            "org.apache.cayenne.query.UpdateBatchQuery:void add(java.util.Map,java.util.Map,org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void addFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addDefaultCallback(org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addCallback(java.lang.Class,org.apache.cayenne.reflect.AbstractCallback)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void addRootDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void addAccessor(org.apache.cayenne.reflect.Accessor)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.EntityMergeSupport:void addEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)",
            "org.apache.cayenne.util.GenericResponse:void addBatchUpdateCount(int[])",
            "org.apache.cayenne.util.GenericResponse:void addUpdateCount(int)",
            "org.apache.cayenne.util.GenericResponse:void addResultList(java.util.List)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.PersistentObjectList:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void addDirectly(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:void addClassPath(java.lang.String)",
            "org.apache.cayenne.util.ResourceLocator:void addFilesystemPath(java.lang.String)",
            "org.apache.cayenne.validation.ValidationResult:void addFailure(org.apache.cayenne.validation.ValidationFailure)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.BaseContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.BaseContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.BaseContext$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void addToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void addOperation(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:void addEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:void <init>(org.apache.cayenne.map.DataMap,org.apache.cayenne.map.naming.NamingStrategy,boolean)"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:void addBatchUpdateCount(int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.util.GenericResponse:void <init>(org.apache.cayenne.QueryResponse)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:void addUpdateCount(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextCount(org.apache.cayenne.query.Query,int)"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:void addResultList(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.util.GenericResponse:void <init>(java.util.List)",
            "org.apache.cayenne.util.GenericResponse:void <init>(org.apache.cayenne.QueryResponse)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectList:java.util.List resolvedObjectList()"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectList:void addDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:java.util.Set resolvedObjectSet()"
        ]
    },
    "org.apache.cayenne.util.ResourceLocator:void addClassPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.ResourceLocator:void addFilesystemPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ResourceLocator:void addFilesystemPath(java.io.File)"
        ]
    },
    "org.apache.cayenne.validation.ValidationResult:void addFailure(org.apache.cayenne.validation.ValidationFailure)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:boolean safeExecute(java.sql.Connection,java.lang.String)",
            "org.apache.cayenne.merge.AbstractToDbToken:void executeSql(org.apache.cayenne.merge.MergerContext,java.lang.String)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.xml.XMLMappingDescriptor:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.BaseContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.BaseContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.BaseContext$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataChannelSyncCallbackAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:void addOperation(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void processChange(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssembler:void addToParamList(org.apache.cayenne.map.DbAttribute,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssembler:void addToParamList(org.apache.cayenne.map.DbAttribute,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:void add(int,java.lang.Object)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void add(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssembler:void addToParamList(org.apache.cayenne.map.DbAttribute,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:void add(int,java.lang.Object)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void add(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL$EJBQLDefaultParser:org.apache.cayenne.ejbql.EJBQLCompiledExpression compile(java.lang.String,org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssembler:void addToParamList(org.apache.cayenne.map.DbAttribute,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:void add(int,java.lang.Object)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void add(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssembler:void addToParamList(org.apache.cayenne.map.DbAttribute,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:void add(int,java.lang.Object)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void add(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:void set(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void updateResponse(java.util.List,java.util.List)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIsEmpty(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitDistinct(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object remove(int)",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object remove(int)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object remove(int)",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object remove(int)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager$PoolMaintenanceThread:void run()"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection getConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void endNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void classname()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameters()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void count()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void avg()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void max()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void min()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sum()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void where_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void having_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void empty_collection_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void exists_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void any_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void some_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void concat()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void substring()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void lower()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void upper()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void length()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void locate()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abs()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sqrt()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void mod()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void size()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abstract_schema_name()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void integer_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void decimal_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void classname()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameters()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void count()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void avg()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void max()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void min()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sum()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void where_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void having_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void empty_collection_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void exists_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void any_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void some_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void concat()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void substring()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void lower()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void upper()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void length()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void locate()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abs()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sqrt()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void mod()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void size()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abstract_schema_name()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void integer_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void decimal_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void classname()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameters()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void count()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void avg()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void max()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void min()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sum()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void where_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void having_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void empty_collection_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void exists_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void any_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void some_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void negative()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void concat()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void substring()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void lower()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void upper()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim_specification()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void length()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void locate()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abs()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sqrt()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void mod()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void size()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_datetime()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abstract_schema_name()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void tok()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void path_component()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void integer_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void decimal_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void named_input_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void positional_input_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void escape_character()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim_character()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void EQ()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void NE()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void GT()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void GE()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void LT()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void LE()"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:void <init>(int)",
            "org.apache.cayenne.CayenneContextMergeHandler:void runWithEventsDisabled(java.lang.Runnable)"
        ]
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void orCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void andCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void notCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarCommaList()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarNumericExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void multiplySubtractExp()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericTerm()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)"
        ]
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void orCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void andCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void notCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarCommaList()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarNumericExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void multiplySubtractExp()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericTerm()"
        ]
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void orCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void andCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void notCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConditionExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConstExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarNumericExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void multiplySubtractExp()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericTerm()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void namedParameter()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void pathExpression()"
        ]
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarCommaList()"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object remove(int)",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object remove(int)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object remove(int)",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object remove(int)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:void removeFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomain:void removeFilter(org.apache.cayenne.DataChannelFilter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void removeFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.DataDomain:void removeFilter(org.apache.cayenne.DataChannelFilter)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean remove(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void removeConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void removeJoin(org.apache.cayenne.map.DbJoin)",
            "org.apache.cayenne.map.EntityResolver:void removeDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjRelationship:void removeDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void removeResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(java.lang.String)",
            "org.apache.cayenne.query.ProcedureQuery:void removeResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.query.QueryChain:boolean removeQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void removeOrdering(org.apache.cayenne.query.Ordering)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void removeFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void removeDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.EntityMergeSupport:void removeEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)",
            "org.apache.cayenne.util.PersistentObjectList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void removeDirectly(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void removeFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.DataDomain:void removeFilter(org.apache.cayenne.DataChannelFilter)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean remove(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void removeConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void removeJoin(org.apache.cayenne.map.DbJoin)",
            "org.apache.cayenne.map.EntityResolver:void removeDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjRelationship:void removeDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void removeResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(java.lang.String)",
            "org.apache.cayenne.query.ProcedureQuery:void removeResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.query.QueryChain:boolean removeQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void removeOrdering(org.apache.cayenne.query.Ordering)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void removeFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void removeDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.EntityMergeSupport:void removeEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)",
            "org.apache.cayenne.util.PersistentObjectList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void removeDirectly(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.conn.PooledConnectionImpl:void removeConnectionEventListener(javax.sql.ConnectionEventListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:void shutdown()"
        ]
    },
    "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(org.apache.cayenne.event.DefaultEventManager$Dispatch)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:void removeJoin(org.apache.cayenne.map.DbJoin)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityResolver:void removeDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void removeDbRelationship(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.PrefetchSelectQuery:void removeResultPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void removePath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:void addChild(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:void removeResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.QueryChain:boolean removeQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SelectQuery:void removeOrdering(org.apache.cayenne.query.Ordering)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void removeOrdering(org.apache.cayenne.query.Ordering)"
        ]
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:void removeFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void removeDeclaredProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void removeFactory(org.apache.cayenne.access.types.ExtendedTypeFactory)",
            "org.apache.cayenne.access.DataDomain:void removeFilter(org.apache.cayenne.DataChannelFilter)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean remove(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void removeConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void removeJoin(org.apache.cayenne.map.DbJoin)",
            "org.apache.cayenne.map.EntityResolver:void removeDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjRelationship:void removeDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.query.PrefetchSelectQuery:void removeResultPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(java.lang.String)",
            "org.apache.cayenne.query.ProcedureQuery:void removeResultDescriptor(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.query.QueryChain:boolean removeQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void removeOrdering(org.apache.cayenne.query.Ordering)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void removeFactory(org.apache.cayenne.reflect.ClassDescriptorFactory)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void removeDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.EntityMergeSupport:void removeEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)",
            "org.apache.cayenne.util.PersistentObjectList:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void removeDirectly(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void removeToManyTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:void removeEntityMergeListener(org.apache.cayenne.util.EntityMergeListener)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.PersistentObjectList:void removeDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String registerReusableJoin(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String createIdAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.StringBuilder findOrCreateMarkedBuffer(java.lang.String)",
            "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.access.jdbc.EJBQLJoinAppender getJoinAppender(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void rebindParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindParameter(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindParameter(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String getTableAlias(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.DbAttribute,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ResultDirective:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String guessType(java.lang.String)",
            "org.apache.cayenne.access.jdbc.ResultDirective:void <clinit>()"
        ]
    },
    "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.RowDescriptorBuilder overrideColumnType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateResourceManager:org.apache.velocity.runtime.resource.Resource getResource(java.lang.String,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedEnumType:void register(java.lang.Enum,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedEnumType:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:void registerType(org.apache.cayenne.access.types.ExtendedType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void initDefaultTypes()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getRegisteredType(java.lang.String)",
            "org.apache.cayenne.dba.db2.DB2Adapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.derby.DerbyAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.dba.sybase.SybaseAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getRegisteredType(java.lang.String)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:void <clinit>()",
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.access.util.DefaultOperationObserver:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.access.QueryResult:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void reindexNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataNode lookupDataNode(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomainDBDiffBuilder:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataNode:void addDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.access.DbGeneratorPostprocessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void <clinit>()"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:org.apache.cayenne.ObjectId getArcSnapshotValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$4:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:void updateArcSnapshot(java.lang.String,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ToOneFault:java.lang.Object resolveFault(org.apache.cayenne.Persistent,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void processIdChange(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore$1:void nodeIdChanged(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void registerNode(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void processDeletedID(java.lang.Object)",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:void putResolved(java.util.Map,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.access.jdbc.ColumnDescriptor appendColumn(java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.access.jdbc.ColumnDescriptor access$000(org.apache.cayenne.access.PrefetchProcessorJointNode,java.util.Map,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.Transaction:boolean addConnection(java.lang.String,java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.ExternalTransaction:boolean addConnection(java.lang.String,java.sql.Connection)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addVertex(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object putArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object putArc(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.NestedQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification nonNullSpec(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void initRefreshPolicy(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void attachToScope(javax.sql.DataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.TypesMapping:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:void render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node,java.lang.Object,java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:java.lang.String getDefaultJavaClass(int,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.DbAttribute,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void appendUpdatedParameter(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute,java.lang.Object)",
            "org.apache.cayenne.access.types.BigIntegerType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.types.CalendarType:java.lang.Object convertToJdbcObject(java.util.Calendar,int)",
            "org.apache.cayenne.access.types.EnumType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.types.EnumType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.EnumType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ExtendedEnumType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.types.UtilDateType:java.lang.Object convertToJdbcObject(java.lang.Object,int)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.derby.DerbyAdapter:boolean typeSupportsLength(int)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:boolean typeSupportsLength(int)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.TypesMapping$TypeInfo:java.lang.String toString()",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String[] getDatabaseTypes()",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String pickDataType(int,org.apache.cayenne.dba.TypesMapping$TypeInfo[])",
            "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByName(java.lang.String)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String getSqlNameByType(int)",
            "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByJava(java.lang.String)",
            "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByJava(java.lang.Class)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String getJavaBySqlType(int)",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String getJavaBySqlType(int,int,int)",
            "org.apache.cayenne.dba.TypesMapping:void <clinit>()",
            "org.apache.cayenne.map.DbAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.MapLoader:void processStartDbAttribute(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartProcedureParameter(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ProcedureParameter:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.merge.AddColumnToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.SetColumnTypeToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.SetColumnTypeToDb:java.lang.String getTokenValue()",
            "org.apache.cayenne.merge.SetColumnTypeToModel:java.lang.String getTokenValue()",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:void putBinding(org.apache.cayenne.di.Key,org.apache.cayenne.di.Provider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultBindingBuilder:org.apache.cayenne.di.BindingBuilder 'to'(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultBindingBuilder:org.apache.cayenne.di.BindingBuilder toInstance(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultBindingBuilder:org.apache.cayenne.di.BindingBuilder toProvider(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultBindingBuilder:org.apache.cayenne.di.BindingBuilder toProviderInstance(org.apache.cayenne.di.Provider)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.spi.ListProvider getListProvider()",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.spi.MapProvider getMapProvider()"
        ]
    },
    "org.apache.cayenne.di.spi.MapProvider:void put(java.lang.String,org.apache.cayenne.di.Provider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder put(java.lang.String,java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder put(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$FromItemVisitor:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$JoinVisitor:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSum:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void sum()",
            "org.apache.cayenne.ejbql.parser.EJBQLSum:java.lang.String getJavaType(java.lang.String)",
            "org.apache.cayenne.ejbql.parser.EJBQLSum:void <clinit>()"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:org.apache.cayenne.event.DispatchQueue dispatchQueueForSubject(org.apache.cayenne.event.EventSubject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:void addListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject,java.lang.Object,boolean)",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object,org.apache.cayenne.event.EventSubject,java.lang.Object)",
            "org.apache.cayenne.event.DefaultEventManager:void dispatchEvent(org.apache.cayenne.event.DefaultEventManager$Dispatch)"
        ]
    },
    "org.apache.cayenne.event.DispatchQueue:java.util.Collection invocationsForSender(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.event.EventSubject:org.apache.cayenne.event.EventSubject getSubject(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:org.apache.cayenne.event.EventSubject createSubject()",
            "org.apache.cayenne.DataChannel:void <clinit>()"
        ]
    },
    "org.apache.cayenne.graph.GraphMap:void registerNode(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent createFault(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:void <clinit>()"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataRow:org.apache.cayenne.ObjectId createTargetObjectId(java.lang.String,org.apache.cayenne.map.DbRelationship)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:void constructCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:void <init>(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Embeddable getEmbeddable(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.SQLResult getResult(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityInheritanceTree lookupInheritanceTree(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.query.Query lookupQuery(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DbEntity _lookupDbEntity(java.lang.Object)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity _lookupObjEntity(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.XMLDataMapLoader:org.apache.cayenne.map.DataMap load(org.apache.cayenne.resource.Resource)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartDataMapProperty(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$2300(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:java.util.SortedMap getAttributeMap()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:void addAttributeOverride(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processStartAttributeOverride(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.ObjAttribute:void setDbAttributePath(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.QueryLoader:void addSql(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processEndQuerySQL()"
        ]
    },
    "org.apache.cayenne.map.QueryLoader:void addProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processStartQueryProperty(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.merge.DefaultValueForNullProvider:void set(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.BatchQuery:java.lang.Object getValue(java.util.Map,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.InsertBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)"
        ]
    },
    "org.apache.cayenne.query.EJBQLQuery:void setParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.EJBQLQuery:void setParameter(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.ProcedureQuery:void addParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:void override(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.QueryChain:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.query.SelectQueryMetadata:void addPathSplitAliases(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:void aliasPathSplits(java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:void setTemplate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()"
        ]
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:void addDescriptor(java.lang.String,org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createProxyDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.ConverterFactory:void <clinit>()"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void addSuperProperty(org.apache.cayenne.reflect.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void addDeclaredProperty(org.apache.cayenne.reflect.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createAttributeProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void createAttributeProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void createEmbeddedAttributeProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EmbeddedAttribute,org.apache.cayenne.map.ObjAttribute)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void addSubclassDescriptor(java.lang.String,org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addDbField(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.SingletonFaultFactory:org.apache.cayenne.Fault getMapFault(org.apache.cayenne.reflect.Accessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.remote.service.HttpRemoteService:void saveSharedChannel(java.lang.String,org.apache.cayenne.DataChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.remote.service.ServerSession createServerSession(java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.NameConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createDbRelationshipName(org.apache.cayenne.map.naming.ExportedKey,boolean)",
            "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjEntityName(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjAttributeName(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjRelationshipName(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.merge.CreateTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.util.NameConverter:java.lang.String javaToUnderscored(java.lang.String)",
            "org.apache.cayenne.util.NameConverter:java.lang.String underscoredToJava(java.lang.String,boolean)",
            "org.apache.cayenne.util.NameConverter:java.lang.String specialCharsToJava(java.lang.String)",
            "org.apache.cayenne.util.NameConverter:void <clinit>()"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String createName(java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String createName(java.lang.Class,java.lang.Object,java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object createObject(java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object createObject(java.lang.Class,java.lang.Object,java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory:void <clinit>()"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decode(java.io.Reader)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decode(java.io.Reader,java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLDecoder:void <clinit>()"
        ]
    },
    "org.apache.cayenne.BaseContext:void setUserProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneDataObject:void writePropertyDirectly(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectBaseProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readProperty(java.lang.String)",
            "org.apache.cayenne.CayenneDataObject:void writeProperty(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void setToOneTarget(java.lang.String,org.apache.cayenne.DataObject,boolean)"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:void setMarker(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void graphCommitStarted()",
            "org.apache.cayenne.CayenneContextGraphManager:void graphFlushed()"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:void unregisterType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataNode:void removeDataMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataNode:void removeDataMap(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeVertex(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object removeArc(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeVertex(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeOutgoing(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.cache.MapQueryCache:void remove(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.cache.NestedQueryCache:void remove(java.lang.String)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.configuration.web.WebConfiguration:java.util.Map getOtherParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:boolean removeAllListeners(org.apache.cayenne.event.EventSubject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.graph.GraphMap:java.lang.Object unregisterNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:java.lang.Object unregisterNode(java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deleteNew(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:void removeParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SQLTemplate:void removeTemplate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:void removeDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.ClassDescriptorMap:void addDescriptor(java.lang.String,org.apache.cayenne.reflect.ClassDescriptor)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void graphCommitted(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:void removeMarker(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void graphCommitAborted()"
        ]
    },
    "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextUniqueRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRow()"
        ]
    },
    "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRow()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.DbAttribute,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Map,java.lang.String)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void reset(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:boolean runDirectDFS()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:boolean runDirectDFS()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection:boolean runDirectDFS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection next()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodeCreated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.map.CallbackDescriptor:void addCallbackMethod(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processStartPostAdd(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartPrePersist(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartPostPersist(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartPreUpdate(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartPostUpdate(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartPreRemove(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartPostRemove(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartPostLoad(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.MergerFactory:org.apache.cayenne.merge.MergerToken createSetPrimaryKeyToModel(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean addLocal(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:boolean add(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void addDirectly(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:boolean removeLocal(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectSet:boolean remove(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectSet:void removeDirectly(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectSet:void addDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void nodeIdChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void nodeIdChanged(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void nodeCreated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void nodeCreated(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void nodeRemoved(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.CallbackDescriptor:void removeCallbackMethod(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.PersistentObjectSet:void removeDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void unregisterNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:java.lang.Object unregisterNode(java.lang.Object)",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connect(org.apache.cayenne.Persistent,java.util.List)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.reflect.BaseToOneProperty:void setTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.PropertyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readSimpleProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object getValue()"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:int hashCode()",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.access.ToManyList:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int hashCode()"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:int hashCode()",
            "org.apache.cayenne.access.trans.SelectTranslator$ColumnTracker:int hashCode()",
            "org.apache.cayenne.event.EventSubject:int hashCode()",
            "org.apache.cayenne.query.NamedQuery:int hashCode()",
            "org.apache.cayenne.remote.RemoteSession:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object[])",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.ObjectId:int hashCode()"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:void sort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object get(int)",
            "org.apache.cayenne.util.IndexPropertyList:int size()",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object remove(int)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendInserts(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendDeletes(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendInserts(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendDeletes(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataNodeDescriptor cloneDataNodeDescriptor(org.apache.cayenne.configuration.DataNodeDescriptor,org.apache.cayenne.configuration.DataChannelDescriptor)",
            "org.apache.cayenne.dba.AutoAdapter:void <clinit>()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:void addAll(java.util.Collection)",
            "org.apache.cayenne.map.DbRelationship:void setJoins(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void <init>(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.Procedure:void setCallParameters(java.util.List)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.SelectQuery:void addOrderings(java.util.List)",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendInserts(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendDeletes(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataNodeDescriptor cloneDataNodeDescriptor(org.apache.cayenne.configuration.DataNodeDescriptor,org.apache.cayenne.configuration.DataChannelDescriptor)",
            "org.apache.cayenne.dba.AutoAdapter:void <clinit>()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:void addAll(java.util.Collection)",
            "org.apache.cayenne.map.DbRelationship:void setJoins(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void <init>(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.Procedure:void setCallParameters(java.util.List)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.SelectQuery:void addOrderings(java.util.List)",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataNodeDescriptor cloneDataNodeDescriptor(org.apache.cayenne.configuration.DataNodeDescriptor,org.apache.cayenne.configuration.DataChannelDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter createAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.dba.AutoAdapter:void addFactory(org.apache.cayenne.dba.DbAdapterFactory)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapterFactory getDefaultFactory()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapterFactory createDefaultFactory()",
            "org.apache.cayenne.dba.AutoAdapter:void <clinit>()"
        ]
    },
    "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapterFactory getDefaultFactory()"
        ]
    },
    "org.apache.cayenne.graph.CompoundDiff:void addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:void setJoins(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allAttributes()",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allRelationships()",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataPort:void execute()",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void setDataMaps(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void clearDataMaps()"
        ]
    },
    "org.apache.cayenne.map.Procedure:void setCallParameters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,int)"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:void addOrderings(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map,boolean)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrderings(java.util.List)"
        ]
    },
    "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendInserts(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void appendDeletes(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void appendDiffs(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection buildStronglyConnectedComponent()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataNodeDescriptor cloneDataNodeDescriptor(org.apache.cayenne.configuration.DataNodeDescriptor,org.apache.cayenne.configuration.DataChannelDescriptor)",
            "org.apache.cayenne.dba.AutoAdapter:void <clinit>()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:void addAll(java.util.Collection)",
            "org.apache.cayenne.map.DbRelationship:void setJoins(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void <init>(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.Procedure:void setCallParameters(java.util.List)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.SelectQuery:void addOrderings(java.util.List)",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean addAll(int,java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void clear()",
            "org.apache.cayenne.access.ListWithPrefetches:void clear()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void close()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void clearFactories()",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.di.spi.InjectionStack:void reset()",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void reset()",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void reset()",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void removeAllJoins()",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.ObjRelationship:void clearDbRelationships()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.Procedure:void clearCallParameters()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void clearFactories()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void clear()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void clear()",
            "org.apache.cayenne.util.GenericResponse:void clear()",
            "org.apache.cayenne.util.PersistentObjectList:void clear()",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void clear()",
            "org.apache.cayenne.access.ListWithPrefetches:void clear()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void close()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void clearFactories()",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.di.spi.InjectionStack:void reset()",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void reset()",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void reset()",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void removeAllJoins()",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.ObjRelationship:void clearDbRelationships()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.Procedure:void clearCallParameters()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void clearFactories()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void clear()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void clear()",
            "org.apache.cayenne.util.GenericResponse:void clear()",
            "org.apache.cayenne.util.PersistentObjectList:void clear()",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.conn.PooledConnectionImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PooledConnectionImpl:void returnConnectionToThePool()",
            "org.apache.cayenne.conn.PoolManager:void shutdown()",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection getConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.dba.DbAdapterFactoryChain:void clearFactories()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.di.spi.InjectionStack:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void ReInit(java.io.InputStream,java.lang.String)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void ReInit(java.io.Reader)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void ReInit(org.apache.cayenne.ejbql.parser.EJBQLTokenManager)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void ReInit(java.io.InputStream,java.lang.String)",
            "org.apache.cayenne.exp.parser.ExpressionParser:void ReInit(java.io.Reader)",
            "org.apache.cayenne.exp.parser.ExpressionParser:void ReInit(org.apache.cayenne.exp.parser.ExpressionParserTokenManager)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:void removeAllJoins()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbRelationship:void setJoins(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void clearDbRelationships()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()"
        ]
    },
    "org.apache.cayenne.map.Procedure:void clearCallParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.Procedure:void setCallParameters(java.util.List)"
        ]
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:void clearFactories()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void clear()",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void clear(int)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void clear()",
            "org.apache.cayenne.access.ListWithPrefetches:void clear()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void close()",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void clearFactories()",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cayenne.di.spi.InjectionStack:void reset()",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void reset()",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void reset()",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:void removeAllJoins()",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.ObjRelationship:void clearDbRelationships()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.Procedure:void clearCallParameters()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:void clearFactories()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void clear()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void clear()",
            "org.apache.cayenne.util.GenericResponse:void clear()",
            "org.apache.cayenne.util.PersistentObjectList:void clear()",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:void clear()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void <init>(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DataMap,java.util.Collection,org.apache.cayenne.access.DataDomain,org.apache.cayenne.log.JdbcEventLogger)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean contains(java.lang.Object)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.event.EventBridge:void onExternalEvent(org.apache.cayenne.event.CayenneEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:boolean isGeneric()",
            "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.query.DeleteBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.UpdateBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.util.PersistentObjectList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean contains(java.lang.Object)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.event.EventBridge:void onExternalEvent(org.apache.cayenne.event.CayenneEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:boolean isGeneric()",
            "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.query.DeleteBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.UpdateBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.util.PersistentObjectList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.event.EventBridge:void onExternalEvent(org.apache.cayenne.event.CayenneEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.JavaGroupsBridge:void receive(org.jgroups.Message)",
            "org.apache.cayenne.event.JMSBridge:void onMessage(javax.jms.Message)",
            "org.apache.cayenne.event.XMPPBridge$XMPPListener:void processPacket(org.jivesoftware.smack.packet.Packet)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void prependReversedPath(java.util.LinkedList,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.DbRelationship:boolean isToMasterPK()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.Relationship getReverseRelationship()",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:boolean isGeneric()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.DeleteBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.query.UpdateBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)"
        ]
    },
    "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotIn:java.lang.Object evaluateNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:org.apache.cayenne.Persistent access$000(org.apache.cayenne.CayenneContextChildDiffLoader,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.trans.SelectTranslator$ColumnTracker:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object[],java.lang.Object[])",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectId:boolean valueEquals(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTableId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.trans.JoinTreeNode:boolean equals(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.conn.DataSourceInfo:boolean equals(java.lang.Object)",
            "org.apache.cayenne.conn.DriverDataSource:void setDriverClassName(java.lang.String)",
            "org.apache.cayenne.exp.Expression:boolean equals(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionParameter:boolean equals(java.lang.Object)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:boolean isNoop()",
            "org.apache.cayenne.map.event.MapEvent:boolean isNameChange()",
            "org.apache.cayenne.map.DbRelationship$TestJoin:boolean equals(java.lang.Object)",
            "org.apache.cayenne.map.ObjRelationship:void setDbRelationshipPath(java.lang.String)",
            "org.apache.cayenne.map.ObjRelationship:void setDeferredDbRelationshipPath(java.lang.String)",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.ObjectIdQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.Ordering:void setSortSpecString(java.lang.String)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:boolean valueEquals(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:java.lang.Object unregisterNode(java.lang.Object)",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)"
        ]
    },
    "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLSize:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLMemberOf:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLEquals:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLEquals:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLNotEquals:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLNotEquals:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendInnerJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendOuterJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.EntityResultSegment nextEntityResult()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String nextColumnAlias()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:void visitAggregateColumn(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn,org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateItem:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:void <init>(java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void <init>(org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:boolean next()"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForLOBSelectQualifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForUpdatedLOBColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void objectNode(java.lang.Object,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:org.apache.cayenne.DataChannelFilter nextFilter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain$DataDomainQueryFilterChain:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomain$DataDomainSyncFilterChain:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:int indexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.EntityResultSegment nextEntityResult()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String nextColumnAlias()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForUpdatedLOBColumns()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:org.apache.cayenne.DataChannelFilter nextFilter()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object previous()",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object remove(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object get(int)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node rootNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node rootNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToDependentEntity()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToPK()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.DeleteBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.InsertBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.InsertBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.UpdateBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:java.util.List currentList()",
            "org.apache.cayenne.util.GenericResponse:int[] currentUpdateCount()",
            "org.apache.cayenne.util.GenericResponse:boolean isList()",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object get(int)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object get(int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:org.apache.cayenne.graph.GraphDiff get(int)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.EntityResultSegment nextEntityResult()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String nextColumnAlias()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForUpdatedLOBColumns()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:org.apache.cayenne.DataChannelFilter nextFilter()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object get(int)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node rootNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node rootNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToDependentEntity()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToPK()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.DeleteBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.InsertBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.InsertBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.UpdateBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:java.util.List currentList()",
            "org.apache.cayenne.util.GenericResponse:int[] currentUpdateCount()",
            "org.apache.cayenne.util.GenericResponse:boolean isList()",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object get(int)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object get(int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:org.apache.cayenne.graph.GraphDiff get(int)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.AddRelationshipToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void processColumn(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node rootNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Node parseQuery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node rootNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.Expression expression()"
        ]
    },
    "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(org.apache.cayenne.Persistent[])"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcFkSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcPkSnapshotWithTargetSnapshot(java.util.Map)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.FlattenedArcKey:void <init>(org.apache.cayenne.ObjectId,org.apache.cayenne.ObjectId,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseRelationshipName()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getClientRelationship()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.Relationship getReverseRelationship()",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.ObjRelationship,boolean)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)",
            "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isOptional()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceDefiningTargetPrecenseAndType(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isToDependentEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceIndependentFromTargetChange()",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isToPK()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceIndependentFromTargetChange()"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:void removeDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isReadOnly()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getValuesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.query.DeleteBatchQuery:java.util.Map getCurrentQualifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)"
        ]
    },
    "org.apache.cayenne.query.InsertBatchQuery:java.lang.Object getValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getValuesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.query.InsertBatchQuery:org.apache.cayenne.ObjectId getObjectId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.query.BatchQuery:java.lang.Object getValue(java.util.Map,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getValuesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.query.UpdateBatchQuery:java.util.Map getCurrentQualifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.query.UpdateBatchQuery:org.apache.cayenne.ObjectId getObjectId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.query.BatchQuery:java.lang.Object getValue(java.util.Map,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveAll()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.util.List subList(int,int)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.EntityResultSegment nextEntityResult()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String nextColumnAlias()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForUpdatedLOBColumns()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:org.apache.cayenne.DataChannelFilter nextFilter()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object get(int)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node rootNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node rootNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToDependentEntity()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToPK()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.DeleteBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.InsertBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.InsertBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.UpdateBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object previous()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:java.util.List currentList()",
            "org.apache.cayenne.util.GenericResponse:int[] currentUpdateCount()",
            "org.apache.cayenne.util.GenericResponse:boolean isList()",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object get(int)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object get(int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:org.apache.cayenne.graph.GraphDiff get(int)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:java.util.List currentList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.GenericResponse:void <init>(org.apache.cayenne.QueryResponse)",
            "org.apache.cayenne.util.GenericResponse:java.util.List firstList()",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:int[] currentUpdateCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.GenericResponse:void <init>(org.apache.cayenne.QueryResponse)",
            "org.apache.cayenne.util.GenericResponse:int[] firstUpdateCount()",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:boolean isList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.GenericResponse:void <init>(org.apache.cayenne.QueryResponse)",
            "org.apache.cayenne.util.GenericResponse:java.util.List firstList()",
            "org.apache.cayenne.util.GenericResponse:int[] firstUpdateCount()",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.EntityResultSegment nextEntityResult()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String nextColumnAlias()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForUpdatedLOBColumns()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:org.apache.cayenne.DataChannelFilter nextFilter()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object get(int)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node rootNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node rootNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToDependentEntity()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToPK()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.DeleteBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.InsertBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.InsertBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.UpdateBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:java.util.List currentList()",
            "org.apache.cayenne.util.GenericResponse:int[] currentUpdateCount()",
            "org.apache.cayenne.util.GenericResponse:boolean isList()",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object get(int)",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.IndexPropertyList:void shift(int,int)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object get(int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:org.apache.cayenne.graph.GraphDiff get(int)"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog$SubList:org.apache.cayenne.graph.GraphDiff get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ObjectContextChangeLog$SubList:java.lang.Object get(int)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.ListWithPrefetches:int indexOf(java.lang.Object)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int indexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void sendUpdateNotification(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:boolean isEmpty(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void runGenerator(org.apache.cayenne.conn.DataSourceInfo)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataPort:void execute()",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void sendUpdateNotification(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DbGenerator:boolean isEmpty(boolean)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean isEmpty()",
            "org.apache.cayenne.access.ListWithPrefetches:boolean isEmpty()",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:boolean hasNext()",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceDefiningTargetPrecenseAndType(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.query.PrefetchTreeNode:boolean hasChildren()",
            "org.apache.cayenne.query.QueryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.query.QueryChain:boolean isEmpty()",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean isEmpty()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void setDiscriminatorColumns(java.util.Collection)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean hasSubclasses()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean isEmpty()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.PersistentObjectList:boolean isEmpty()",
            "org.apache.cayenne.util.RelationshipFault:java.util.List resolveFromDB()",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateNotEmpty(java.lang.Object,java.lang.String,java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.util.Collection)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataPort:void execute()",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void sendUpdateNotification(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DbGenerator:boolean isEmpty(boolean)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean isEmpty()",
            "org.apache.cayenne.access.ListWithPrefetches:boolean isEmpty()",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:boolean hasNext()",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceDefiningTargetPrecenseAndType(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.query.PrefetchTreeNode:boolean hasChildren()",
            "org.apache.cayenne.query.QueryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.query.QueryChain:boolean isEmpty()",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean isEmpty()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void setDiscriminatorColumns(java.util.Collection)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean hasSubclasses()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean isEmpty()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.PersistentObjectList:boolean isEmpty()",
            "org.apache.cayenne.util.RelationshipFault:java.util.List resolveFromDB()",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateNotEmpty(java.lang.Object,java.lang.String,java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.util.Collection)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientLocalRuntime:void <init>(org.apache.cayenne.di.Injector,java.util.Map,java.util.Collection)",
            "org.apache.cayenne.configuration.rop.client.ClientRuntime:void <init>(java.util.Map,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8Adapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isSourceDefiningTargetPrecenseAndType(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.map.MapLoader:void processStartDbRelationshipRef(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.ObjRelationship:void setDbRelationshipPath(java.lang.String)",
            "org.apache.cayenne.map.ObjRelationship:void setDeferredDbRelationshipPath(java.lang.String)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void <init>(org.apache.cayenne.graph.GraphManager,org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship createReverseRelationship()",
            "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processEndQuery()"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:boolean hasChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()"
        ]
    },
    "org.apache.cayenne.query.QueryChain:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain$1:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.query.QueryChain:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:boolean isEmpty(org.apache.cayenne.map.LifecycleEvent)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void performCallbacks(org.apache.cayenne.map.LifecycleEvent,org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void setDiscriminatorColumns(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexQualifiers(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:boolean hasSubclasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean hasSubclasses()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.graph.GraphDiff flush(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushAction:void postprocess(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataPort:void execute()",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void sendUpdateNotification(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.access.DbGenerator:boolean isEmpty(boolean)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean isEmpty()",
            "org.apache.cayenne.access.ListWithPrefetches:boolean isEmpty()",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:boolean hasNext()",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceDefiningTargetPrecenseAndType(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.query.PrefetchTreeNode:boolean hasChildren()",
            "org.apache.cayenne.query.QueryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.query.QueryChain:boolean isEmpty()",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean isEmpty()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void setDiscriminatorColumns(java.util.Collection)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean hasSubclasses()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean isEmpty()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.PersistentObjectList:boolean isEmpty()",
            "org.apache.cayenne.util.RelationshipFault:java.util.List resolveFromDB()",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateNotEmpty(java.lang.Object,java.lang.String,java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.BaseContext:void invalidateObjects(java.util.Collection)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void shift(int,int)"
        ]
    },
    "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ResourceLocator:java.io.InputStream findResourceStream(java.lang.String)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL getResource(java.lang.String)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findDirectoryResource(java.lang.String)"
        ]
    },
    "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateNotEmpty(java.lang.Object,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateMandatory(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.validation.ValidationResult:boolean hasFailures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)"
        ]
    },
    "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLEncoder:java.lang.String encode(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSerializable(java.lang.String,org.apache.cayenne.xml.XMLSerializable)"
        ]
    },
    "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)"
        ]
    },
    "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EntityRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.FullRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readIdMap(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareEntityRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentificationVariable:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNamedInputParameter(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitPositionalInputParameter(org.apache.cayenne.ejbql.parser.EJBQLPositionalInputParameter)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.dba.oracle.OracleSQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.access.trans.JoinTreeNode:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getRegisteredType(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.util.IteratedSelectObserver:org.apache.cayenne.access.ResultIterator getResultIterator()"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void removeMap(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:org.apache.cayenne.map.DataMap loadDataMapFromDB(java.lang.String,java.lang.String,java.lang.String[],org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:org.apache.cayenne.map.DataMap loadDataMapFromDB(java.lang.String,java.lang.String,java.lang.String[],org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.ExternalTransaction:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ExternalTransaction:void commit()",
            "org.apache.cayenne.access.ExternalTransaction:void rollback()"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)"
        ]
    },
    "org.apache.cayenne.access.InternalTransaction:void processCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ExternalTransaction:void commit()"
        ]
    },
    "org.apache.cayenne.access.InternalTransaction:void processRollback()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ExternalTransaction:void rollback()"
        ]
    },
    "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.Iterator iterator()",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:java.util.Iterator getObjectIterator()",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.Iterator iterator()",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.Persistent objectFromDataRow(org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:java.util.Iterator getObjectIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.Collection newObjects()",
            "org.apache.cayenne.access.DataContext:java.util.Collection deletedObjects()",
            "org.apache.cayenne.access.DataContext:java.util.Collection modifiedObjects()"
        ]
    },
    "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void afterInit()"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()"
        ]
    },
    "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean isIncomingEmpty(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.cache.NestedQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.util.NamedObjectFactory$DataMapFactory:boolean isNameInUse(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])"
        ]
    },
    "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.ConnectionWrapper:void retire(java.sql.SQLException)"
        ]
    },
    "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PooledConnectionImpl:void returnConnectionToThePool()"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.AddRelationshipToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8ActionBuilder:org.apache.cayenne.query.SQLAction batchAction(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OracleActionBuilder:org.apache.cayenne.query.SQLAction batchAction(org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.AddRelationshipToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultScopeProvider:void afterScopeEnd()"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultScope:void shutdown()"
        ]
    },
    "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object,org.apache.cayenne.event.EventSubject,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.event.EventBridge:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void stopListeners()",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTEqual:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotEqual:java.lang.Object evaluateNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNegate:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.IgnoreCaseNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.SimpleNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.Expression:java.lang.String toEJBQL(java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQuery(java.lang.String,java.util.List,java.util.List,long)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.CallbackMap:void encodeCallbacksAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()"
        ]
    },
    "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(java.io.PrintWriter)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.QueryLoader:java.lang.Object getRoot()"
        ]
    },
    "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:java.util.Map extractObjectId(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:boolean isToPK()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToPK()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.merge.AddRelationshipToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:boolean isFromPK()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbRelationship:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:boolean isMandatory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()"
        ]
    },
    "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)"
        ]
    },
    "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:org.apache.cayenne.exp.Expression extractQualifier()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexQualifiers(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:java.util.Collection getOverrides(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareEntityRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.DataRow rowFromFlatRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:void initCallbacks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.LifecycleCallbackRegistry getCallbackRegistry()"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.query.BaseQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,java.lang.String)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.map.DataMap getMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.exp.Expression translateToRelatedEntity(org.apache.cayenne.exp.Expression,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeys()"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:void clearDbMapping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:void removeDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isToMany()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)"
        ]
    },
    "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AddColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AddRelationshipToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.CreateTableToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropRelationshipToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:void checkPrimaryKeyChange(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)"
        ]
    },
    "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BaseQueryMetadata:void setPrefetchTree(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.ProcedureQuery:void addPrefetches(java.util.Collection)",
            "org.apache.cayenne.query.SQLTemplate:void addPrefetches(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getNode(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode addPath(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:void removeChild(java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void performCallbacks(org.apache.cayenne.map.LifecycleEvent,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent newObject(java.lang.String)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.FieldEmbeddableDescriptor:java.lang.Object createObject(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object setValueDirectly(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map resolvedObjectMap()"
        ]
    },
    "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DbEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.Embeddable:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DbRelationship:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.Procedure:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.validation.ValidationException:void <init>(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decode(java.io.Reader,java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void <init>(java.lang.String)"
        ]
    },
    "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object createObject(org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ListWithPrefetches:int lastIndexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:int lastIndexOf(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.util.ListIterator listIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:java.util.ListIterator listIterator()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()",
            "org.apache.cayenne.conn.PoolManager:void shutdown()",
            "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:void dispose()"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.util.ListIterator listIterator(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.ListIterator listIterator(int)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator(int)"
        ]
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void checkDescriptorInitialized()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean removeAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean retainAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:void processResultSet(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.jdbc.IdRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void <init>(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.ProcedureTranslator:java.lang.String createSqlString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction$MySQLProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.postgres.PostgresProcedureAction$PostgresProcedureTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.access.util.DefaultOperationObserver:boolean hasExceptions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.util.IteratedSelectObserver:org.apache.cayenne.access.ResultIterator getResultIterator()"
        ]
    },
    "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:void <init>(org.apache.cayenne.access.DataDomain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain$DataDomainQueryFilterChain:void <init>(org.apache.cayenne.access.DataDomain)",
            "org.apache.cayenne.access.DataDomain$DataDomainSyncFilterChain:void <init>(org.apache.cayenne.access.DataDomain)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shutdown()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shutdown()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.IdRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void <init>(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:boolean hasExceptions()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:void <init>(org.apache.cayenne.access.DataDomain)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveAll()",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:int pageIndex(int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.util.ListIterator listIterator(int)",
            "org.apache.cayenne.access.IncrementalFaultList:int size()",
            "org.apache.cayenne.access.ListWithPrefetches:int size()",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void afterInit()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:int getPoolSize()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyInUse()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyUnused()",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:boolean canCreatePK(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.exp.Expression:java.util.List filterObjects(java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getTargetAttributes()",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getSourceAttributes()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.EntityInheritanceTree:int getChildrenCount()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isFlattened()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.DeleteBatchQuery:int size()",
            "org.apache.cayenne.query.InsertBatchQuery:int size()",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:int size()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int defaultListenersSize()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:int size()",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:boolean next()",
            "org.apache.cayenne.util.GenericResponse:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:int size()",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:void <init>(java.util.List,int,int)",
            "org.apache.cayenne.ObjectContextChangeLog:void setMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffs()",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffsAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:int size()",
            "org.apache.cayenne.ObjectContextChangeLog:int sizeAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.IdRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void <init>(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:boolean hasExceptions()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:void <init>(org.apache.cayenne.access.DataDomain)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:int size()",
            "org.apache.cayenne.access.ListWithPrefetches:int size()",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void afterInit()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:int getPoolSize()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyInUse()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyUnused()",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:boolean canCreatePK(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.exp.Expression:java.util.List filterObjects(java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getTargetAttributes()",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getSourceAttributes()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.EntityInheritanceTree:int getChildrenCount()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isFlattened()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.DeleteBatchQuery:int size()",
            "org.apache.cayenne.query.InsertBatchQuery:int size()",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:int size()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int defaultListenersSize()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:int size()",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:boolean next()",
            "org.apache.cayenne.util.GenericResponse:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:int size()",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:void <init>(java.util.List,int,int)",
            "org.apache.cayenne.ObjectContextChangeLog:void setMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffs()",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffsAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:int size()",
            "org.apache.cayenne.ObjectContextChangeLog:int sizeAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:void afterInit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conf.WebApplicationContextFilter:void init(javax.servlet.FilterConfig)"
        ]
    },
    "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.conn.PoolManager:int getPoolSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:boolean canGrowPool()",
            "org.apache.cayenne.conn.PoolManager:int growPool(int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:int getCurrentlyInUse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager$PoolMaintenanceThread:void run()"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:int getCurrentlyUnused()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager$PoolMaintenanceThread:void run()"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBProcedureTranslator:java.lang.String createSqlString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:boolean canCreatePK(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.Expression:java.util.List filterObjects(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.QueryLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:java.util.Collection getTargetAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DbRelationship:java.util.Collection getSourceAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:int getChildrenCount()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isFlattened()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceIndependentFromTargetChange()",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.query.DeleteBatchQuery:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BatchQuery:boolean isEmpty()",
            "org.apache.cayenne.query.BatchQuery:boolean next()"
        ]
    },
    "org.apache.cayenne.query.InsertBatchQuery:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.query.BatchQuery:boolean isEmpty()",
            "org.apache.cayenne.query.BatchQuery:boolean next()"
        ]
    },
    "org.apache.cayenne.query.UpdateBatchQuery:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BatchQuery:boolean isEmpty()",
            "org.apache.cayenne.query.BatchQuery:boolean next()"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int defaultListenersSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:int indexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shutdown()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shutdown()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.IdRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void <init>(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:boolean hasExceptions()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:void <init>(org.apache.cayenne.access.DataDomain)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:int size()",
            "org.apache.cayenne.access.ListWithPrefetches:int size()",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void afterInit()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:int getPoolSize()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyInUse()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyUnused()",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:boolean canCreatePK(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.exp.Expression:java.util.List filterObjects(java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getTargetAttributes()",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getSourceAttributes()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.EntityInheritanceTree:int getChildrenCount()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isFlattened()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.DeleteBatchQuery:int size()",
            "org.apache.cayenne.query.InsertBatchQuery:int size()",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:int size()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int defaultListenersSize()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveAll()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:int pageIndex(int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.util.ListIterator listIterator(int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:int size()",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:boolean next()",
            "org.apache.cayenne.util.GenericResponse:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:int size()",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:void <init>(java.util.List,int,int)",
            "org.apache.cayenne.ObjectContextChangeLog:void setMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffs()",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffsAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:int size()",
            "org.apache.cayenne.ObjectContextChangeLog:int sizeAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.GenericResponse:boolean next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.GenericResponse:void <init>(org.apache.cayenne.QueryResponse)",
            "org.apache.cayenne.util.GenericResponse:java.util.List firstList()",
            "org.apache.cayenne.util.GenericResponse:int[] firstUpdateCount()",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.GenericResponse:void <init>(org.apache.cayenne.QueryResponse)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.event.SnapshotEvent:java.lang.String toString()",
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.IdRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void <init>(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:boolean hasExceptions()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:void <init>(org.apache.cayenne.access.DataDomain)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:boolean hasNext()",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object next()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:int size()",
            "org.apache.cayenne.access.ListWithPrefetches:int size()",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void afterInit()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.conn.PoolManager:void shrinkPool(int)",
            "org.apache.cayenne.conn.PoolManager:int getPoolSize()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyInUse()",
            "org.apache.cayenne.conn.PoolManager:int getCurrentlyUnused()",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:boolean canCreatePK(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void pop()",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:void addResultSetColumn()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node popNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void clearNodeScope(org.apache.cayenne.ejbql.parser.Node)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,int)",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:void closeNodeScope(org.apache.cayenne.ejbql.parser.Node,boolean)",
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node popNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void clearNodeScope(org.apache.cayenne.exp.parser.Node)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)",
            "org.apache.cayenne.exp.Expression:java.util.List filterObjects(java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getTargetAttributes()",
            "org.apache.cayenne.map.DbRelationship:java.util.Collection getSourceAttributes()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.EntityInheritanceTree:int getChildrenCount()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isFlattened()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,int)",
            "org.apache.cayenne.query.DeleteBatchQuery:int size()",
            "org.apache.cayenne.query.InsertBatchQuery:int size()",
            "org.apache.cayenne.query.UpdateBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,java.util.List,java.util.List,java.util.Collection,int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:int size()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int defaultListenersSize()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$1:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:boolean hasNext()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object next()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:int size()",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:boolean next()",
            "org.apache.cayenne.util.GenericResponse:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int size()",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.IndexPropertyList:void shift(int,int)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:int size()",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:void <init>(java.util.List,int,int)",
            "org.apache.cayenne.ObjectContextChangeLog:void setMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffs()",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffsAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextChangeLog:int size()",
            "org.apache.cayenne.ObjectContextChangeLog:int sizeAfterMarker(java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog$SubList:void <init>(java.util.List,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ObjectContextChangeLog:java.util.List immutableList(int,int)"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:org.apache.cayenne.graph.GraphDiff getDiffs()",
            "org.apache.cayenne.CayenneContextGraphManager:org.apache.cayenne.graph.GraphDiff getDiffsSinceLastFlush()",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffsAfterMarker(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:org.apache.cayenne.graph.GraphDiff getDiffsSinceLastFlush()"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:boolean hasChanges()",
            "org.apache.cayenne.CayenneContextGraphManager:boolean hasChangesSinceLastFlush()"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:int sizeAfterMarker(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:boolean hasChangesSinceLastFlush()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:java.util.List subList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.IncrementalFaultList:java.util.List subList(int,int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.List subList(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.util.List subList(int,int)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.List subList(int,int)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:java.lang.Object writeReplace()"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.util.List subList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.IncrementalFaultList:java.util.List subList(int,int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.List subList(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.util.List subList(int,int)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.List subList(int,int)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:java.lang.Object writeReplace()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.util.List subList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.IncrementalFaultList:java.util.List subList(int,int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.List subList(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.util.List subList(int,int)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.List subList(int,int)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:java.lang.Object writeReplace()"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog$SubList:java.lang.Object writeReplace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:java.lang.Object[] toArray(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:java.lang.Object[] toArray(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray()",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray()"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:java.lang.Object[] toArray(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray()",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray()"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTList:void <init>(java.lang.Object[])",
            "org.apache.cayenne.exp.parser.ASTList:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTList:void <init>(java.util.Iterator)",
            "org.apache.cayenne.exp.parser.ASTList:void setOperand(int,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void jjtClose()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:java.lang.Object[] toArray(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray()",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.di.Module[] mergeModules(org.apache.cayenne.di.Module,java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:org.apache.cayenne.util.EntityMergeListener[] getEntityMergeListeners()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:org.apache.cayenne.util.EntityMergeListener[] getEntityMergeListeners()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.jdbc.ColumnDescriptor[] getResultColumns()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.dba.TypesHandler$TypesParseHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.apache.cayenne.resource.FilesystemResourceLocator:void <init>(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:org.apache.cayenne.util.EntityMergeListener[] getEntityMergeListeners()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:org.apache.cayenne.util.EntityMergeListener[] getEntityMergeListeners()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateResourceManager:void clearCache()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomain:void resetProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void <init>(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)"
        ]
    },
    "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void <init>(org.apache.cayenne.access.ObjectStore)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.cache.NestedQueryCache:void clear()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.dba.JdbcPkGenerator:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityResolver:void clearCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void reset()",
            "org.apache.cayenne.map.DataMap:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DataMap:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void removeDataMap(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:void setParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.ProcedureQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:void clearParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:void clearDescriptors()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.DeepMergeOperation:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.ObjectDetachOperation:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneDataObject:void setPersistenceState(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataRowUtils:void refreshObjectWithSnapshot(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow,boolean)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void processDeletedID(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.util.ObjectContextGraphAction:boolean markAsDirty(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:boolean markAsDirty(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent createFault(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deleteNew(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deletePersistent(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean checkNullParameter(org.apache.cayenne.ejbql.EJBQLExpression,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitLike(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:boolean isOverriden(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Enum lookup(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:boolean containsArcSnapshot(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean containsVertex(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean hasArc(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:boolean isReflexive(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)"
        ]
    },
    "org.apache.cayenne.exp.Expression$1:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.merge.DefaultValueForNullProvider:boolean hasValueFor(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:boolean overrideExists(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String getCacheKey()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.query.QueryMetadataWrapper:boolean isFetchingDataRows()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getPageSize()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getFetchLimit()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getStatementFetchSize()"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:boolean hasMarker(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:boolean hasChangesSinceLastFlush()",
            "org.apache.cayenne.CayenneContextGraphManager:org.apache.cayenne.graph.GraphDiff getDiffsSinceLastFlush()"
        ]
    },
    "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.FlattenedArcKey:boolean bidiEquals(org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.FlattenedArcKey:boolean uniEquals(org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void processSnapshotChanges(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void processRemoteEvent(org.apache.cayenne.access.event.SnapshotEvent)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)"
        ]
    },
    "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain get()",
            "org.apache.cayenne.configuration.web.WebConfiguration:java.util.Collection createModules(org.apache.cayenne.di.Module[])",
            "org.apache.cayenne.conn.DriverDataSource:java.sql.Driver loadDriver(java.lang.String)",
            "org.apache.cayenne.ejbql.parser.JavaCharStream:void ExpandBuff(boolean)",
            "org.apache.cayenne.exp.parser.JavaCharStream:void ExpandBuff(boolean)",
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression fromString(java.lang.String)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.remote.hessian.HessianConnection:java.lang.String buildExceptionMessage(java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,org.apache.cayenne.ashwood.graph.MapDigraph$1)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object,org.apache.cayenne.ashwood.graph.MapDigraph$1)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object,org.apache.cayenne.ashwood.graph.MapDigraph$1)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientModule:void configure(org.apache.cayenne.di.Binder)",
            "org.apache.cayenne.configuration.rop.server.ROPServerModule:void configure(org.apache.cayenne.di.Binder)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.exp.Expression buildIdQualifier(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchExp(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.query.ObjectIdQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EntityRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)"
        ]
    },
    "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processEndQuery()"
        ]
    },
    "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:java.lang.StringBuffer toStringBuffer(java.lang.StringBuffer,boolean)"
        ]
    },
    "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.util.Map)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.util.Map)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.ObjectId createTargetObjectId(java.lang.String,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.ObjectId:org.apache.cayenne.ObjectId createReplacementId()"
        ]
    },
    "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.DataRowPostProcessor:java.util.Collection getOverrides(org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Map)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$ObjectMultiColumnOperand:void appendValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String resolveId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.reflect.ClassDescriptor getEntityDescriptor(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.StringBuilder findOrCreateMarkedBuffer(java.lang.String)",
            "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.access.jdbc.EJBQLJoinAppender getJoinAppender(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindPositionalParameter(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitPositionalInputParameter(org.apache.cayenne.ejbql.parser.EJBQLPositionalInputParameter)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindNamedParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNamedInputParameter(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.Object getBoundParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String guessType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.trans.DataObjectMatchTranslator:org.apache.cayenne.map.DbAttribute getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()"
        ]
    },
    "org.apache.cayenne.access.trans.DataObjectMatchTranslator:java.lang.Object getValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getRegisteredType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.RowDescriptor getDescriptor(org.apache.cayenne.access.types.ExtendedTypeMap)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getRegisteredType(java.lang.Class)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getExplictlyRegisteredType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory:org.apache.cayenne.access.types.ExtendedType getType(java.lang.Class)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getRegisteredType(java.lang.String)",
            "org.apache.cayenne.access.types.SerializableTypeFactory:org.apache.cayenne.access.types.ExtendedType getType(java.lang.Class)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataNode getNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataNode lookupDataNode(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedInsert(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:org.apache.cayenne.access.QueryEngine engineForDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.access.QueryEngine engineForDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlushAction:org.apache.cayenne.access.ObjectDiff objectDiff(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:org.apache.cayenne.query.Query queryForExecutedQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.access.DataDomainSyncBucket$PropagatedValueFactory:java.lang.Object create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BatchQuery:java.lang.Object getValue(java.util.Map,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.access.DataNode:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$1:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$2:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$4:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.ObjectDiff:java.lang.Object getSnapshotValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$3:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:java.lang.Object getNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptOIDQuery()",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:java.lang.Object unregisterNode(java.lang.Object)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptOIDQuery()",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:java.lang.Object getNodeNoSync(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.Persistent getResolved(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:java.util.List getResults(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.ToOneFault:java.lang.Object resolveFault(org.apache.cayenne.Persistent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff:org.apache.cayenne.ObjectId getArcSnapshotValue(java.lang.String)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void injectValueHolder(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readProperty(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.Transaction:java.sql.Connection getConnection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:java.lang.Object next()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:java.lang.Object getArc(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:int outgoingSize(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean isOutgoingEmpty(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter$DbEntityComparator:int compare(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter$DbEntityComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCacheFactory:org.apache.cayenne.cache.QueryCache getQueryCache(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.cache.OSQueryCache:java.lang.String getCronExpression(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.cache.OSQueryCache:int getRrefreshPeriod(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification getRefreshSpecification(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)"
        ]
    },
    "org.apache.cayenne.configuration.DefaultRuntimeProperties:java.lang.String get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DefaultObjectMapRetainStrategy:java.util.Map createObjectMap()",
            "org.apache.cayenne.configuration.rop.client.HessianConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:boolean shouldConfigureDataSourceFromProperties(org.apache.cayenne.configuration.DataNodeDescriptor)",
            "org.apache.cayenne.configuration.server.PropertyDataSourceFactory:java.lang.String getProperty(java.lang.String,java.lang.String)",
            "org.apache.cayenne.configuration.DefaultRuntimeProperties:int getInt(java.lang.String,int)",
            "org.apache.cayenne.configuration.DefaultRuntimeProperties:boolean getBoolean(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.dba.TypesHandler:java.lang.String[] externalTypesForJdbcType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String[] externalTypesForJdbcType(int)"
        ]
    },
    "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:void render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node,java.lang.Object,java.lang.String,int)",
            "org.apache.cayenne.map.MapLoader:void processStartDbAttribute(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void processStartProcedureParameter(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.dba.TypesMapping:java.lang.String getSqlNameByType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void appendUpdatedParameter(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute,java.lang.Object)",
            "org.apache.cayenne.access.types.BigIntegerType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.types.CalendarType:java.lang.Object convertToJdbcObject(java.util.Calendar,int)",
            "org.apache.cayenne.access.types.UtilDateType:java.lang.Object convertToJdbcObject(java.lang.Object,int)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.TypesMapping$TypeInfo:java.lang.String toString()",
            "org.apache.cayenne.dba.TypesMapping:java.lang.String pickDataType(int,org.apache.cayenne.dba.TypesMapping$TypeInfo[])",
            "org.apache.cayenne.map.DbAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ProcedureParameter:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.merge.SetColumnTypeToDb:java.lang.String getTokenValue()",
            "org.apache.cayenne.merge.SetColumnTypeToModel:java.lang.String getTokenValue()"
        ]
    },
    "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByJava(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByJava(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:void render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node,java.lang.Object,java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.dba.TypesMapping:int getSqlTypeByJava(java.lang.String)"
        ]
    },
    "org.apache.cayenne.dba.TypesMapping:java.lang.String getJavaBySqlType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.DbAttribute,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.dba.TypesMapping:java.lang.String getJavaBySqlType(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:java.lang.String getDefaultJavaClass(int,int)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:org.apache.cayenne.di.spi.Binding getBinding(org.apache.cayenne.di.Key)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.spi.ListProvider getListProvider()",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.spi.MapProvider getMapProvider()"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:void changeBindingScope(org.apache.cayenne.di.Key,org.apache.cayenne.di.Scope)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultBindingBuilder:void in(org.apache.cayenne.di.Scope)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:void in(org.apache.cayenne.di.Scope)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:void in(org.apache.cayenne.di.Scope)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:org.apache.cayenne.di.Provider getProvider(org.apache.cayenne.di.Key)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.ConstructorInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultInjector:org.apache.cayenne.di.Provider getProvider(java.lang.Class)",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:void injectMember(java.lang.Object,java.lang.reflect.Field,java.lang.String)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.CompiledExpression:org.apache.cayenne.reflect.ClassDescriptor getEntityDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.reflect.ClassDescriptor getEntityDescriptor(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String createIdAlias(java.lang.String)",
            "org.apache.cayenne.ejbql.parser.CompiledExpression:org.apache.cayenne.reflect.ClassDescriptor getRootDescriptor()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.CompiledExpression:java.util.List getIncomingRelationships(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$JoinVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSum:java.lang.String getJavaType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:void visitAggregateColumn(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn,org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.event.JavaGroupsBridgeFactory:org.apache.cayenne.event.EventBridge createJavaGroupsBridge(java.util.Collection,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.JavaGroupsBridgeFactory:org.apache.cayenne.event.EventBridge createEventBridge(java.util.Collection,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cayenne.event.JMSBridgeFactory:org.apache.cayenne.event.EventBridge createEventBridge(java.util.Collection,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.remote.RemoteSession:org.apache.cayenne.event.EventBridge createServerEventBridge()"
        ]
    },
    "org.apache.cayenne.event.XMPPBridgeFactory:org.apache.cayenne.event.EventBridge createEventBridge(java.util.Collection,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.remote.RemoteSession:org.apache.cayenne.event.EventBridge createServerEventBridge()"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTDbPath:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.graph.GraphMap:java.lang.Object getNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptOIDQuery()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptOIDQuery()",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void nodeUpdated(java.lang.Object)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)"
        ]
    },
    "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:void logQuery(java.lang.String,java.util.List,java.util.List,long)"
        ]
    },
    "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.map.MapLoader:void processEndDataMap()"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Embeddable getEmbeddable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.Embeddable getEmbeddable(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.Embeddable getEmbeddable()"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.SQLResult getResult(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.SQLResult getResult(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityInheritanceTree lookupInheritanceTree(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityInheritanceTree lookupInheritanceTree(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceDefiningTargetPrecenseAndType(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure getProcedure(java.lang.String)",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.query.Query lookupQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.query.Query getQuery(java.lang.String)",
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query resolveQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DbEntity _lookupDbEntity(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DbEntity getDbEntity(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity _lookupObjEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity getObjEntity(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity lookupObjEntity(java.lang.Class)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity lookupObjEntity(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.MapLoader:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Attribute getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DbLoader:java.lang.String uniqueRelName(org.apache.cayenne.map.Entity,java.lang.String)",
            "org.apache.cayenne.map.DbJoin:org.apache.cayenne.map.DbAttribute getSource()",
            "org.apache.cayenne.map.DbJoin:org.apache.cayenne.map.DbAttribute getTarget()",
            "org.apache.cayenne.map.Entity$PathIterator:org.apache.cayenne.util.CayenneMapEntry next()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:boolean isInherited()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Attribute getAttribute(java.lang.String)",
            "org.apache.cayenne.map.PathComponentIterator:org.apache.cayenne.map.PathComponent next()",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory$ObjAttributeFactory:boolean isNameInUse(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.PathComponentIterator:org.apache.cayenne.map.PathComponent next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.PathComponentIterator:java.lang.Object next()"
        ]
    },
    "org.apache.cayenne.merge.DefaultValueForNullProvider:org.apache.cayenne.access.jdbc.ParameterBinding get(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DefaultValueForNullProvider:java.util.List createSql(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.EJBQLQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)"
        ]
    },
    "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.EJBQLQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.query.NamedQuery:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ProcedureQueryBuilder:org.apache.cayenne.query.Query getQuery()"
        ]
    },
    "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.ProcedureQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String getCacheKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.EhCacheQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.MapQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:java.lang.String getCacheKey()",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.OSQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String getCacheKey()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String[] getCacheGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.EhCacheQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.MapQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification getRefreshSpecification(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.OSQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.remote.IncrementalQuery$1:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:java.lang.String[] getCacheGroups()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:boolean isFetchingDataRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:boolean isFetchingDataRows()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RangeQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:int getPageSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.ejbql.EJBQLExpressionVisitor getIdentifierColumnsTranslator(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List buildResultColumns()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getPageSize()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getPageSize()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getPageSize()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getPageSize()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptPaginatedQuery()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:int getFetchLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getFetchLimit()",
            "org.apache.cayenne.dba.frontbase.FrontBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.hsqldb.HSQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.mysql.MySQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.postgres.PostgresSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getFetchLimit()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getFetchLimit()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getFetchLimit()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:int getStatementFetchSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getStatementFetchSize()"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void initWithProperties(java.util.Map)"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:java.lang.String getTemplate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:java.lang.String extractTemplateString()"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:java.lang.String getCustomTemplate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory:org.apache.cayenne.reflect.Converter getConverter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.ClassDescriptor getSubclassDescriptor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getSubclassDescriptor(java.lang.Class)",
            "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.Property getDeclaredProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.Property getDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.Property getProperty(java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:java.lang.String getColumnPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EntityRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyUtils:java.lang.Object getSimpleProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:java.lang.Object getProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.remote.service.BaseRemoteService:void initEventBridgeParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.BaseRemoteService:void <init>(org.apache.cayenne.configuration.ObjectContextFactory,java.util.Map)"
        ]
    },
    "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.DataChannel getSharedChannel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.remote.service.ServerSession createServerSession(java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.NameConverter:java.lang.String specialCharsToJava(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NameConverter:java.lang.String javaToUnderscored(java.lang.String)",
            "org.apache.cayenne.util.NameConverter:java.lang.String underscoredToJava(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory:java.lang.String createName(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.NamedObjectFactory:java.lang.String createName(java.lang.Class,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object createObject(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object createObject(java.lang.Class,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.xml.XMLMappingDescriptor:org.apache.cayenne.xml.SerializableEntity getEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.BaseContext:java.lang.Object getUserProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneDataObject:java.lang.Object readPropertyDirectly(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectBaseProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readProperty(java.lang.String)",
            "org.apache.cayenne.CayenneDataObject:void writeProperty(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.ObjectId:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.FlattenedArcKey:int hashCode()",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.query.ObjectIdQuery:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectId:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:java.lang.StringBuffer toStringBuffer(java.lang.StringBuffer,boolean)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateProcessor:org.apache.cayenne.access.jdbc.SQLStatement processTemplate(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.DataDomainFlattenedBucket:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomainSyncBucket:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.exp.Expression buildIdQualifier(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:boolean hasChanges()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:boolean hasChanges()",
            "org.apache.cayenne.access.DataContext:void rollbackChangesLocally()",
            "org.apache.cayenne.access.DataContext:void rollbackChanges()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void stopListeners()"
        ]
    },
    "org.apache.cayenne.query.NamedQuery:void <init>(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(java.lang.String,java.util.Map)",
            "org.apache.cayenne.access.DataContext:java.util.List performQuery(java.lang.String,java.util.Map,boolean)",
            "org.apache.cayenne.query.NamedQuery:void <init>(java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.query.SelectQueryMetadata:void resolveAutoAliases(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQueryMetadata:void resolveAutoAliases(org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryMetadata:void resolveAutoAliases(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.ObjectId:boolean isReplacementIdAttached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.query.ObjectIdQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.Cayenne:java.util.Map extractObjectId(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand:java.util.Collection getKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.access.trans.DataObjectMatchTranslator:java.util.Iterator keys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:java.util.Iterator getQueries()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:java.util.Iterator vertexIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:java.util.Iterator vertexIterator()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:java.util.Iterator vertexIterator()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean containsAllVertices(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.cache.OSQueryCache:java.util.Collection getGroupNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.TypesMapping:java.lang.String[] getDatabaseTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SQLTemplate:java.util.Collection getTemplateKeys()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendPrimaryKeys(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:void appendRelationships(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:java.util.SortedMap getRelationshipMap()",
            "org.apache.cayenne.map.ObjEntity:void appendRelationships(java.util.Map)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EntityRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.InheritanceAwareEntityRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:int registeredObjectsCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:int order()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCache:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.NestedQueryCache:int size()"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:int listenersSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$DataRowListHelper:boolean incorrectObjectType(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:void validateListObject(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:java.util.Collection getDataNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataNode:java.util.Collection getDataMaps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataPort:void execute()"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:java.util.Collection registeredNodes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.graph.GraphMap:java.util.Collection registeredNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.ObjectContextDeleteAction:java.util.Collection toCollection(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.Util$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.Util$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.CallbackDescriptor:boolean moveMethod(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.CallbackDescriptor:void setCallbackMethodAt(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.CallbackDescriptor:void clear()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection$DFSSeenVerticesPredicate:boolean evaluate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:void <init>(org.apache.cayenne.ashwood.graph.ArcIterator,org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)",
            "org.apache.cayenne.xml.XMLUtil:org.w3c.dom.Node firstMatch(org.w3c.dom.NodeList,org.apache.commons.collections.Predicate)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection$NotSeenPredicate:boolean evaluate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:void <init>(org.apache.cayenne.ashwood.graph.ArcIterator,org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)",
            "org.apache.cayenne.xml.XMLUtil:org.w3c.dom.Node firstMatch(org.w3c.dom.NodeList,org.apache.commons.collections.Predicate)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:boolean hasChanges()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:java.util.Collection dirtyNodes()"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:java.util.Collection dirtyNodes(int)"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.OSQueryCache:void <init>()",
            "org.apache.cayenne.cache.OSQueryCache:void <init>(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)"
        ]
    },
    "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)"
        ]
    },
    "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)"
        ]
    },
    "org.apache.cayenne.ObjectContextStateLog:void graphReverted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.CayenneContextFactory:org.apache.cayenne.ObjectContext createContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalClientServerChannelProvider:org.apache.cayenne.DataChannel get()",
            "org.apache.cayenne.configuration.web.SessionContextRequestHandler:void requestStart(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.cayenne.configuration.CayenneRuntime:org.apache.cayenne.ObjectContext getContext()",
            "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.DataChannel createChannel()"
        ]
    },
    "org.apache.cayenne.CayenneContext:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyMapProperty:java.lang.Object getMapKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.PersistentObject:java.lang.Object getMapKey(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:java.lang.Object getMapKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.PersistentObject:java.lang.Object getMapKey(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:boolean isFault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void invalidate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataRowUtils$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectStore$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.CayenneContextQueryAction$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readPropertyDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.reflect.BaseProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void injectValueHolder(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:boolean isFault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readPropertyDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.BaseToManyProperty:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void injectValueHolder(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:void setValue(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:boolean isFault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()"
        ]
    },
    "org.apache.cayenne.reflect.BaseProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataRowUtils$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.EmbeddedFieldAccessor:void setValue(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.FieldEmbeddableDescriptor:java.lang.Object createObject(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.FieldEmbeddableDescriptor:java.lang.Object createObject(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTObjPath:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTAnd:void injectValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTAnd:void injectValue(java.lang.Object)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.Util$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.CayenneContextChildDiffLoader$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.util.Util$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.xml.XMLEncoder:java.lang.String encode(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLEncoder:java.lang.String encode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.trans.TrimmingQualifierTranslator:void processColumn(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void processColumn(org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processColumn(org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processColumn(org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processColumn(org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:java.lang.Appendable appendPart(java.lang.Appendable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void doAppendPart(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.QualifierTranslator:void doAppendPart()"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexQualifiers(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLProcedureAction:void processResultSet(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.access.DataContext:void rollbackChanges()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.remote.service.DispatchHelper:java.lang.Object dispatch(org.apache.cayenne.DataChannel,org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContext:void rollbackChanges()"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void doAppendPart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:java.lang.Appendable appendPart(java.lang.Appendable)",
            "org.apache.cayenne.dba.oracle.Oracle8QualifierTranslator:void doAppendPart()"
        ]
    },
    "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression expWithParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map,boolean)"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression getDbQualifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.Statement createStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:boolean safeExecute(java.sql.Connection,java.lang.String)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.Statement createStatement()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.Statement createStatement()",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:void setIdentityInsert(java.sql.Connection,boolean)",
            "org.apache.cayenne.dba.JdbcPkGenerator:int runUpdate(org.apache.cayenne.access.DataNode,java.lang.String)",
            "org.apache.cayenne.merge.AbstractToDbToken:void executeSql(org.apache.cayenne.merge.MergerContext,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.Statement createStatement(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.Statement createStatement(int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.Statement createStatement(int,int)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String,int,int)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.DbGeneratorPostprocessor$HSQLDBPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)",
            "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int[])",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int[])"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.remote.RemoteSession establishSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.hessian.HessianConnection:void connect()"
        ]
    },
    "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.remote.RemoteSession establishSharedSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.hessian.HessianConnection:void connect()"
        ]
    },
    "org.apache.cayenne.access.DataContext:java.util.List performQuery(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.IncrementalFaultList:void resolveAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.util.Map)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.util.Map)",
            "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectId)"
        ]
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataRowUtils:void mergeObjectWithSnapshot(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.Persistent objectFromDataRow(org.apache.cayenne.DataRow,org.apache.cayenne.ObjectId,org.apache.cayenne.reflect.ClassDescriptor)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectDescriptor:void shallowMerge(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void shallowMerge(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void shallowMerge(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void shallowMerge(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:java.lang.Object convertSingleObject(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.util.ObjectDetachOperation,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitSelect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitDelete(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitUpdate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$CountColumnVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIsEmpty(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitDbPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSubselect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:org.apache.cayenne.ejbql.EJBQLExpression ejbqlQualifierForEntityAndSubclasses(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLOrderByTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitGroupBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitHaving(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitOrderBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitSelectExpressions(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateField(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.dba.sybase.SybaseEJBQLConditionTranslator:boolean visitSubselect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitSelectExpression(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOrderBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:java.lang.String getSyntheticId()",
            "org.apache.cayenne.ejbql.parser.SimpleNode:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver:org.apache.cayenne.access.PrefetchProcessorNode synchronizedRootResultNodeFromDataRows(org.apache.cayenne.query.PrefetchTreeNode,java.util.List,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List)"
        ]
    },
    "org.apache.cayenne.query.BaseQueryMetadata:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.EJBQLQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:void routePrefetches(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator$1:void appendMultiColumnPath(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator$2:void appendMultiColumnPath(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator$1:void appendMultiColumnPath(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator:void access$000(org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator,org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator$1:void appendMultiColumnPath(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitInnerFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLInnerFetchJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitInnerJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLInnerJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitOuterFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLOuterFetchJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitOuterJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLOuterJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitSelectClause(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLSelectClause:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIsEmpty(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIsEmpty:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitDistinct(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLDistinct:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLWhere:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.trans.JoinStack:void pushJoin(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:void dbRelationshipAdded(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGlobalException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGlobalException(java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGlobalException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGlobalException(java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:void nextGlobalException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGlobalException(java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGlobalException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGlobalException(java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGlobalException(java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:org.apache.cayenne.graph.GraphDiff filter(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:java.util.Map buildDBDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextMergeHandler$1:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$2:void run()",
            "org.apache.cayenne.CayenneContextMergeHandler$3:void run()",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.query.BatchQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.StackLookupParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextBatchCount(org.apache.cayenne.query.Query,int[])"
        ]
    },
    "org.apache.cayenne.access.DataNodeQueryAction$1:void nextBatchCount(org.apache.cayenne.query.Query,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextBatchCount(org.apache.cayenne.query.Query,int[])"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextBatchCount(org.apache.cayenne.query.Query,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextBatchCount(org.apache.cayenne.query.Query,int[])"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextCount(org.apache.cayenne.query.Query,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:boolean processUpdate(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataNodeQueryAction$1:void nextCount(org.apache.cayenne.query.Query,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:boolean processUpdate(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLProcedureAction:boolean processUpdate(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection:java.util.Collection next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object next()"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:void indexSorter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortDbEntities(java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjEntities(java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection newPooledConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:int growPool(int,java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:void init(javax.sql.ConnectionPoolDataSource,int,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:void <init>(java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,org.apache.cayenne.log.JdbcEventLogger)",
            "org.apache.cayenne.conn.PoolManager:void <init>(javax.sql.ConnectionPoolDataSource,int,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:java.sql.Connection getConnection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void reconnect()",
            "org.apache.cayenne.conn.PoolManager:java.sql.Connection getConnection()"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:void <init>(org.apache.cayenne.di.Module[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultScopeProvider:void <init>(org.apache.cayenne.di.spi.DefaultScope,org.apache.cayenne.di.Provider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultScope:org.apache.cayenne.di.Provider scope(org.apache.cayenne.di.Provider)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder add(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.ServerModule:void configure(org.apache.cayenne.di.Binder)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLAggregate:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler:void access$600(org.apache.cayenne.ejbql.parser.Compiler,org.apache.cayenne.ejbql.parser.EJBQLPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:void prepareFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.ejbql.parser.Compiler$PathVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_scan_token(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_247()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_246()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_245()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_102()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_41()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_118()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_122()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_186()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_109()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_48()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_47()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_117()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_46()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_189()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_44()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_112()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_53()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_51()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_45()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_49()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_93()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_41()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_40()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_39()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_28()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_29()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_27()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_180()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_36()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_22()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_35()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_34()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_325()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_324()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_323()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_322()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_326()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_32()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_329()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_292()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_294()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_157()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_277()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_161()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_276()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_270()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_271()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_249()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_248()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_174()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_177()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_178()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_162()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_66()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_327()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_315()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_169()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_168()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_23()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_19()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_22()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_275()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_182()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_67()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_190()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_253()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_24()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_251()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_269()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_268()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_267()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_321()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_320()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_250()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_319()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_328()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_318()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_317()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_316()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_60()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_291()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_59()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_290()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_289()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_288()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_287()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_222()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_62()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_216()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_53()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_52()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_126()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_283()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_261()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_51()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_260()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_173()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_172()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_150()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_149()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_148()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_147()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_146()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_145()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_132()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_131()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_130()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_129()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_128()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_127()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_153()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_152()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_144()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_143()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_141()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_138()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_137()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_136()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_140()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_135()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_134()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_133()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Token jj_consume_token(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Node parseQuery()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void set_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_entity_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void classname()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameters()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void count()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void avg()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void max()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void min()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sum()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void where_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void having_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void literal_or_param()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void empty_collection_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void exists_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_or_any_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void any_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void some_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void negative()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_strings()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void concat()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void substring()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void lower()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void upper()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim_specification()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void length()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void locate()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abs()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sqrt()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void mod()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void size()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_datetime()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abstract_schema_name()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void tok()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void path_component()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void numeric_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void integer_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void decimal_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void input_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void named_input_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void positional_input_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void escape_character()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim_character()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void EQ()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void NE()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void GT()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void GE()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void LT()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void LE()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Node parseQuery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void update_statement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Node parseQuery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Node parseQuery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void outer_fetch_join()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void fetch_join()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void inner_fetch_join()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void fetch_join()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void path()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void path()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void update_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_statement()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void update_item()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void set_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void select_expressions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expressions()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expressions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expressions()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void classname()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameters()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void distinct()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void count()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void avg()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void max()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void min()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void sum()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void where_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void having_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void exists_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void any_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void some_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void where_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void having_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void empty_collection_comparison_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void exists_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void any_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_or_any_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void some_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_or_any_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void all_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_or_any_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void substring()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void locate()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abs()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sqrt()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void mod()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void negative()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void integer_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void decimal_literal()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void concat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_strings()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void substring()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_strings()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void trim()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_strings()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void lower()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_strings()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void upper()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_strings()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void trim_specification()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void length()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void locate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void abs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void sqrt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void mod()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_datetime()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_item()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void abstract_schema_name()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void tok()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_entity_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void classname()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void path_component()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abstract_schema_name()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void integer_literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void numeric_literal()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void decimal_literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void numeric_literal()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void literal_or_param()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void string_literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void literal_or_param()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void named_input_parameter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void input_parameter()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void positional_input_parameter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void input_parameter()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void escape_character()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void trim_character()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void EQ()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void NE()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void GT()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void GE()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void LT()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void LE()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.DefaultEventManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:void addListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:void addListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject)",
            "org.apache.cayenne.event.DefaultEventManager:void addNonBlockingListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject)",
            "org.apache.cayenne.event.DefaultEventManager:void addListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject,java.lang.Object)",
            "org.apache.cayenne.event.DefaultEventManager:void addNonBlockingListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int)"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:boolean setupRemoteChannelListener()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection,boolean,org.apache.cayenne.event.EventManager,boolean)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.Token jj_consume_token(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.Expression expression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void orCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void andCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void notCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarCommaList()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConditionExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConstExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarNumericExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void multiplySubtractExp()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericTerm()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void namedParameter()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void pathExpression()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void orCondition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.Expression expression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void andCondition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void orCondition()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void notCondition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void andCondition()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void notCondition()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void scalarCommaList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConditionExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarExpression()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void scalarExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConstExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarCommaList()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void scalarNumericExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConditionExpression()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void multiplySubtractExp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarNumericExpression()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void numericTerm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void multiplySubtractExp()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericTerm()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void namedParameter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConstExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void pathExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()"
        ]
    },
    "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodeIdChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void dbAttributeAdded(org.apache.cayenne.map.event.AttributeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity:void addAttribute(org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void dbAttributeChanged(org.apache.cayenne.map.event.AttributeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbAttribute:void setPrimaryKey(boolean)",
            "org.apache.cayenne.map.DbAttribute:void setGenerated(boolean)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void dbAttributeRemoved(org.apache.cayenne.map.event.AttributeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void clearAttributes()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartDbAttributePair(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$1100(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allSubEntities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void <init>(org.apache.cayenne.graph.GraphManager,org.apache.cayenne.access.PrefetchProcessorNode)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void addDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void addMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.map.EntityResult:void addObjectField(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityResult:void addObjectField(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)"
        ]
    },
    "org.apache.cayenne.map.EntityResult:void addDbField(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartEntitylistener(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$2400(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void setDbRelationshipPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processStartDbRelationshipRef(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship createReverseRelationship()"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void refreshFromDeferredPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:java.util.List getDbRelationships()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:void removeDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isReadOnly()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToMany()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartProcedureParameter(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$1400(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processEndQueryOrdering()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$5000(org.apache.cayenne.map.MapLoader)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processEndQueryPrefetch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$5100(org.apache.cayenne.map.MapLoader)"
        ]
    },
    "org.apache.cayenne.query.InsertBatchQuery:void add(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedInsert(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode addPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:void prepareFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String,int)"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:void addOrdering(java.lang.String,org.apache.cayenne.query.SortOrder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrdering(java.lang.String,org.apache.cayenne.query.SortOrder)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrdering(org.apache.cayenne.query.Ordering)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:void addOrdering(java.lang.String,org.apache.cayenne.query.SortOrder)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrdering(org.apache.cayenne.query.Ordering)"
        ]
    },
    "org.apache.cayenne.query.UpdateBatchQuery:void add(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addDefaultListener(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addDefaultListener(org.apache.cayenne.map.LifecycleEvent,java.lang.Object,java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addListener(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(org.apache.cayenne.map.LifecycleEvent,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addListener(java.lang.Class,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(org.apache.cayenne.map.LifecycleEvent,java.lang.Class,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void addListener(java.lang.Class,java.lang.Object,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:void appendDeclaredRootDbEntity(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyUtils:org.apache.cayenne.reflect.Accessor createAccessor(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.EntityMergeSupport:void <init>(org.apache.cayenne.map.DataMap,org.apache.cayenne.map.naming.NamingStrategy,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.EntityMergeSupport:void <init>(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextBatchCount(org.apache.cayenne.query.Query,int[])",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextBatchCount(org.apache.cayenne.query.Query,int[])"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:void <init>(org.apache.cayenne.QueryResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void nextCount(org.apache.cayenne.query.Query,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextCount(org.apache.cayenne.query.Query,int)",
            "org.apache.cayenne.dba.mysql.MySQLProcedureAction:boolean processUpdate(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.Util$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.ResourceLocator:void addFilesystemPath(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DbGenerator:boolean safeExecute(java.sql.Connection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void processChange(org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextGraphManager:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL$EJBQLDefaultParser:org.apache.cayenne.ejbql.EJBQLCompiledExpression compile(java.lang.String,org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.EJBQLQuery:org.apache.cayenne.ejbql.EJBQLCompiledExpression getExpression(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:void set(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:void convertSingleObjects(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void updateResponse(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager$PoolMaintenanceThread:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:void startMaintenanceThread()",
            "org.apache.cayenne.CayenneContextMergeHandler:void runWithEventsDisabled(java.lang.Runnable)"
        ]
    },
    "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(org.apache.cayenne.event.DefaultEventManager$Dispatch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:void dispatchEvent(org.apache.cayenne.event.DefaultEventManager$Dispatch)"
        ]
    },
    "org.apache.cayenne.query.PrefetchTreeNode:void removePath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BaseQueryMetadata:void removePrefetch(java.lang.String)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void removeOrdering(org.apache.cayenne.query.Ordering)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void removeOrdering(org.apache.cayenne.query.Ordering)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.Util$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void resolveJoin(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.StringBuilder findOrCreateMarkedBuffer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void pushMarker(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.access.jdbc.EJBQLJoinAppender getJoinAppender(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:void <init>(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindParameter(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIntegerLiteral(org.apache.cayenne.ejbql.parser.EJBQLIntegerLiteral)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitDecimalLiteral(org.apache.cayenne.ejbql.parser.EJBQLDecimalLiteral)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitBooleanLiteral(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$ObjectMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindPositionalParameter(int)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String bindNamedParameter(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentificationVariable:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()",
            "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedEnumType:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.EnumTypeFactory:org.apache.cayenne.access.types.ExtendedType getType(java.lang.Class)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:void initDefaultTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2Adapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.ingres.IngresAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseAdapter:void configureExtendedTypes(org.apache.cayenne.access.types.ExtendedTypeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.access.util.DefaultOperationObserver:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.access.DataNodeQueryAction$1:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.access.QueryResult:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextQueryException(org.apache.cayenne.query.Query,java.lang.Exception)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore$1:void nodeIdChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.access.jdbc.ColumnDescriptor access$000(org.apache.cayenne.access.PrefetchProcessorJointNode,java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)"
        ]
    },
    "org.apache.cayenne.access.ExternalTransaction:boolean addConnection(java.lang.String,java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:void initRefreshPolicy(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BindDirective:void render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node,java.lang.Object,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(org.apache.cayenne.map.DbAttribute,java.lang.String)",
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(java.lang.String,java.sql.ResultSetMetaData,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:java.lang.String getDefaultJavaClass(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void appendUpdatedParameter(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)"
        ]
    },
    "org.apache.cayenne.access.types.BigIntegerType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.CalendarType:java.lang.Object convertToJdbcObject(java.util.Calendar,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.CalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.EnumType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.EnumType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.EntityRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.FullRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readSingleId(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readIdMap(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.ScalarRowReader:java.lang.Object readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.EnumType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.EntityRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.FullRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readSingleId(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readIdMap(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.ScalarRowReader:java.lang.Object readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedEnumType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedEnumType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.UtilDateType:java.lang.Object convertToJdbcObject(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.UtilDateType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyAdapter:boolean typeSupportsLength(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.derby.DerbyAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresAdapter:boolean typeSupportsLength(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.h2.H2Adapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.TypesMapping$TypeInfo:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.dba.TypesMapping:java.lang.String pickDataType(int,org.apache.cayenne.dba.TypesMapping$TypeInfo[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DbAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartDbAttribute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$200(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ProcedureParameter:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.merge.SetColumnTypeToDb:java.lang.String getTokenValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:java.lang.String toString()",
            "org.apache.cayenne.merge.DummyReverseToken:java.lang.String getTokenValue()"
        ]
    },
    "org.apache.cayenne.merge.SetColumnTypeToModel:java.lang.String getTokenValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToModelToken:java.lang.String toString()",
            "org.apache.cayenne.merge.DummyReverseToken:java.lang.String getTokenValue()"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBindingBuilder:org.apache.cayenne.di.BindingBuilder 'to'(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientModule:void configure(org.apache.cayenne.di.Binder)",
            "org.apache.cayenne.configuration.rop.server.ROPServerModule:void configure(org.apache.cayenne.di.Binder)",
            "org.apache.cayenne.configuration.server.ServerModule:void configure(org.apache.cayenne.di.Binder)",
            "org.apache.cayenne.configuration.web.WebModule:void configure(org.apache.cayenne.di.Binder)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBindingBuilder:org.apache.cayenne.di.BindingBuilder toInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void <init>(org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBindingBuilder:org.apache.cayenne.di.BindingBuilder toProvider(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientModule:void configure(org.apache.cayenne.di.Binder)",
            "org.apache.cayenne.configuration.server.ServerModule:void configure(org.apache.cayenne.di.Binder)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBindingBuilder:org.apache.cayenne.di.BindingBuilder toProviderInstance(org.apache.cayenne.di.Provider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientLocalRuntime$1:void configure(org.apache.cayenne.di.Binder)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.spi.ListProvider getListProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultListBuilder:void <init>(org.apache.cayenne.di.Key,org.apache.cayenne.di.spi.DefaultInjector)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder add(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder add(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.spi.MapProvider getMapProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultMapBuilder:void <init>(org.apache.cayenne.di.Key,org.apache.cayenne.di.spi.DefaultInjector)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder put(java.lang.String,java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder put(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder put(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object,org.apache.cayenne.event.EventSubject,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object,org.apache.cayenne.event.EventSubject)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:void dispatchEvent(org.apache.cayenne.event.DefaultEventManager$Dispatch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager:void postEvent(java.util.EventObject,org.apache.cayenne.event.EventSubject)",
            "org.apache.cayenne.event.DefaultEventManager:void access$000(org.apache.cayenne.event.DefaultEventManager,org.apache.cayenne.event.DefaultEventManager$Dispatch)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:org.apache.cayenne.event.EventSubject createSubject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void <init>(java.lang.String,java.util.Map,org.apache.cayenne.event.EventManager)",
            "org.apache.cayenne.access.DataRowStore:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.apache.cayenne.DataChannel:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.remote.RemoteSession:void <clinit>()",
            "org.apache.cayenne.util.EventUtil:void <clinit>()",
            "org.apache.cayenne.BaseContext:void fireDataChannelCommitted(java.lang.Object,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.BaseContext:void fireDataChannelRolledback(java.lang.Object,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.BaseContext:void fireDataChannelChanged(java.lang.Object,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.DataChannel:void <clinit>()"
        ]
    },
    "org.apache.cayenne.DataRow:org.apache.cayenne.ObjectId createTargetObjectId(java.lang.String,org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$2300(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$22:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.util.SortedMap getAttributeMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartAttributeOverride(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$500(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:void setDbAttributePath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute makeObjAttribute(org.apache.cayenne.map.EmbeddableAttribute,java.lang.String)",
            "org.apache.cayenne.map.MapLoader:void processStartObjAttribute(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.ObjAttribute:void <init>(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.ObjAttribute getClientAttribute()",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Attribute getAttribute(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.SyntheticPKObjAttribute:org.apache.cayenne.map.ObjAttribute getClientAttribute()",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processEndQuerySQL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$4700(org.apache.cayenne.map.MapLoader)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartQueryProperty(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$2200(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.query.QueryChain:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:void aliasPathSplits(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createProxyDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.ConverterFactory:org.apache.cayenne.reflect.Converter getConverter(java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory:void <clinit>()",
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createAttributeProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:void createAttributeProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:void createEmbeddedAttributeProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EmbeddedAttribute,org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.JavaGroupsBridgeFactory:org.apache.cayenne.event.EventBridge createJavaGroupsBridge(java.util.Collection,java.lang.String,java.util.Map)",
            "org.apache.cayenne.exp.parser.ASTObjPath:void injectValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void setIndexValue(java.lang.Object,int)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object createObject(org.w3c.dom.Element,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createDbRelationshipName(org.apache.cayenne.map.naming.ExportedKey,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)"
        ]
    },
    "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjEntityName(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjAttributeName(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjRelationshipName(org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.merge.CreateTableToModel:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.NameConverter:java.lang.String javaToUnderscored(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.NameConverter:java.lang.String underscoredToJava(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createDbRelationshipName(org.apache.cayenne.map.naming.ExportedKey,boolean)",
            "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjEntityName(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjAttributeName(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.naming.BasicNamingStrategy:java.lang.String createObjRelationshipName(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.merge.CreateTableToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectAccessor:void setValue(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.FieldEmbeddableDescriptor:java.lang.Object createObject(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectBaseProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataRowUtils$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void injectValueHolder(java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void graphCommitStarted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void graphFlushed()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataNode:void removeDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.cache.NestedQueryCache:void remove(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.cache.NestedQueryCache:void remove(java.lang.String)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:java.lang.Object unregisterNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deleteNew(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void graphCommitAborted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)"
        ]
    },
    "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void <init>(org.apache.cayenne.access.ResultIterator,org.apache.cayenne.map.DbEntity,boolean)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:java.lang.Object nextRow()",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void skipRow()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:boolean runDirectDFS()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)"
        ]
    },
    "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void rollbackChangesLocally()",
            "org.apache.cayenne.access.DataContext:void rollbackChanges()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.StrongConnection:boolean runDirectDFS()"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTDbPath:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTObjPath:java.lang.Object evaluateNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity:org.apache.cayenne.exp.Expression translateToRelatedEntity(org.apache.cayenne.exp.Expression,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.ObjAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjAttribute:boolean isPrimaryKey()",
            "org.apache.cayenne.map.ObjAttribute:boolean isMandatory()",
            "org.apache.cayenne.map.ObjAttribute:int getMaxLength()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.ObjAttribute getClientAttribute()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.SyntheticPKObjAttribute:org.apache.cayenne.map.ObjAttribute getClientAttribute()",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)"
        ]
    },
    "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartPostAdd(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processStartPrePersist(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.MapLoader:void access$2500(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartPrePersist(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$2600(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartPostPersist(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$2700(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartPreUpdate(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$2800(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartPostUpdate(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$2900(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartPreRemove(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$3000(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartPostRemove(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$3100(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartPostLoad(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$3200(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.merge.MergerFactory:org.apache.cayenne.merge.MergerToken createSetPrimaryKeyToModel(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:org.apache.cayenne.merge.MergerToken createReverse(org.apache.cayenne.merge.MergerFactory)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void nodeIdChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void nodeCreated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodeCreated(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodeRemoved(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deletePersistent(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$4:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodePropertyChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handleSimplePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handleArcPropertyChange(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ArcProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.ArcDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handleArcPropertyChange(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ArcProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator$ColumnTracker:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.event.EventSubject:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.RemoteSession:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapterFactory getDefaultFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapterFactory createDefaultFactory()"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapterFactory createDefaultFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter:void <init>(org.apache.cayenne.dba.DbAdapterFactory,javax.sql.DataSource)"
        ]
    },
    "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allRelationships()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:void setDataMaps(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void <init>(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void clearDataMaps()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.DeleteBatchQuery:void <init>(org.apache.cayenne.map.DbEntity,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrderings(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map,boolean)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrderings(java.util.List)"
        ]
    },
    "org.apache.cayenne.conn.PooledConnectionImpl:void returnConnectionToThePool()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.ConnectionWrapper:void close()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void ReInit(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void ReInit(java.io.InputStream)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void ReInit(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void ReInit(org.apache.cayenne.ejbql.parser.EJBQLTokenManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void ReInit(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void ReInit(java.io.InputStream)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void ReInit(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void ReInit(org.apache.cayenne.exp.parser.ExpressionParserTokenManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void clear()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void clear(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.JavaGroupsBridge:void receive(org.jgroups.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.JMSBridge:void onMessage(javax.jms.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.XMPPBridge$XMPPListener:void processPacket(org.jivesoftware.smack.packet.Packet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void prependReversedPath(java.util.LinkedList,org.apache.cayenne.map.DbRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:boolean isToMasterPK()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.Relationship getReverseRelationship()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTNotIn:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.CayenneContextChildDiffLoader:org.apache.cayenne.Persistent access$000(org.apache.cayenne.CayenneContextChildDiffLoader,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.trans.SelectTranslator$ColumnTracker:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectId:boolean valueEquals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTableId:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.trans.JoinTreeNode:boolean equals(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.conn.DataSourceInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.conn.DriverDataSource:void setDriverClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.DriverDataSource:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.Expression:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionParameter:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.graph.NodePropertyChangeOperation:boolean isNoop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.GraphDiffCompressor:org.apache.cayenne.graph.GraphDiff compress(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.map.event.MapEvent:boolean isNameChange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DataMap:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship$TestJoin:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:void setDeferredDbRelationshipPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processStartObjRelationship(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.query.ObjectIdQuery:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.query.Ordering:void setSortSpecString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.Ordering:void <init>(java.lang.String,org.apache.cayenne.query.SortOrder)"
        ]
    },
    "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSize:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLMemberOf:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLEquals:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLEquals:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLNotEquals:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLNotEquals:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processLastPathComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitDbPath(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathAnaliserTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendInnerJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitInnerFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitInnerJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendOuterJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitOuterFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitOuterJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:void visitAggregateColumn(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn,org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitCount(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitAverage(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitMax(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitMin(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitSum(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLUpdateItem:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLUpdateItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.JDBCResultIterator:void <init>(java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:boolean next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.ListWithPrefetches:int indexOf(java.lang.Object)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int indexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:int lastIndexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:int lastIndexOf(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList$IncrementalListIterator:java.lang.Object previous()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:void processColumn(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Node parseQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL$EJBQLDefaultParser:org.apache.cayenne.ejbql.EJBQLExpression parse(java.lang.String)",
            "org.apache.cayenne.ejbql.parser.EJBQL$EJBQLDefaultParser:org.apache.cayenne.ejbql.EJBQLCompiledExpression compile(java.lang.String,org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.Expression expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression fromString(java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(org.apache.cayenne.Persistent[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.List)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:java.util.Map srcFkSnapshotWithTargetSnapshot(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:java.util.Map srcPkSnapshotWithTargetSnapshot(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.FlattenedArcKey:void <init>(org.apache.cayenne.ObjectId,org.apache.cayenne.ObjectId,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseRelationshipName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void <init>(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Fault)",
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:void <init>(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Fault)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getClientRelationship()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.Relationship getReverseRelationship()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.ObjRelationship,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.ObjRelationship,boolean)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isSourceIndependentFromTargetChange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.ObjectStore$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isReadOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getClientRelationship()",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getValuesForLOBSelectQualifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListIteratorHelper:java.lang.Object previous()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:java.util.List firstList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:java.util.List objectsFromDataRowsFromParentContext(org.apache.cayenne.reflect.ClassDescriptor,java.util.List)",
            "org.apache.cayenne.access.DataContext:java.util.List performQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction$1:java.lang.Object createObject()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction$1:java.lang.Object createObject()",
            "org.apache.cayenne.CayenneContext:java.util.List performQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction$1:java.lang.Object createObject()"
        ]
    },
    "org.apache.cayenne.util.GenericResponse:int[] firstUpdateCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:void shift(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog$SubList:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode,java.util.List,java.lang.String,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void markCurrentPosition(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void popMarker()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.EntityResultSegment nextEntityResult()",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.lang.String nextColumnAlias()",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.access.jdbc.RowDescriptor describeResultSet(java.sql.ResultSet,int)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.util.List getParameterValues(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexQualifierAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForLOBSelectQualifier()",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.util.List getDbAttributesForUpdatedLOBColumns()",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.util.List getValuesForLOBUpdateParameters(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List toClientObjects(java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.DataDomain getParentDataDomain()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataDomain$DataDomainFilterChain:org.apache.cayenne.DataChannelFilter nextFilter()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainFlushAction:void runQueries()",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowStore:void snapshotsUpdatedForObjects(java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int indexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:int lastIndexOfObject(java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper:void updateWithResolvedObjectInRange(java.lang.Object,int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.access.ListWithPrefetches:java.lang.Object get(int)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getCachedSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.DataRow getSnapshot(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void indexParents()",
            "org.apache.cayenne.access.ToOneFault:java.lang.Object doResolveFault(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendSelectColumns(java.lang.StringBuilder,java.util.List)",
            "org.apache.cayenne.dba.sqlserver.SQLServerTrimmingQualifierTranslator:org.apache.cayenne.exp.Expression peek(int)",
            "org.apache.cayenne.dba.DbAdapterFactoryChain:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.JdbcPkGenerator$PkRetrieveProcessor:void nextRows(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.lang.String pkDeleteString(java.util.List)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node rootNode()",
            "org.apache.cayenne.ejbql.parser.JJTEJBQLState:org.apache.cayenne.ejbql.parser.Node peekNode()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.ParseException generateParseException()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node rootNode()",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:org.apache.cayenne.exp.parser.Node peekNode()",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObject(java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String convertToPath(java.util.List)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:java.util.Map srcSnapshotWithTargetSnapshot(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:void addDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToDependentEntity()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToPK()",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.ObjRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.Procedure:void removeCallParameter(java.lang.String)",
            "org.apache.cayenne.map.Procedure:org.apache.cayenne.map.ProcedureParameter getResultParam()",
            "org.apache.cayenne.query.DeleteBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.DeleteBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.InsertBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.InsertBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.query.UpdateBatchQuery:java.lang.Object getValue(int)",
            "org.apache.cayenne.query.UpdateBatchQuery:java.util.Map getCurrentQualifier()",
            "org.apache.cayenne.query.UpdateBatchQuery:org.apache.cayenne.ObjectId getObjectId()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void forceResolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireAttributeAdded(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.GenericResponse:java.util.List currentList()",
            "org.apache.cayenne.util.GenericResponse:int[] currentUpdateCount()",
            "org.apache.cayenne.util.GenericResponse:boolean isList()",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object get(int)",
            "org.apache.cayenne.util.PersistentObjectHolder:void resolve()",
            "org.apache.cayenne.util.PersistentObjectList:java.lang.Object get(int)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.ObjectContextChangeLog$SubList:org.apache.cayenne.graph.GraphDiff get(int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:void indexLOBAttributes()"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.EntityRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.FullRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readSingleId(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readIdMap(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.ScalarRowReader:java.lang.Object readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.ResultSet,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.ResultSet,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initRefreshPolicy(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void <init>(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTScalar:void <init>(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConditionExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConstExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void namedParameter()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void pathExpression()"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTNegate:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.IgnoreCaseNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.SimpleNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.Expression:java.lang.String toEJBQL(java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTDbPath:void <init>(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTObjPath:void <init>(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:void setOperand(int,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ExpressionParser:void pathExpression()"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PropertyUtils:void setSimpleProperty(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTBetween:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTGreater:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTGreaterOrEqual:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLess:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLessOrEqual:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotBetween:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.query.Ordering:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTLike:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLikeIgnoreCase:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotLike:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotLikeIgnoreCase:java.lang.Object evaluateNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.Ordering:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLEncoder:void encodeProperty(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.ClientLocalRuntime:void <init>(org.apache.cayenne.di.Injector,java.util.Map,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.rop.client.ClientRuntime:void <init>(java.util.Map,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.oracle.Oracle8Adapter:java.net.URL findResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.JdbcAdapter:void <init>()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartDbRelationshipRef(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$1300(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void <init>(org.apache.cayenne.graph.GraphManager,org.apache.cayenne.access.PrefetchProcessorNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship createReverseRelationship()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()"
        ]
    },
    "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.Query getReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processEndQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$4600(org.apache.cayenne.map.MapLoader)"
        ]
    },
    "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:boolean isEmpty(org.apache.cayenne.map.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.DataChannelSyncCallbackAction$FlushCallbackAction:boolean hasListeners()",
            "org.apache.cayenne.DataChannelSyncCallbackAction$RollbackCallbackAction:boolean hasListeners()"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void performCallbacks(org.apache.cayenne.map.LifecycleEvent,org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deletePersistent(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean hasSubclasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean hasSubclasses()"
        ]
    },
    "org.apache.cayenne.util.ResourceLocator:java.io.InputStream findResourceStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.util.ResourceLocator:java.net.URL getResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:org.apache.cayenne.map.DataMap loadDataMap(java.lang.String)",
            "org.apache.cayenne.util.ResourceLocator:java.util.Collection getResources(java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.ResourceLocator:java.net.URL findDirectoryResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateMandatory(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateMandatory(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EntityRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EntityRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.FullRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.FullRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readIdMap(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.InheritanceAwareEntityRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EntityRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.FullRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLIdentificationVariable:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitSelect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitDelete(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitUpdate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$CountColumnVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIsEmpty(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitDbPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSubselect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:org.apache.cayenne.ejbql.EJBQLExpression ejbqlQualifierForEntityAndSubclasses(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLOrderByTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitGroupBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitHaving(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitOrderBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitSelectExpressions(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateField(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.dba.sybase.SybaseEJBQLConditionTranslator:boolean visitSubselect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitSelectExpression(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOrderBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:java.lang.String getSyntheticId()",
            "org.apache.cayenne.ejbql.parser.SimpleNode:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNamedInputParameter(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLNamedInputParameter:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitPositionalInputParameter(org.apache.cayenne.ejbql.parser.EJBQLPositionalInputParameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPositionalInputParameter:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleSQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)"
        ]
    },
    "org.apache.cayenne.access.trans.JoinStack:int size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.util.IteratedSelectObserver:org.apache.cayenne.access.ResultIterator getResultIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.ResultIterator internalPerformIteratedQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void removeMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.ExternalTransaction:void commit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void close()"
        ]
    },
    "org.apache.cayenne.access.ExternalTransaction:void rollback()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.access.ResultIterator performIteratedQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void close()"
        ]
    },
    "org.apache.cayenne.access.DataContext:java.util.Collection newObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:java.util.Collection deletedObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:java.util.Collection modifiedObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean isIncomingEmpty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.cache.NestedQueryCache:void removeGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.cache.NestedQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$DataMapFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void retire(java.sql.SQLException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.ConnectionWrapper:void reconnect(java.sql.SQLException)",
            "org.apache.cayenne.conn.ConnectionWrapper:void clearWarnings()",
            "org.apache.cayenne.conn.ConnectionWrapper:void commit()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean getAutoCommit()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.lang.String getCatalog()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.DatabaseMetaData getMetaData()",
            "org.apache.cayenne.conn.ConnectionWrapper:int getTransactionIsolation()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.SQLWarning getWarnings()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean isClosed()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean isReadOnly()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.lang.String nativeSQL(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:void rollback()",
            "org.apache.cayenne.conn.ConnectionWrapper:void setAutoCommit(boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setCatalog(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setReadOnly(boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setTransactionIsolation(int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.util.Map getTypeMap()",
            "org.apache.cayenne.conn.ConnectionWrapper:void setTypeMap(java.util.Map)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8ActionBuilder:org.apache.cayenne.query.SQLAction batchAction(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BatchQuery:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleActionBuilder:org.apache.cayenne.query.SQLAction batchAction(org.apache.cayenne.query.BatchQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BatchQuery:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.hsqldb.HSQLDBNoSchemaAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultScopeProvider:void afterScopeEnd()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.di.spi.DefaultScope:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void shutdown()"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void stopListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void shutdown()",
            "org.apache.cayenne.access.DataRowStore:void setEventManager(org.apache.cayenne.event.EventManager)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTEqual:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotEqual:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateRenderingUtils:java.lang.Object cayenneExp(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:org.apache.cayenne.exp.Expression trimmedInExpression(org.apache.cayenne.exp.Expression,int)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.parser.ASTNotIn:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluateChild(int,java.lang.Object)",
            "org.apache.cayenne.exp.Expression:boolean match(java.lang.Object)",
            "org.apache.cayenne.query.Ordering:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNegate:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTNegate:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.IgnoreCaseNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.SimpleNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.Expression:java.lang.String toEJBQL(java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.parser.IgnoreCaseNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.parser.SimpleNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.Expression:java.lang.String toEJBQL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:org.apache.cayenne.ejbql.EJBQLExpression ejbqlQualifierForEntityAndSubclasses(org.apache.cayenne.exp.Expression,java.lang.String)"
        ]
    },
    "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQuery(java.lang.String,java.util.List,java.util.List,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QueryAssembler:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.QueryLogger:void logQuery(java.lang.String,java.util.List,java.util.List,long)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQuery(java.lang.String,java.util.List)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:void logQuery(java.lang.String,java.util.List,java.util.List,long)"
        ]
    },
    "org.apache.cayenne.map.CallbackMap:void encodeCallbacksAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityListener:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:org.apache.cayenne.exp.Expression extractQualifier()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.lang.Object convertSingleObject(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.util.ObjectDetachOperation,java.lang.Object)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.String,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent newObject(java.lang.String)",
            "org.apache.cayenne.access.DataContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectDiff:void <init>(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.access.ObjectResolver$InheritanceStrategy:org.apache.cayenne.reflect.ClassDescriptor descriptorForRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectDiff registerDiff(java.lang.Object,org.apache.cayenne.graph.NodeDiff)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processUpdatedSnapshot(java.lang.Object,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ejbql.parser.Compiler$FromItemVisitor:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.BaseQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,java.lang.String)",
            "org.apache.cayenne.query.ObjectIdQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.RelationshipQuery:void updateMetadata(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:java.lang.Object convertObject(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.util.DeepMergeOperation,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handlePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContext:java.lang.Object newObject(java.lang.Class)",
            "org.apache.cayenne.CayenneContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent createFault(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.PersistentObject:java.lang.Object getMapKey(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void encodeAsXML(java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.QueryLoader:java.lang.Object getRoot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ProcedureQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()"
        ]
    },
    "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.DbRelationship:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.DataRow rowFromFlatRow(org.apache.cayenne.DataRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.HierarchicalObjectResolver$JointProcessor:boolean startJointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.LifecycleCallbackRegistry getCallbackRegistry()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void deletePersistent(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.query.BaseQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.AbstractQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.map.DataMap getMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.util.NamedObjectFactory$DataMapFactory:boolean isNameInUse(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.ObjRelationship:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isToMany()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToParents()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connect(org.apache.cayenne.Persistent,java.util.List)",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isSourceIndependentFromTargetChange()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getClientRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getCollectionType()",
            "org.apache.cayenne.map.Relationship:java.lang.String toString()",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)",
            "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)"
        ]
    },
    "org.apache.cayenne.merge.AddColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.merge.AddRelationshipToModel:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.merge.DropRelationshipToModel:void execute(org.apache.cayenne.merge.MergerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.BaseQueryMetadata:void setPrefetchTree(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.SelectQuery:void setPrefetchTree(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:void addPrefetches(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SQLTemplate:void addPrefetches(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void removePath(java.lang.String)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void performCallbacks(org.apache.cayenne.map.LifecycleEvent,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.DataChannelSyncCallbackAction:void apply(org.apache.cayenne.map.LifecycleEvent,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void injectValueHolders(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent newObject(java.lang.String)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String createName(java.lang.Class,java.lang.Object,java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object makeObject(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object setValueDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorNode:void connect(org.apache.cayenne.Persistent,java.util.List)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValueDirectly(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.lang.Object setValue(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.Embeddable:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.Procedure:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.validation.ValidationException:void <init>(org.apache.cayenne.validation.ValidationResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)"
        ]
    },
    "org.apache.cayenne.xml.XMLEncoder:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.conn.PoolManager:void dispose()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void checkDescriptorInitialized()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getDescriptor()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.lang.Object createObject()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.Property getDeclaredProperty(java.lang.String)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.map.ObjEntity getEntity()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getRootDbEntities()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.map.EntityInheritanceTree getEntityInheritanceTree()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean hasSubclasses()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.lang.Class getObjectClass()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getIdProperties()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getDiscriminatorColumns()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.exp.Expression getEntityQualifier()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getMapArcProperties()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.Property getProperty(java.lang.String)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getSubclassDescriptor(java.lang.Class)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getSuperclassDescriptor()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:void shallowMerge(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLProcedureAction$MySQLProcedureTranslator:java.lang.String createSqlString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresProcedureAction$PostgresProcedureTranslator:java.lang.String createSqlString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()"
        ]
    },
    "org.apache.cayenne.access.DataDomain$DataDomainQueryFilterChain:void <init>(org.apache.cayenne.access.DataDomain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataDomain$DataDomainSyncFilterChain:void <init>(org.apache.cayenne.access.DataDomain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:int pageIndex(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:java.lang.Object get(int)"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:java.util.ListIterator listIterator(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.ListIterator listIterator(int)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator(int)"
        ]
    },
    "org.apache.cayenne.access.HierarchicalObjectResolver$PostProcessor:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.conf.WebApplicationContextFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.conn.PoolManager:boolean canGrowPool()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:javax.sql.PooledConnection uncheckPooledConnection(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.QueryLogger:void logQueryParameters(java.lang.String,java.util.List,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.BatchQuery:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.BatchQuery:boolean next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:boolean next()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.ListWithPrefetches:int indexOf(java.lang.Object)",
            "org.apache.cayenne.conn.PoolManager:void connectionClosed(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.conn.PoolManager:void connectionErrorOccurred(javax.sql.ConnectionEvent)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.util.GenericResponse:void replaceResult(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int indexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:int lastIndexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ListWithPrefetches:int lastIndexOf(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:int pageIndex(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object get(int)"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.util.ListIterator listIterator(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.ListWithPrefetches:java.util.ListIterator listIterator(int)",
            "org.apache.cayenne.graph.CompoundDiff:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.reflect.ClassDescriptorMap:org.apache.cayenne.reflect.ClassDescriptor createDescriptor(java.lang.String)",
            "org.apache.cayenne.util.PersistentObjectList:java.util.ListIterator listIterator(int)"
        ]
    },
    "org.apache.cayenne.ObjectContextChangeLog:java.util.List immutableList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffs()",
            "org.apache.cayenne.ObjectContextChangeLog:org.apache.cayenne.graph.GraphDiff getDiffsAfterMarker(java.lang.String)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:org.apache.cayenne.graph.GraphDiff getDiffs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:void rollbackChanges()",
            "org.apache.cayenne.CayenneContext:void rollbackChangesLocally()"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:org.apache.cayenne.graph.GraphDiff getDiffsSinceLastFlush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:boolean hasChanges()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContext:void rollbackChanges()",
            "org.apache.cayenne.CayenneContext:void rollbackChangesLocally()",
            "org.apache.cayenne.CayenneContext:boolean hasChanges()"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:boolean hasChangesSinceLastFlush()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTList:void <init>(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:java.lang.Object wrapPathOperand(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTList:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:org.apache.cayenne.exp.Expression trimmedInExpression(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object[],int)",
            "org.apache.cayenne.exp.ExpressionFactory:java.lang.Object wrapPathOperand(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTList:void <init>(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTList:void setOperand(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression joinExp(int,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTList:void jjtClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,int)",
            "org.apache.cayenne.exp.parser.JJTExpressionParserState:void closeNodeScope(org.apache.cayenne.exp.parser.Node,boolean)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createDataDomain(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.ObjectStoreGraphDiff:void <init>(org.apache.cayenne.access.ObjectStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectStoreGraphDiff getChanges()"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.cache.NestedQueryCache:void clear()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.util.ObjectContextGraphAction:boolean markAsDirty(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextGraphAction:void handleArcPropertyChange(org.apache.cayenne.Persistent,org.apache.cayenne.reflect.ArcProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handleSimplePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.Util:boolean markAsDirty(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitLike(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLLike:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLLike:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void reset(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:boolean bidiEquals(org.apache.cayenne.access.FlattenedArcKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.FlattenedArcKey:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:boolean uniEquals(org.apache.cayenne.access.FlattenedArcKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.FlattenedArcKey:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.configuration.web.WebConfiguration:java.util.Collection createModules(org.apache.cayenne.di.Module[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)"
        ]
    },
    "org.apache.cayenne.conn.DriverDataSource:java.sql.Driver loadDriver(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.DriverDataSource:void setDriverClassName(java.lang.String)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JavaCharStream:void ExpandBuff(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.JavaCharStream:void AdjustBuffSize()"
        ]
    },
    "org.apache.cayenne.exp.parser.JavaCharStream:void ExpandBuff(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.JavaCharStream:void AdjustBuffSize()"
        ]
    },
    "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.SQLTemplateRenderingUtils:java.lang.Object cayenneExp(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void main(java.lang.String[])",
            "org.apache.cayenne.map.MapLoader:void processEndQualifier()",
            "org.apache.cayenne.map.QueryLoader:void setQualifier(java.lang.String)",
            "org.apache.cayenne.query.Ordering:org.apache.cayenne.exp.Expression getSortSpec()"
        ]
    },
    "org.apache.cayenne.remote.hessian.HessianConnection:java.lang.String buildExceptionMessage(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.hessian.HessianConnection:java.lang.Object doSendMessage(org.apache.cayenne.remote.ClientMessage)",
            "org.apache.cayenne.remote.hessian.HessianConnection:void connect()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,org.apache.cayenne.ashwood.graph.MapDigraph$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:java.lang.Object next()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object,org.apache.cayenne.ashwood.graph.MapDigraph$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:void <init>(org.apache.cayenne.ashwood.graph.MapDigraph,java.lang.Object,org.apache.cayenne.ashwood.graph.MapDigraph$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.MapDigraph:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.ClientModule:void configure(org.apache.cayenne.di.Binder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void <init>(org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.configuration.rop.server.ROPServerModule:void configure(org.apache.cayenne.di.Binder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void <init>(org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchExp(org.apache.cayenne.Persistent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(org.apache.cayenne.Persistent[])"
        ]
    },
    "org.apache.cayenne.query.ObjectIdQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.Query getReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.Query getReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:java.lang.StringBuffer toStringBuffer(java.lang.StringBuffer,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneDataObject:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cayenne.ObjectId:org.apache.cayenne.ObjectId createReplacementId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void appendColumn(java.lang.String,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.reflect.ClassDescriptor getEntityDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType getRegisteredType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.ByteOrCharArrayFactory:org.apache.cayenne.access.types.ExtendedType getType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.types.SerializableTypeFactory:org.apache.cayenne.access.types.ExtendedType getType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:org.apache.cayenne.access.QueryEngine engineForDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.BatchQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataDomainQueryAction:org.apache.cayenne.access.QueryEngine engineForDataMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.BatchQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor$3:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptOIDQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.ObjectContextQueryAction:org.apache.cayenne.QueryResponse execute()"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void injectValueHolder(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:boolean isOutgoingEmpty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter$DbEntityComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter$ObjEntityComparator:int compare(org.apache.cayenne.map.ObjEntity,org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.access.DefaultObjectMapRetainStrategy:java.util.Map createObjectMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.DefaultObjectStoreFactory:org.apache.cayenne.access.ObjectStore createObjectStore(org.apache.cayenne.access.DataRowStore)"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.HessianConnectionProvider:org.apache.cayenne.remote.ClientConnection get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.HessianConnectionProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:boolean shouldConfigureDataSourceFromProperties(org.apache.cayenne.configuration.DataNodeDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:org.apache.cayenne.configuration.server.DataSourceFactory getDataSourceFactory(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.configuration.server.PropertyDataSourceFactory:java.lang.String getProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.PropertyDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)",
            "org.apache.cayenne.configuration.server.PropertyDataSourceFactory:int getIntProperty(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cayenne.configuration.DefaultRuntimeProperties:int getInt(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.MapQueryCacheProvider:org.apache.cayenne.cache.QueryCache get()"
        ]
    },
    "org.apache.cayenne.configuration.DefaultRuntimeProperties:boolean getBoolean(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.CayenneContextFactory:org.apache.cayenne.ObjectContext createContext(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.configuration.rop.client.ClientChannelProvider:org.apache.cayenne.DataChannel get()",
            "org.apache.cayenne.configuration.DefaultObjectStoreFactory:org.apache.cayenne.access.ObjectStore createObjectStore(org.apache.cayenne.access.DataRowStore)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:java.lang.String[] externalTypesForJdbcType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:boolean typeSupportsLength(int)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String[] externalTypesForJdbcType(int)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.merge.AddColumnToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.SetColumnTypeToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBindingBuilder:void in(org.apache.cayenne.di.Scope)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultBindingBuilder:void withoutScope()",
            "org.apache.cayenne.di.spi.DefaultBindingBuilder:void inSingletonScope()"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultListBuilder:void in(org.apache.cayenne.di.Scope)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.di.spi.DefaultMapBuilder:void in(org.apache.cayenne.di.Scope)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.di.spi.DefaultInjector:org.apache.cayenne.di.Provider getProvider(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder add(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder put(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.CompiledExpression:org.apache.cayenne.reflect.ClassDescriptor getRootDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLDbPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.event.JavaGroupsBridgeFactory:org.apache.cayenne.event.EventBridge createEventBridge(java.util.Collection,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.remote.RemoteSession:org.apache.cayenne.event.EventBridge createServerEventBridge()"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void initWithProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void <init>(java.lang.String,java.util.Map,org.apache.cayenne.event.EventManager)"
        ]
    },
    "org.apache.cayenne.remote.RemoteSession:org.apache.cayenne.event.EventBridge createServerEventBridge()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.hessian.HessianConnection:org.apache.cayenne.event.EventBridge getServerEventBridge()"
        ]
    },
    "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:void logQuery(java.lang.String,java.util.List,java.util.List,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QueryAssembler:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.QueryLogger:void logQuery(java.lang.String,java.util.List,java.util.List,long)",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQuery(java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cayenne.map.DataMap:void <init>(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void <init>(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processEndDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$3300(org.apache.cayenne.map.MapLoader)"
        ]
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.Embeddable getEmbeddable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.Embeddable getEmbeddable(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.Embeddable getEmbeddable()",
            "org.apache.cayenne.util.NamedObjectFactory$EmbeddableFactory:boolean isNameInUse(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.Embeddable getEmbeddable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttribute(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.EmbeddableDescriptor createEmbeddableDescriptor(org.apache.cayenne.map.EmbeddedAttribute)"
        ]
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.SQLResult getResult(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.SQLResult getResult(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityInheritanceTree lookupInheritanceTree(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure getProcedure(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.Procedure getProcedure(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.query.Query getQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.query.Query getQuery(java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query resolveQuery(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DbEntity getDbEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DbEntity getDbEntity(java.lang.String)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.Entity getTargetEntity()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.DbEntity getDbEntity()"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity getObjEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientNode(java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff:void <init>(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntity(java.lang.String)",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResult:org.apache.cayenne.map.ObjEntity getRootEntity(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getSuperEntity()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.Entity getTargetEntity()",
            "org.apache.cayenne.query.BaseQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,java.lang.String)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.lang.Class getObjectClass()",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean excludingDefaultListeners(java.lang.String)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean excludingSuperclassListeners(java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(java.lang.String)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)",
            "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity lookupObjEntity(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataObject objectFromDataRow(java.lang.Class,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DataContext:java.lang.Object newObject(java.lang.Class)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity lookupObjEntity(java.lang.Object)",
            "org.apache.cayenne.map.EntityResult:org.apache.cayenne.map.ObjEntity getRootEntity(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.BaseQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,java.lang.String)",
            "org.apache.cayenne.BaseContext:void injectInitialValue(java.lang.Object)",
            "org.apache.cayenne.Cayenne:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.Class,java.util.Map)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:java.lang.Object newObject(java.lang.Class)",
            "org.apache.cayenne.CayenneContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.ObjEntity lookupObjEntity(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void registerNewObject(java.lang.Object)",
            "org.apache.cayenne.query.BaseQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,java.lang.String)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.map.ObjEntity getObjEntity(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:java.util.Map extractObjectId(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:java.lang.String uniqueRelName(org.apache.cayenne.map.Entity,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)"
        ]
    },
    "org.apache.cayenne.map.DbJoin:org.apache.cayenne.map.DbAttribute getSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship$JoinTransformers$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:java.util.Map targetPkSnapshotWithSrcSnapshot(java.util.Map)",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.map.DbJoin:org.apache.cayenne.map.DbAttribute getTarget()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship$JoinTransformers$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.Entity$PathIterator:org.apache.cayenne.util.CayenneMapEntry next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.Entity$PathIterator:java.lang.Object next()"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:boolean isInherited()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjAttribute:void setDbAttributePath(java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.AttributePropertyDecorator:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$ObjAttributeFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.PathComponentIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.PathComponentIterator:org.apache.cayenne.map.PathComponent next()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.merge.DefaultValueForNullProvider:java.util.List createSql(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.SetValueForNullToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)"
        ]
    },
    "org.apache.cayenne.query.EJBQLQuery:void initWithProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EjbqlBuilder:org.apache.cayenne.query.Query getQuery()"
        ]
    },
    "org.apache.cayenne.query.EJBQLQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:void <init>(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery,org.apache.cayenne.ejbql.EJBQLCompiledExpression,org.apache.cayenne.access.jdbc.EJBQLTranslatorFactory)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.map.ProcedureQueryBuilder:org.apache.cayenne.query.Query getQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processEndQuery()"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.NestedQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.cache.EhCacheQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.NestedQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:java.lang.String getCacheKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.EhCacheQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.MapQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.MapQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:java.lang.String getCacheKey()",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.OSQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String getCacheKey()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.OSQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:void initMetadata(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.SelectQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.SQLTemplate queryWithParameters(java.util.Map[])"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptSharedCache()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.query.QueryCacheStrategy getCacheStrategy()",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptLocalCache()"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:java.lang.String[] getCacheGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.EhCacheQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.MapQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification getRefreshSpecification(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.OSQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.remote.IncrementalQuery$1:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:java.lang.String[] getCacheGroups()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:java.lang.String[] getCacheGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.EhCacheQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.MapQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification getRefreshSpecification(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.OSQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.remote.IncrementalQuery$1:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:java.lang.String[] getCacheGroups()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:java.lang.String[] getCacheGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.EhCacheQueryCache:java.util.List get(org.apache.cayenne.query.QueryMetadata,org.apache.cayenne.cache.QueryCacheEntryFactory)",
            "org.apache.cayenne.cache.EhCacheQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.MapQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.cache.OSQueryCache:org.apache.cayenne.cache.OSQueryCache$RefreshSpecification getRefreshSpecification(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.OSQueryCache:void put(org.apache.cayenne.query.QueryMetadata,java.util.List)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.remote.IncrementalQuery$1:java.lang.String[] getCacheGroups()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:java.lang.String[] getCacheGroups()"
        ]
    },
    "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.access.SimpleIdIncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:boolean isFetchingDataRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:boolean isFetchingDataRows()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RangeQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:boolean isFetchingDataRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:boolean isFetchingDataRows()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RangeQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:boolean isFetchingDataRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:boolean isFetchingDataRows()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RangeQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.remote.RangeQuery$1:boolean isFetchingDataRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:org.apache.cayenne.access.IncrementalFaultList$IncrementalListHelper createHelper(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:boolean isFetchingDataRows()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RangeQuery$1:boolean isFetchingDataRows()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()"
        ]
    },
    "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.ejbql.EJBQLExpressionVisitor getIdentifierColumnsTranslator(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getPageSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.ejbql.EJBQLExpressionVisitor getIdentifierColumnsTranslator(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List buildResultColumns()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getPageSize()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getPageSize()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getPageSize()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getPageSize()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptPaginatedQuery()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:int getPageSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.ejbql.EJBQLExpressionVisitor getIdentifierColumnsTranslator(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List buildResultColumns()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getPageSize()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getPageSize()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getPageSize()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getPageSize()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptPaginatedQuery()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getPageSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.ejbql.EJBQLExpressionVisitor getIdentifierColumnsTranslator(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List buildResultColumns()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptIncrementalListConversion()",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptPaginatedQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getPageSize()",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getPageSize()",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getPageSize()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getPageSize()",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptPaginatedQuery()"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getFetchLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getFetchLimit()",
            "org.apache.cayenne.dba.frontbase.FrontBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.hsqldb.HSQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.mysql.MySQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.postgres.PostgresSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getFetchLimit()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getFetchLimit()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getFetchLimit()"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:int getFetchLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getFetchLimit()",
            "org.apache.cayenne.dba.frontbase.FrontBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.hsqldb.HSQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.mysql.MySQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.postgres.PostgresSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getFetchLimit()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getFetchLimit()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getFetchLimit()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getFetchLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:boolean interceptSinglePageQuery()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getFetchLimit()",
            "org.apache.cayenne.dba.frontbase.FrontBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.hsqldb.HSQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.mysql.MySQLSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.postgres.PostgresSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.query.BaseQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.QueryMetadataWrapper:int getFetchLimit()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getFetchLimit()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getFetchLimit()"
        ]
    },
    "org.apache.cayenne.access.jdbc.ProcedureAction:void initStatement(java.sql.CallableStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getStatementFetchSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getStatementFetchSize()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:int getStatementFetchSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getStatementFetchSize()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getStatementFetchSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.ProcedureAction:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalQuery$1:int getStatementFetchSize()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:int getStatementFetchSize()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void initWithProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void initWithProperties(java.util.Map)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateAction:java.lang.String extractTemplateString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.oracle.OracleSQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getSubclassDescriptor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getSubclassDescriptor(java.lang.Class)",
            "org.apache.cayenne.util.DeepMergeOperation:java.lang.Object merge(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.Property getDeclaredProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.Property getDeclaredProperty(java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.Property getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.DataContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ejbql.parser.Compiler$JoinVisitor:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.query.RelationshipQuery:void updateMetadata(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()",
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()",
            "org.apache.cayenne.reflect.BaseArcProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.Property getProperty(java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.Property getProperty(java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.Accessor createMapKeyAccessor(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handlePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.reflect.Property getProperty(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.PersistentObject:java.lang.Object getMapKey(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.PropertyUtils:java.lang.Object getProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTObjPath:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList$1:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:int getIndexValue(java.lang.Object)",
            "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateMandatory(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:java.lang.Object readSimpleProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneDataObject:java.lang.Object readSimpleProperty(java.lang.String)"
        ]
    },
    "org.apache.cayenne.remote.service.BaseRemoteService:void <init>(org.apache.cayenne.configuration.ObjectContextFactory,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.HttpRemoteService:void <init>(org.apache.cayenne.configuration.ObjectContextFactory,java.util.Map)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectAccessor:java.lang.Object getValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:java.lang.Object getMapKey(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:org.apache.cayenne.ValueHolder ensureValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:org.apache.cayenne.ValueHolder ensureCollectionValueHolderSet(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.EmbeddedFieldAccessor:java.lang.Object getEmbeddable(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectBaseProperty:java.lang.Object readPropertyDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.access.ObjectDiff$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectDiff$3:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void injectValueHolder(java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void invalidate(java.lang.Object)",
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.query.ObjectIdQuery:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:int hashCode()",
            "org.apache.cayenne.util.HashCodeBuilder:org.apache.cayenne.util.HashCodeBuilder append(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataContext:boolean hasChanges()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:void rollbackChangesLocally()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.NamedQuery:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:int[] performNonSelectingQuery(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssembler:void setQuery(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.trans.QueryAssembler:void setEntityResolver(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain$1:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.map.Procedure getProcedure()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:org.apache.cayenne.map.Procedure getProcedure()"
        ]
    },
    "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.query.SelectQueryMetadata:void resolveAutoAliases(org.apache.cayenne.query.SelectQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.FilterIteration:java.util.Iterator vertexIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:java.util.Iterator vertexIterator()",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:java.util.Iterator vertexIterator()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.ReversedIteration:java.util.Iterator vertexIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:java.util.Iterator vertexIterator()",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:java.util.Iterator vertexIterator()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.util.SortedMap getRelationshipMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getRelationships()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)"
        ]
    },
    "org.apache.cayenne.access.jdbc.InheritanceAwareEntityRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createEntityRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.NestedQueryCache:int size()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList$ListHelper:void validateListObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void add(int,java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean add(java.lang.Object)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:java.lang.Object set(int,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.FilterArcIterator:void <init>(org.apache.cayenne.ashwood.graph.ArcIterator,org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate,org.apache.commons.collections.Predicate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void reset(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.xml.XMLUtil:org.w3c.dom.Node firstMatch(org.w3c.dom.NodeList,org.apache.commons.collections.Predicate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLUtil:org.w3c.dom.Element getChild(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:java.util.Collection dirtyNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContext:java.util.Collection uncommittedObjects()"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager:java.util.Collection dirtyNodes(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContext:java.util.Collection deletedObjects()",
            "org.apache.cayenne.CayenneContext:java.util.Collection modifiedObjects()",
            "org.apache.cayenne.CayenneContext:java.util.Collection newObjects()"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.OSQueryCacheFactory:org.apache.cayenne.cache.QueryCache getQueryCache(java.util.Map)"
        ]
    },
    "org.apache.cayenne.cache.OSQueryCache:void <init>(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.access.DataContextMergeHandler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.CayenneContextQueryAction$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToOneProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.BaseProperty:java.lang.Object readProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.SimpleAttributeProperty:java.lang.Object readProperty(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.BaseProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToOneProperty:void setTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.PropertyAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void injectValueHolder(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.DataContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:void invalidate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataRowUtils$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.ObjectStore$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextQueryAction$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.reflect.AttributePropertyDecorator:java.lang.Object readPropertyDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:java.lang.Object readPropertyDirectly(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:java.lang.Object readProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connect(org.apache.cayenne.Persistent,java.util.List)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void addTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTargetDirectly(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void removeTarget(java.lang.Object,java.lang.Object,boolean)",
            "org.apache.cayenne.reflect.PropertyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:java.lang.Object readSimpleProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContextChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:void injectValueHolder(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean isFault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean isFault(java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.AttributePropertyDecorator:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataRowUtils$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.reflect.BaseProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneContextMergeHandler:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.xml.XMLEncoder:java.lang.String encode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.oracle.Oracle8QualifierTranslator:void doAppendPart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:java.lang.Appendable appendPart(java.lang.Appendable)"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map,boolean)"
        ]
    },
    "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startUnknownPrefetch(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.Statement createStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:boolean safeExecute(java.sql.Connection,java.lang.String)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.Statement createStatement()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.Statement createStatement()",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLSniffer:org.apache.cayenne.dba.DbAdapter createAdapter(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:void setIdentityInsert(java.sql.Connection,boolean)",
            "org.apache.cayenne.dba.JdbcPkGenerator:int runUpdate(org.apache.cayenne.access.DataNode,java.lang.String)",
            "org.apache.cayenne.merge.AbstractToDbToken:void executeSql(org.apache.cayenne.merge.MergerContext,java.lang.String)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:void setIdentityInsert(java.sql.Connection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.Statement createStatement(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.Statement createStatement(int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.Statement createStatement(int,int)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String,int,int)"
        ]
    },
    "org.apache.cayenne.access.DbGeneratorPostprocessor$HSQLDBPostprocessor:void execute(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.DbGeneratorPostprocessor$HSQLDBPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String)",
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void execute(java.sql.Connection,org.apache.cayenne.access.OperationObserver,org.apache.cayenne.access.jdbc.SQLStatement,java.util.Collection)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int,int)",
            "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.CallableStatement prepareCall(java.lang.String,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,int[])",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,int[])"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.cayenne.remote.hessian.HessianConnection:void connect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.hessian.HessianConnection:org.apache.cayenne.event.EventBridge getServerEventBridge()",
            "org.apache.cayenne.remote.hessian.HessianConnection:void beforeSendMessage(org.apache.cayenne.remote.ClientMessage)"
        ]
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectId)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitSelect(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLSelect:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitDelete(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLDelete:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitUpdate(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLUpdate:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$CountColumnVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLAggregate:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitDbPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLDbPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLDbPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSubselect(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIn(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLSubselect:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLWhere:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:org.apache.cayenne.ejbql.EJBQLExpression ejbqlQualifierForEntityAndSubclasses(org.apache.cayenne.exp.Expression,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLOrderByTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLAggregate:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitGroupBy(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLGroupBy:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitHaving(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLHaving:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitOrderBy(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLOrderBy:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitSelectExpressions(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sybase.SybaseEJBQLSubselectTranslator:boolean visitSelectExpressions(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQLSelectExpressions:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateField(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateField:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateField:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLWhere:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateItem:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseEJBQLConditionTranslator:boolean visitSubselect(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIn(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLSubselect:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitSelectExpression(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLSelectExpression:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLWhere:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOrderBy(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLOrderBy:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLFromItem:java.lang.String getSyntheticId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:java.lang.String getId()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.SimpleNode:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLAbs:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLAdd:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLAnd:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLBetween:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLConcat:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLDivide:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLEquals:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLGreaterOrEqual:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLGreaterThan:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLIn:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLIsNull:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLLength:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLLessOrEqual:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLLessThan:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLLike:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLLocate:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLLower:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLMod:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLMultiply:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLNotEquals:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLOr:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLSqrt:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLSubstring:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLSubtract:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLTrim:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateField:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLUpper:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.query.EJBQLQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator$1:void appendMultiColumnPath(org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLFrom:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLInnerFetchJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLInnerJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLOuterFetchJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLOuterJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSelectClause:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLIsEmpty:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLDistinct:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLWhere:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortDbEntities(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataPort:void execute()",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjEntities(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.conn.PoolManager:void <init>(java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,org.apache.cayenne.log.JdbcEventLogger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.PropertyDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)",
            "org.apache.cayenne.configuration.server.XMLPoolingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)",
            "org.apache.cayenne.conn.PoolManager:void <init>(java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:void <init>(javax.sql.ConnectionPoolDataSource,int,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.conn.PoolManager:java.sql.Connection getConnection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:java.util.Map getNameTablesInDB(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void reconnect()",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.JdbcPkGenerator:boolean autoPkTableExists(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.JdbcPkGenerator:int runUpdate(org.apache.cayenne.access.DataNode,java.lang.String)",
            "org.apache.cayenne.merge.AbstractToDbToken:void executeSql(org.apache.cayenne.merge.MergerContext,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(org.apache.cayenne.di.Module[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(org.apache.cayenne.di.Module[])",
            "org.apache.cayenne.configuration.CayenneRuntime:void <init>(java.util.Collection)",
            "org.apache.cayenne.di.DIBootstrap:org.apache.cayenne.di.Injector createInjector(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultScope:org.apache.cayenne.di.Provider scope(org.apache.cayenne.di.Provider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.Binding:void <init>(org.apache.cayenne.di.Provider,org.apache.cayenne.di.Scope)",
            "org.apache.cayenne.di.spi.Binding:void changeScope(org.apache.cayenne.di.Scope)"
        ]
    },
    "org.apache.cayenne.configuration.server.ServerModule:void configure(org.apache.cayenne.di.Binder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void <init>(org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLAggregate:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:void prepareFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitInnerFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOuterFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$PathVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_247()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_156()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_246()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_155()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_245()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_154()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_102()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_41()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_41()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_31()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_94()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_118()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_47()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_122()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_48()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_186()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_110()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_109()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_44()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_48()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_38()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_101()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_47()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_37()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_100()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_117()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_46()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_46()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_36()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_99()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_189()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_113()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_44()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_34()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_97()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_112()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_45()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_53()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_41()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_51()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_40()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_45()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_35()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_98()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_49()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_39()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_93()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_39()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_41()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_41(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_43()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_40()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_40(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_43()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_39()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_39(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_43()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_28()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_28(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_38()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_29()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_29(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_27()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_27(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_37()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_180()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_91()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_36()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_26()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_185()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_22()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_22(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_35()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_35()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_25()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_184()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_34()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_24()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_183()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_325()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_310()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_324()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_309()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_323()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_308()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_322()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_307()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_326()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_311()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_32()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_18()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_332()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_329()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_325()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_324()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_323()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_322()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_326()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_292()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_272()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_294()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_273()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_157()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_61()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_277()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_187()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_161()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_65()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_276()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_186()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_277()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_270()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_178()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_271()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_179()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_249()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_159()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_248()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_158()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_174()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_279()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_187()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_73()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_177()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_280()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_79()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_178()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_85()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_162()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_66()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_66()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_61()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_299()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_327()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_315()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_315()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_300()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_169()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_70()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_168()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_69()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_23()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_5()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_167()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_19()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_7()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_1()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_295()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_22()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_4()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_166()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_275()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_182()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_182()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_61()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_67()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_20()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_190()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_270()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_271()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_253()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_163()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_298()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_121()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_253()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_163()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_24()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_90()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_88()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_20()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_334()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_314()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_83()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_179()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_178()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_6()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_164()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_23()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_19()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_22()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_251()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_160()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_269()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_176()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_268()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_176()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_267()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_176()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_321()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_306()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_320()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_305()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_250()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_160()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_319()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_304()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_328()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_317()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_318()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_303()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_317()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_302()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_316()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_301()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_60()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_60(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_160()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_291()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_266()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_59()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_59(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_289()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_290()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_265()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_289()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_264()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_288()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_263()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_287()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_262()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_222()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_142()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_62()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_56()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_81()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_216()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_139()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_53()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_53(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_26()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_52()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_52(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_26()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_126()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_52()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_283()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_252()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_330()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_261()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_171()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_51()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_51(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_170()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_260()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_171()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_173()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_72()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_172()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_72()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_150()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_58()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_149()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_58()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_148()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_58()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_147()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_58()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_146()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_58()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_145()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_58()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_132()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_54()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_131()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_54()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_130()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_54()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_129()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_54()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_128()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_54()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_127()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_54()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_153()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_59()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_152()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_59()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_144()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_57()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_143()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_57()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_141()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_56()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_138()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_55()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_137()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_55()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_136()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_55()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_140()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_56()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_135()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_55()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_134()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_55()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_133()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_55()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_item()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void fetch_join()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void path()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void empty_collection_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void size()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void set_clause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void simple_entity_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void count()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void avg()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void max()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void min()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void sum()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_item()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_primary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void literal_or_param()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void all_or_any_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_value()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void string_value()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void string_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void concat()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void substring()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void lower()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void upper()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void length()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void locate()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_primary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_value()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_primary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void enum_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void enum_primary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void enum_literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_value()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_strings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void numeric_literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void literal_or_param()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void input_parameter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_entity_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void literal_or_param()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_expression()"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.DefaultEventManager:void addListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.DefaultEventManager:void addNonBlockingListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.event.DefaultEventManager:void addListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EventUtil:void listenForSubjects(org.apache.cayenne.event.EventManager,org.apache.cayenne.DataChannelListener,java.lang.Object,org.apache.cayenne.event.EventSubject[])"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:void addNonBlockingListener(java.lang.Object,java.lang.String,java.lang.Class,org.apache.cayenne.event.EventSubject,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void startListeners()",
            "org.apache.cayenne.access.ObjectStore:void setDataRowCache(org.apache.cayenne.access.DataRowStore)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void startListeners()"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection,boolean,org.apache.cayenne.event.EventManager,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientChannelProvider:org.apache.cayenne.DataChannel get()",
            "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection,boolean,org.apache.cayenne.event.EventManager)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void addAttribute(org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.map.MapLoader:void processStartDbAttribute(org.xml.sax.Attributes)",
            "org.apache.cayenne.merge.AddColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.map.DbAttribute:void setPrimaryKey(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.map.MapLoader:void processStartDbAttribute(org.xml.sax.Attributes)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.map.DbAttribute:void setGenerated(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processStartDbAttribute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.DbEntity:void clearAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.MapLoader:void access$1100(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$12:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void addMap(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.MapLoader:void access$2400(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$23:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:java.util.List getDbRelationships()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map lazyJoinSnapshot()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void <init>(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:java.lang.Object findReflexiveMaster(org.apache.cayenne.Persistent,org.apache.cayenne.map.ObjRelationship,java.lang.String)",
            "org.apache.cayenne.ejbql.parser.CompiledExpression:java.util.List getIncomingRelationships(java.lang.String)",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToDependentEntity()",
            "org.apache.cayenne.map.ObjRelationship:boolean isToPK()",
            "org.apache.cayenne.map.ObjRelationship:boolean isFlattened()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseDbRelationshipPath()",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$1400(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$15:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$5000(org.apache.cayenne.map.MapLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$50:void execute()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$5100(org.apache.cayenne.map.MapLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$51:void execute()"
        ]
    },
    "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.ProcedureQuery:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)",
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)",
            "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrdering(java.lang.String,org.apache.cayenne.query.SortOrder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void addOrdering(java.lang.String,org.apache.cayenne.query.SortOrder)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addDefaultListener(org.apache.cayenne.map.LifecycleEvent,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addDefaultListener(org.apache.cayenne.LifecycleListener)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(org.apache.cayenne.map.LifecycleEvent,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(org.apache.cayenne.map.LifecycleEvent,java.lang.Class,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Class,org.apache.cayenne.LifecycleListener)"
        ]
    },
    "org.apache.cayenne.util.EntityMergeSupport:void <init>(org.apache.cayenne.map.DataMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void appendLiteralDirect(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.query.EJBQLQuery:org.apache.cayenne.ejbql.EJBQLCompiledExpression getExpression(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:void startMaintenanceThread()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolManager:void init(javax.sql.ConnectionPoolDataSource,int,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.BaseQueryMetadata:void removePrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.ProcedureQuery:void removePrefetch(java.lang.String)",
            "org.apache.cayenne.query.SelectQuery:void removePrefetch(java.lang.String)",
            "org.apache.cayenne.query.SQLTemplate:void removePrefetch(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentificationVariable:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentificationVariable:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:void <init>(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.ejbql.EJBQLExpressionVisitor getFromTranslator(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIntegerLiteral(org.apache.cayenne.ejbql.parser.EJBQLIntegerLiteral)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIntegerLiteral:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitDecimalLiteral(org.apache.cayenne.ejbql.parser.EJBQLDecimalLiteral)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLDecimalLiteral:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitBooleanLiteral(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLBooleanLiteral:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()"
        ]
    },
    "org.apache.cayenne.access.types.EnumTypeFactory:org.apache.cayenne.access.types.ExtendedType getType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataNodeQueryAction$1:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.SimpleAttributeProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(org.apache.cayenne.map.DbAttribute,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(org.apache.cayenne.map.ProcedureParameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(java.lang.String,java.sql.ResultSetMetaData,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(java.sql.ResultSetMetaData,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.ColumnDescriptor getColumnDescriptor(java.lang.String,org.apache.cayenne.access.jdbc.ColumnDescriptor[],int)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void setInParam(java.sql.CallableStatement,org.apache.cayenne.map.ProcedureParameter,java.lang.Object,int)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void setInParam(java.sql.CallableStatement,org.apache.cayenne.map.ProcedureParameter,java.lang.Object,int)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.db2.DB2Adapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.derby.DerbyAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.sybase.SybaseAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.AutoAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.CalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EntityRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EntityRowReader:java.lang.Object readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.FullRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.FullRowReader:java.lang.Object readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readSingleId(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ScalarRowReader:java.lang.Object readRow(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.CompoundRowReader:java.lang.Object[] readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.ResultSet,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.EntityRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.FullRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readSingleId(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readIdMap(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.ScalarRowReader:java.lang.Object readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.EntityRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.FullRowReader:org.apache.cayenne.DataRow readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readSingleId(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readIdMap(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.ScalarRowReader:java.lang.Object readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)"
        ]
    },
    "org.apache.cayenne.access.types.UtilDateType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.types.ExtendedTypeDecorator:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.sqlite.SQLiteCalendarType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.JdbcAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.h2.H2Adapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.mysql.MySQLMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.OracleMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$3:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sqlserver.SQLServerMergerFactory$4:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.sybase.SybaseMergerFactory:java.lang.StringBuffer createStringQuery(org.apache.cayenne.dba.DbAdapter,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.AutoAdapter:void createTableAppendColumn(java.lang.StringBuffer,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$200(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$3:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.merge.AbstractToDbToken:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.merge.DummyReverseToken:java.lang.String getTokenValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DummyReverseToken:java.lang.String getTokenValue()"
        ]
    },
    "org.apache.cayenne.merge.AbstractToModelToken:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.configuration.web.WebModule:void configure(org.apache.cayenne.di.Binder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void <init>(org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.ClientLocalRuntime$1:void configure(org.apache.cayenne.di.Binder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void <init>(org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultListBuilder:void <init>(org.apache.cayenne.di.Key,org.apache.cayenne.di.spi.DefaultInjector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultBinder:org.apache.cayenne.di.ListBuilder bindList(java.lang.String)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultMapBuilder:void <init>(org.apache.cayenne.di.Key,org.apache.cayenne.di.spi.DefaultInjector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultBinder:org.apache.cayenne.di.MapBuilder bindMap(java.lang.String)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitSelect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitDelete(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction$1:boolean visitUpdate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$CountColumnVisitor:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:void visitAggregateColumn(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn,org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIsEmpty(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitDbPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSubselect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:org.apache.cayenne.ejbql.EJBQLExpression ejbqlQualifierForEntityAndSubclasses(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLOrderByTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitGroupBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitHaving(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitOrderBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitSelectExpressions(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateField(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.dba.oracle.OracleEJBQLConditionTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.dba.sybase.SybaseEJBQLConditionTranslator:boolean visitSubselect(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitSelectExpression(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitInnerFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitInnerJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOuterFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOuterJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitWhere(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOrderBy(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler$SelectExpressionVisitor:boolean visitAggregate(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:java.lang.String getSyntheticId()",
            "org.apache.cayenne.ejbql.parser.SimpleNode:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object,org.apache.cayenne.event.EventSubject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ObjectStore:void setDataRowCache(org.apache.cayenne.access.DataRowStore)",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:void postEvent(java.util.EventObject,org.apache.cayenne.event.EventSubject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void sendUpdateNotification(java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.event.EventBridge:void onExternalEvent(org.apache.cayenne.event.CayenneEvent)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.BaseContext:void fireDataChannelCommitted(java.lang.Object,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.BaseContext:void fireDataChannelRolledback(java.lang.Object,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.BaseContext:void fireDataChannelChanged(java.lang.Object,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContextGraphManager:void send(org.apache.cayenne.graph.GraphDiff,org.apache.cayenne.event.EventSubject,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager:void access$000(org.apache.cayenne.event.DefaultEventManager,org.apache.cayenne.event.DefaultEventManager$Dispatch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager$Dispatch:void fire()"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void <init>(java.lang.String,java.util.Map,org.apache.cayenne.event.EventManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataRowStore getSharedSnapshotCache()",
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataRowStore nonNullSharedSnapshotCache()",
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataContext createDataContext(boolean)",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createFromGenericChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createdFromDataDomain(org.apache.cayenne.access.DataDomain)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.remote.RemoteSession:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.remote.RemoteSession createRemoteSession(java.lang.String,java.lang.String,boolean)",
            "org.apache.cayenne.remote.RemoteSession:org.apache.cayenne.event.EventBridge createServerEventBridge()",
            "org.apache.cayenne.remote.RemoteSession:void <clinit>()"
        ]
    },
    "org.apache.cayenne.util.EventUtil:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void attachToChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.util.EventUtil:boolean listenForChannelEvents(org.apache.cayenne.DataChannel,org.apache.cayenne.DataChannelListener)",
            "org.apache.cayenne.util.EventUtil:boolean listenForChannelEvents(org.apache.cayenne.event.EventManager,org.apache.cayenne.DataChannelListener)",
            "org.apache.cayenne.util.EventUtil:void <clinit>()",
            "org.apache.cayenne.CayenneContext:void attachToChannel(org.apache.cayenne.DataChannel)"
        ]
    },
    "org.apache.cayenne.BaseContext:void fireDataChannelCommitted(java.lang.Object,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void graphCommitted(org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.BaseContext:void fireDataChannelRolledback(java.lang.Object,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void rollbackChangesLocally()",
            "org.apache.cayenne.access.DataContext:void rollbackChanges()",
            "org.apache.cayenne.CayenneContext:void rollbackChanges()",
            "org.apache.cayenne.CayenneContext:void rollbackChangesLocally()",
            "org.apache.cayenne.CayenneContextGraphManager:void graphReverted()"
        ]
    },
    "org.apache.cayenne.BaseContext:void fireDataChannelChanged(java.lang.Object,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void fireDataChannelChanged(java.lang.Object,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void processChange(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.CayenneContextMergeHandler:void repostAfterMerge(org.apache.cayenne.graph.GraphEvent)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$22:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.util.Collection getAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allAttributes()",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$500(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$6:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute makeObjAttribute(org.apache.cayenne.map.EmbeddableAttribute,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute makeObjAttribute(org.apache.cayenne.map.EmbeddableAttribute)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartObjAttribute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$400(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:void <init>(org.apache.cayenne.map.ObjAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Attribute getAttribute(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.ObjAttribute getClientAttribute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()"
        ]
    },
    "org.apache.cayenne.map.SyntheticPKObjAttribute:org.apache.cayenne.map.ObjAttribute getClientAttribute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$4700(org.apache.cayenne.map.MapLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$47:void execute()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$2200(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$22:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:void setIndexValue(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:void add(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object remove(int)",
            "org.apache.cayenne.util.IndexPropertyList:void shift(int,int)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void invalidate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataRowUtils$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.ObjectStore$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.CayenneContextQueryAction$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:void invalidate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContextMergeHandler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataRowUtils$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataRowUtils$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.ObjectStore$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.reflect.PersistentDescriptor$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.CayenneContextQueryAction$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)"
        ]
    },
    "org.apache.cayenne.access.jdbc.DistinctResultIterator:void <init>(org.apache.cayenne.access.ResultIterator,org.apache.cayenne.map.DbEntity,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.DistinctResultIterator:java.lang.Object nextRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:java.util.List allRows()",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextUniqueRow()",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void checkOffset()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:java.lang.Object nextRow()",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.access.jdbc.DistinctResultIterator:void skipRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void skipRow()",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void skipRow()"
        ]
    },
    "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:boolean isPrimaryKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:boolean isMandatory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.ObjAttribute getClientAttribute()"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:int getMaxLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.ObjAttribute getClientAttribute()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$2500(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$24:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$2600(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$25:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$2700(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$26:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$2800(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$27:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$2900(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$28:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$3000(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$29:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$3100(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$30:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$3200(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$31:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.merge.SetPrimaryKeyToDb:org.apache.cayenne.merge.MergerToken createReverse(org.apache.cayenne.merge.MergerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodeIdChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeIdChangeOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeIdChangeOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodeCreated(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.CayenneContextGraphManager$RollbackChangeHandler:void nodeRemoved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.graph.NodeCreateOperation:void undo(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.NodeDeleteOperation:void apply(org.apache.cayenne.graph.GraphChangeHandler)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:void <init>(org.apache.cayenne.dba.DbAdapterFactory,javax.sql.DataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.AutoAdapter:void <init>(javax.sql.DataSource)"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.AshwoodEntitySorter:void <init>(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:java.util.Map getNameTablesInDB(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:void close()",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void reconnect()",
            "org.apache.cayenne.conn.PooledConnectionImpl:void close()",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sybase.SybasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.JdbcPkGenerator:boolean autoPkTableExists(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.JdbcPkGenerator:int runUpdate(org.apache.cayenne.access.DataNode,java.lang.String)",
            "org.apache.cayenne.merge.AbstractToDbToken:void executeSql(org.apache.cayenne.merge.MergerContext,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void ReInit(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void ReInit(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.conn.DriverDataSource:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.DriverDataSource:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartObjRelationship(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$1200(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.query.Ordering:void <init>(java.lang.String,org.apache.cayenne.query.SortOrder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.QueryLoader:void addOrdering(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.query.SelectQuery:void addOrdering(java.lang.String,org.apache.cayenne.query.SortOrder)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitDbPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLDbPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLDbPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathAnaliserTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator$1:boolean visitUpdateField(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitCount(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLCount:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitAverage(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLAverage:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitMax(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLMax:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitMin(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLMin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator:boolean visitSum(org.apache.cayenne.ejbql.parser.EJBQLAggregateColumn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLSum:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL$EJBQLDefaultParser:org.apache.cayenne.ejbql.EJBQLExpression parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:org.apache.cayenne.ejbql.EJBQLExpression ejbqlQualifierForEntityAndSubclasses(org.apache.cayenne.exp.Expression,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:void <init>(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Fault)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyMapProperty:void <init>(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Fault,org.apache.cayenne.reflect.Accessor)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:void <init>(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Fault)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:void traverse(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.TraversalHandler)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNamedParameter:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTScalar:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTBetween:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTGreater:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTGreaterOrEqual:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLess:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLessOrEqual:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLike:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLike:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,char)",
            "org.apache.cayenne.exp.parser.ASTLikeIgnoreCase:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLikeIgnoreCase:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,char)",
            "org.apache.cayenne.exp.parser.ASTNotBetween:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotEqual:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotLike:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotLike:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,char)",
            "org.apache.cayenne.exp.parser.ASTNotLikeIgnoreCase:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotLikeIgnoreCase:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,char)",
            "org.apache.cayenne.exp.parser.SimpleNode:org.apache.cayenne.exp.parser.Node wrapChild(java.lang.Object)",
            "org.apache.cayenne.exp.parser.SimpleNode:void setOperand(int,java.lang.Object)",
            "org.apache.cayenne.exp.Expression$1:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTDbPath:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.JoinStack$JoinedDbEntityQualifierTransformer:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.QualifierTranslator$DbEntityQualifierTransformer:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression noMatchDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessOrEqualDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterOrEqualDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression betweenDbExp(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notBetweenDbExp(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeDbExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeDbExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseDbExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseDbExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTObjPath:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression noMatchExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessOrEqualExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterOrEqualExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression betweenExp(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notBetweenExp(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseExp(java.lang.String,java.lang.Object,char)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTPath:void setOperand(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression joinExp(int,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTBetween:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTGreater:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTGreaterOrEqual:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLess:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLessOrEqual:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotBetween:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.query.Ordering:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter$ObjEntityComparator:int compare(org.apache.cayenne.map.ObjEntity,org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLike:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLikeIgnoreCase:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotLike:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotLikeIgnoreCase:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$1300(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$14:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.Query getReplacementQuery(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$4600(org.apache.cayenne.map.MapLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$46:void execute()"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction$FlushCallbackAction:boolean hasListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction$RollbackCallbackAction:boolean hasListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataChannelSyncCallbackAction:void <init>(org.apache.cayenne.reflect.LifecycleCallbackRegistry,org.apache.cayenne.graph.GraphManager,org.apache.cayenne.graph.GraphDiff)"
        ]
    },
    "org.apache.cayenne.util.ResourceLocator:java.util.Collection getResources(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.validation.BeanValidationFailure:org.apache.cayenne.validation.ValidationFailure validateMandatory(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.IdRowReader:java.lang.Object readRow(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.CompoundRowReader:java.lang.Object[] readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLNamedInputParameter:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLPositionalInputParameter:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.TransactionResultIteratorDecorator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void close()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void close()",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void close()"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void clearWarnings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void clearWarnings()",
            "org.apache.cayenne.conn.ConnectionWrapper:void clearWarnings()",
            "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void commit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.TransactionConnectionDecorator:void commit()",
            "org.apache.cayenne.conn.ConnectionWrapper:void sybaseAutoCommitPatch(java.sql.Connection,java.sql.SQLException,boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void commit()",
            "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:boolean getAutoCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.InternalTransaction:void fixConnectionState(java.sql.Connection)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:boolean getAutoCommit()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean getAutoCommit()",
            "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.lang.String getCatalog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.lang.String getCatalog()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.lang.String getCatalog()"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.DatabaseMetaData getMetaData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:java.util.Map getNameTablesInDB(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.access.DbLoader:java.sql.DatabaseMetaData getMetaData()",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.DatabaseMetaData getMetaData()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.DatabaseMetaData getMetaData()",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.JdbcPkGenerator:boolean autoPkTableExists(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:int getTransactionIsolation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:int getTransactionIsolation()",
            "org.apache.cayenne.conn.ConnectionWrapper:int getTransactionIsolation()"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.sql.SQLWarning getWarnings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.SQLWarning getWarnings()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.SQLWarning getWarnings()"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:boolean isClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:boolean isClosed()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean isClosed()"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:boolean isReadOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:boolean isReadOnly()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean isReadOnly()"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.lang.String nativeSQL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.lang.String nativeSQL(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.lang.String nativeSQL(java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void rollback()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.TransactionConnectionDecorator:void rollback()",
            "org.apache.cayenne.conn.ConnectionWrapper:void rollback()",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void setAutoCommit(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.InternalTransaction:void fixConnectionState(java.sql.Connection)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setAutoCommit(boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void sybaseAutoCommitPatch(java.sql.Connection,java.sql.SQLException,boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setAutoCommit(boolean)",
            "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void setCatalog(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setCatalog(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setCatalog(java.lang.String)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void setReadOnly(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setReadOnly(boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setReadOnly(boolean)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void setTransactionIsolation(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setTransactionIsolation(int)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setTransactionIsolation(int)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:java.util.Map getTypeMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.util.Map getTypeMap()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.util.Map getTypeMap()"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void setTypeMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setTypeMap(java.util.Map)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setTypeMap(java.util.Map)"
        ]
    },
    "org.apache.cayenne.query.BatchQuery:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.oracle.Oracle8Adapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.JdbcAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBNoSchemaAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$1:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.AutoAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.CreateTableToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.merge.CreateTableToDb:void execute(org.apache.cayenne.merge.MergerContext)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultInjector:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.CayenneRuntime:void shutdown()"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:void setSharedSnapshotCache(org.apache.cayenne.access.DataRowStore)",
            "org.apache.cayenne.access.DataDomain:void shutdown()"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void setEventManager(org.apache.cayenne.event.EventManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void attachToChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.access.DataDomain:void setEventManager(org.apache.cayenne.event.EventManager)",
            "org.apache.cayenne.access.DataDomain:void setSharedSnapshotCache(org.apache.cayenne.access.DataRowStore)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateRenderingUtils:java.lang.Object cayenneExp(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:org.apache.cayenne.exp.Expression trimmedInExpression(org.apache.cayenne.exp.Expression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluateChild(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTAdd:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTAnd:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTBetween:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTDivide:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:void injectValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTGreater:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTGreaterOrEqual:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLess:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLessOrEqual:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLike:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTLikeIgnoreCase:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNegate:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNot:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotBetween:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotEqual:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotLike:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNotLikeIgnoreCase:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTOr:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTSubtract:java.lang.Object evaluateNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.Expression:boolean match(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)"
        ]
    },
    "org.apache.cayenne.exp.parser.SimpleNode:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTNegate:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.IgnoreCaseNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.SimpleNode:void encodeChildrenAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.Expression:java.lang.String toEJBQL(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.QueryLogger:void logQuery(java.lang.String,java.util.List,java.util.List,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.log.CommonsJdbcEventLogger:void logQuery(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsBatch(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BatchAction:void runAsIndividualQueries(java.sql.Connection,org.apache.cayenne.access.trans.BatchQueryBuilder,org.apache.cayenne.access.OperationObserver,boolean)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DbGenerator:boolean safeExecute(java.sql.Connection,java.lang.String)",
            "org.apache.cayenne.access.QueryLogger:void logQuery(java.lang.String,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.ingres.IngresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long getLongPrimaryKey(java.sql.Statement,java.lang.String)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.oracle.OracleSelectTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.postgres.PostgresPkGenerator:java.util.List getExistingSequences(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:void setIdentityInsert(java.sql.Connection,boolean)",
            "org.apache.cayenne.dba.JdbcPkGenerator:int runUpdate(org.apache.cayenne.access.DataNode,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EntityListener:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.query.ObjectIdQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.ObjectIdQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()"
        ]
    },
    "org.apache.cayenne.query.RelationshipQuery:void updateMetadata(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.map.ObjRelationship getRelationship(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.query.AbstractQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.ObjRelationship:java.lang.String getCollectionType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getClientRelationship()",
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.map.Relationship:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjRelationship(org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void objRelationshipAdded(org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:void setPrefetchTree(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void setPrefetchTree(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction:void apply(org.apache.cayenne.map.LifecycleEvent,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.DataChannelSyncCallbackAction$FlushCallbackAction:void applyPreCommit()",
            "org.apache.cayenne.DataChannelSyncCallbackAction$FlushCallbackAction:void applyPostCommit()",
            "org.apache.cayenne.DataChannelSyncCallbackAction$RollbackCallbackAction:void applyPostCommit()"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String createName(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object makeObject(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object createObject(java.lang.Class,java.lang.Object,java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object makeObject(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValueDirectly(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorNode:void connect(org.apache.cayenne.Persistent,java.util.List)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void writeProperty(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.reflect.BaseToManyProperty:void writePropertyDirectly(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object setValueDirectly(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getDescriptor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.lang.Object createObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent newObject(java.lang.String)",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.lang.Object createObject()",
            "org.apache.cayenne.util.ObjectDetachOperation:java.lang.Object detach(java.lang.Object,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.BaseContext:java.lang.Object localObject(java.lang.Object)",
            "org.apache.cayenne.CayenneContext:java.lang.Object newObject(java.lang.Class)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent localObject(org.apache.cayenne.ObjectId,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.Persistent createFault(org.apache.cayenne.ObjectId)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.map.ObjEntity getEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EntityRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataRowUtils:void mergeObjectWithSnapshot(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Persistent,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:org.apache.cayenne.map.ObjEntity getEntity()",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.Persistent objectFromDataRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.map.ObjEntity getEntity()",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.ejbql.parser.Compiler$FromItemVisitor:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)",
            "org.apache.cayenne.ejbql.parser.Compiler$JoinVisitor:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.ObjectIdQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.RelationshipQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.reflect.AttributePropertyDecorator:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.map.ObjEntity getEntity()",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getRootDbEntities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getRootDbEntities()"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.map.EntityInheritanceTree getEntityInheritanceTree()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareEntityRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.EntityResultSegment)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.QualifierTranslator:org.apache.cayenne.exp.Expression extractQualifier()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void <init>(org.apache.cayenne.graph.GraphManager,org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:org.apache.cayenne.DataRow rowFromFlatRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.map.EntityInheritanceTree getEntityInheritanceTree()"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.lang.Class getObjectClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:org.apache.cayenne.query.SQLTemplate getQuery()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.lang.Class getObjectClass()"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getIdProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getIdProperties()"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getDiscriminatorColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getDiscriminatorColumns()"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.exp.Expression getEntityQualifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:java.lang.String appendTable(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.exp.Expression getEntityQualifier()"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getMapArcProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:java.util.Collection getMapArcProperties()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.Property getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.DataContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.ejbql.parser.Compiler$JoinVisitor:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.graph.ChildDiffLoader:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.query.RelationshipQuery:void updateMetadata(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()",
            "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()",
            "org.apache.cayenne.reflect.BaseArcProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()",
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.Property getProperty(java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptor:org.apache.cayenne.reflect.Property getProperty(java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.Accessor createMapKeyAccessor(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.util.ObjectContextGraphAction:void handlePropertyChange(org.apache.cayenne.Persistent,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.reflect.Property getProperty(org.apache.cayenne.Persistent,java.lang.String)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:org.apache.cayenne.reflect.Property propertyForId(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.PersistentObject:java.lang.Object getMapKey(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getSuperclassDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LazyClassDescriptorDecorator:org.apache.cayenne.reflect.ClassDescriptor getSuperclassDescriptor()"
        ]
    },
    "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.IncrementalFaultList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.access.ListWithPrefetches:boolean contains(java.lang.Object)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void linkToParent(org.apache.cayenne.Persistent,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void addConnectionEventListener(javax.sql.ConnectionEventListener)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.event.EventBridge:void onExternalEvent(org.apache.cayenne.event.CayenneEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.EntityResolver:void addDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.ObjEntity:boolean isGeneric()",
            "org.apache.cayenne.map.Procedure:void addCallParameter(org.apache.cayenne.map.ProcedureParameter)",
            "org.apache.cayenne.query.DeleteBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.query.UpdateBatchQuery:boolean isNull(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:boolean contains(java.lang.Object)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cayenne.CayenneContext:boolean hasChanges()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:java.lang.Object wrapPathOperand(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inExp(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression inDbExp(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInExp(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notInDbExp(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:org.apache.cayenne.exp.Expression trimmedInExpression(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:org.apache.cayenne.exp.Expression trimmedInExpression(org.apache.cayenne.exp.Expression,int)"
        ]
    },
    "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression joinExp(int,org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression andExp(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression orExp(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createDataDomain(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.ObjectStoreGraphDiff getChanges()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void rollbackChangesLocally()",
            "org.apache.cayenne.access.DataContext:void rollbackChanges()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff flushToParent(boolean)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLLike:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLLike:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void <init>(org.apache.cayenne.ashwood.graph.DigraphIteration,java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:void reset(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator outgoingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator incomingIterator(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)"
        ]
    },
    "org.apache.cayenne.access.FlattenedArcKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectDiff$ArcOperation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdDataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList$SingleIdPersistentListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateAtomic(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.EqualsBuilder:org.apache.cayenne.util.EqualsBuilder append(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Invocation:boolean equals(java.lang.Object)",
            "org.apache.cayenne.util.Util:boolean nullSafeEquals(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JavaCharStream:void AdjustBuffSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.JavaCharStream:char readChar()"
        ]
    },
    "org.apache.cayenne.exp.parser.JavaCharStream:void AdjustBuffSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.JavaCharStream:char readChar()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.MapLoader:void processEndQualifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$4900(org.apache.cayenne.map.MapLoader)"
        ]
    },
    "org.apache.cayenne.map.QueryLoader:void setQualifier(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processEndQualifier()"
        ]
    },
    "org.apache.cayenne.query.Ordering:org.apache.cayenne.exp.Expression getSortSpec()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.query.Ordering:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.query.Ordering:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.MapDigraph:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:boolean hasNext()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.ashwood.graph.FilterArcIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.DepthFirstSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.DepthFirstStampSearch:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.FilterArcIterator:boolean setNextObject()",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void removeVertex(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.ReversedIteration$ReversedArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.CayenneDataObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.DataObjectUtils:java.lang.Object objectForPK(org.apache.cayenne.ObjectContext,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentifier:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter$ObjEntityComparator:int compare(org.apache.cayenne.map.ObjEntity,org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter$ObjEntityComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.configuration.DefaultObjectStoreFactory:org.apache.cayenne.access.ObjectStore createObjectStore(org.apache.cayenne.access.DataRowStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createFromGenericChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createFromDataContext(org.apache.cayenne.access.DataContext)",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createdFromDataDomain(org.apache.cayenne.access.DataDomain)"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.HessianConnectionProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.configuration.server.PropertyDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.configuration.server.PropertyDataSourceFactory:int getIntProperty(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.PropertyDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCacheProvider:org.apache.cayenne.cache.QueryCache get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.cache.MapQueryCacheProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.ClientChannelProvider:org.apache.cayenne.DataChannel get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientChannelProvider:java.lang.Object get()"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBindingBuilder:void withoutScope()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.ServerModule:void configure(org.apache.cayenne.di.Binder)",
            "org.apache.cayenne.configuration.web.WebModule:void configure(org.apache.cayenne.di.Binder)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBindingBuilder:void inSingletonScope()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQLDbPath:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.remote.hessian.HessianConnection:org.apache.cayenne.event.EventBridge getServerEventBridge()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:boolean setupRemoteChannelListener()"
        ]
    },
    "org.apache.cayenne.map.DataMap:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void <init>()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.MapLoader:org.apache.cayenne.map.DataMap loadDataMap(org.xml.sax.InputSource)",
            "org.apache.cayenne.util.NamedObjectFactory$DataMapFactory:java.lang.Object create(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$3300(org.apache.cayenne.map.MapLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$33:void execute()"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$EmbeddableFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Attribute getAttribute(java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.EmbeddableDescriptor createEmbeddableDescriptor(org.apache.cayenne.map.EmbeddedAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void createEmbeddedAttributeProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EmbeddedAttribute,org.apache.cayenne.map.ObjAttribute)"
        ]
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.Procedure getProcedure(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.Procedure getProcedure(java.lang.String)",
            "org.apache.cayenne.map.QueryLoader:java.lang.Object getRoot()",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureFactory:boolean isNameInUse(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.query.Query getQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.query.Query getQuery(java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory$SelectQueryFactory:boolean isNameInUse(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DbEntity getDbEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DbEntity getDbEntity(java.lang.String)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.Entity getTargetEntity()",
            "org.apache.cayenne.map.MapLoader:void processStartDbRelationship(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.DbEntity getDbEntity()",
            "org.apache.cayenne.map.QueryLoader:java.lang.Object getRoot()",
            "org.apache.cayenne.util.NamedObjectFactory$DbEntityFactory:boolean isNameInUse(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.Entity getTargetEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processIntermediatePathComponent()",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void appendJoin(java.lang.String,org.apache.cayenne.access.jdbc.EJBQLTableId,org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.FlattenedArcKey:org.apache.cayenne.map.DbEntity getJoinEntity()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseMergerFactory$2:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbJoin:org.apache.cayenne.map.DbAttribute getTarget()",
            "org.apache.cayenne.map.DbRelationship:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.Entity$PathIterator:org.apache.cayenne.util.CayenneMapEntry next()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateReadOnlyValue()",
            "org.apache.cayenne.map.PathComponentIterator:org.apache.cayenne.map.PathComponent next()",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.DbEntity getDbEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.ObjectResolver:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.reflect.ClassDescriptor,boolean)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter$ObjEntityComparator:int compare(org.apache.cayenne.map.ObjEntity,org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjAttribute:java.util.Iterator getDbPathIterator(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.DbEntity getDbEntity()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:java.util.Iterator resolvePathComponents(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.exp.Expression translateToDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.exp.Expression translateToRelatedEntity(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.query.BaseQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,java.lang.String)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void appendDeclaredRootDbEntity(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexQualifiers(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.Cayenne:java.util.Map extractObjectId(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeCreated(java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeIdChanged(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodePropertyChanged(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:void nodeRemoved(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntity(java.lang.String)",
            "org.apache.cayenne.map.MapLoader:void processStartObjRelationship(org.xml.sax.Attributes)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getSuperEntity()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.Entity getTargetEntity()",
            "org.apache.cayenne.map.QueryLoader:java.lang.Object getRoot()",
            "org.apache.cayenne.merge.CreateTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.reflect.PersistentDescriptorResultMetadata:void addObjectField(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory$ObjEntityFactory:boolean isNameInUse(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.EntityResult:org.apache.cayenne.map.ObjEntity getRootEntity(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getSuperEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allAttributes()",
            "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allRelationships()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:boolean isInherited()",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:int getLockType()",
            "org.apache.cayenne.map.ObjEntity:java.lang.String getSuperClassName()",
            "org.apache.cayenne.map.ObjEntity:java.lang.String getClientSuperClassName()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.DbEntity getDbEntity()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Attribute getAttribute(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Relationship getRelationship(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:void appendRelationships(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:boolean isSubentityOf(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjRelationship:boolean isQualifiedEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.Entity getTargetEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAggregateColumnTranslator$FieldPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processIntermediatePathComponent()",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.map.ClientObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.Entity$PathIterator:org.apache.cayenne.util.CayenneMapEntry next()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjRelationship:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship createReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.PathComponentIterator:org.apache.cayenne.map.PathComponent next()",
            "org.apache.cayenne.query.PrefetchSelectQuery:void <init>(org.apache.cayenne.query.SelectQuery,java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean excludingDefaultListeners(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)"
        ]
    },
    "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:boolean excludingSuperclassListeners(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship$JoinTransformers$2:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.map.DbRelationship$JoinTransformers$1:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.map.Entity$PathIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void compareColumns(java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:boolean compareTables(java.sql.DatabaseMetaData,java.util.Collection)",
            "org.apache.cayenne.access.dbsync.SchemaAnalyzer:void analyzeSchemas(java.util.List,java.sql.DatabaseMetaData)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialOrCreateSchemaStrategy:void generate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.jdbc.BatchAction:boolean hasGeneratedKeys()",
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,java.util.Map)",
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:void postprocessRow(java.sql.ResultSet,org.apache.cayenne.DataRow)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:java.lang.String processFlattenedRelationShip(java.lang.String,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitNotEquals(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:void processParameter(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLGroupByTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLIdColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:void visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:boolean visitIdentifier(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator:void addPrefetchedColumnsIfAny(java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoiningExpression(org.apache.cayenne.map.DbRelationship,java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:org.apache.cayenne.map.DbRelationship chooseDbRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingRelationship(org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLTableId:org.apache.cayenne.map.DbEntity getDbEntity(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)",
            "org.apache.cayenne.access.jdbc.EJBQLTranslationContext:java.util.List getIncomingRelationships(org.apache.cayenne.access.jdbc.EJBQLTableId)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator:boolean visitUpdateItem(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.DataObjectMatchTranslator:void setRelationship(org.apache.cayenne.map.DbRelationship,java.lang.String)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void applyQualifier(java.lang.StringBuffer,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoins(java.lang.Appendable)",
            "org.apache.cayenne.access.trans.JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.access.trans.JoinTreeNode:int size()",
            "org.apache.cayenne.access.trans.JoinTreeNode:org.apache.cayenne.access.trans.JoinTreeNode findOrCreateChild(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:java.lang.String createLOBSelectString(org.apache.cayenne.query.BatchQuery,java.util.List,java.util.List)",
            "org.apache.cayenne.access.trans.LOBInsertBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBUpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.OrderingTranslator:void doAppendPart()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initValues()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendObjectMatch()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void appendList(org.apache.cayenne.exp.Expression,org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendDbPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendLiteral(java.lang.Object,org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void processRelTermination(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.JoinType,java.lang.String)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendDbEntityColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:java.lang.String createSqlString(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.types.ExtendedTypeMap:java.lang.String[] getRegisteredTypeNames()",
            "org.apache.cayenne.access.types.ExtendedTypeMap:org.apache.cayenne.access.types.ExtendedType createType(java.lang.String)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void printExceptions(java.io.PrintWriter)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List processMixedResult(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:java.util.List singleObjectConversion(java.util.List)",
            "org.apache.cayenne.access.DataContext$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataContext:java.util.Collection uncommittedObjects()",
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.DataRow currentSnapshot(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.DataContextQueryAction:void invalidateLocally(org.apache.cayenne.access.ObjectStore,java.util.Iterator)",
            "org.apache.cayenne.access.DataDomain:void removeDataMap(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void removeDataNode(java.lang.String)",
            "org.apache.cayenne.access.DataDomain:void addNode(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DataDomain:void reindexNodes()",
            "org.apache.cayenne.access.DataDomain:void shutdown()",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainFlattenedBucket:void addFlattenedDelete(org.apache.cayenne.map.DbEntity,org.apache.cayenne.access.FlattenedArcKey)",
            "org.apache.cayenne.access.DataDomainFlushAction:void preprocess(org.apache.cayenne.access.DataContext,org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void processIndirectChanges(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:org.apache.cayenne.access.PrefetchProcessorNode toResultsTree(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.query.PrefetchTreeNode,java.util.List,int)",
            "org.apache.cayenne.access.DataDomainQueryAction$MixedConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.DataDomainQueryAction$ObjectConversionStrategy:void performPostLoadCallbacks(org.apache.cayenne.access.PrefetchProcessorNode,org.apache.cayenne.reflect.LifecycleCallbackRegistry)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()",
            "org.apache.cayenne.access.DataDomainSyncBucket:boolean containsClassDescriptor(java.util.Collection,org.apache.cayenne.reflect.ClassDescriptor)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataDomainSyncBucket:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:java.util.List updatedAttributes(org.apache.cayenne.map.DbEntity,java.util.Map)",
            "org.apache.cayenne.access.DataNode:void setDataMaps(java.util.Collection)",
            "org.apache.cayenne.access.DataNode:void performQueries(java.util.Collection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataPort:void processDelete(java.util.List)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.DataRowStore:void processDeletedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.DataRowStore:java.util.Map processUpdatedSnapshots(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void processUpdateDiffs(java.util.Map)",
            "org.apache.cayenne.access.DataRowUtils:boolean hasFK(org.apache.cayenne.map.DbRelationship,java.util.Map)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.DbGenerator:void buildStatements()",
            "org.apache.cayenne.access.DbGenerator:java.util.List configuredStatements()",
            "org.apache.cayenne.access.DbGenerator:void runGenerator(javax.sql.DataSource)",
            "org.apache.cayenne.access.DbGenerator:java.util.List createConstraintsQueries(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.access.DbGenerator:void prepareDbEntities(java.util.Collection)",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadObjEntities(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void postprocessMasterDbRelationship(org.apache.cayenne.map.DbRelationship,org.apache.cayenne.map.naming.ExportedKey)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.ExternalTransaction:void close()",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map buildJoinSnapshotForInsert(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.List buildJoinSnapshotsForDelete(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.FlattenedArcKey:java.util.Map eagerJoinSnapshot()",
            "org.apache.cayenne.access.HierarchicalObjectResolver$DisjointProcessor:void finishPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.access.HierarchicalObjectResolverNode:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean objectsAreEqual(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList$DataRowListHelper:boolean replacesObject(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.JoinedIdParentAttachementStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.ObjectDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.access.ObjectResolver:java.util.List objectsFromDataRows(java.util.List)",
            "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.ObjectId createObjectId(org.apache.cayenne.DataRow,org.apache.cayenne.map.ObjEntity,java.lang.String)",
            "org.apache.cayenne.access.ObjectStore:void objectsUnregistered(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void objectsRolledBack()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterPhantomCommit()",
            "org.apache.cayenne.access.ObjectStore:void postprocessAfterCommit(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:java.util.List objectsInState(int)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)",
            "org.apache.cayenne.access.ObjectStore:void processInvalidatedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStore:void processIndirectlyModifiedIDs(java.util.Collection)",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean validateAndCheckNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:boolean isNoop()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void resolveDiff()",
            "org.apache.cayenne.access.ObjectStoreGraphDiff:void preprocess(org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.OptimisticLockException:java.lang.String getMessage()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode$1:boolean visitRelationship(org.apache.cayenne.reflect.ArcProperty)",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorNode:void clearNullRelationships(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToNodeParents(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorNode:void connectToFaultedParents()",
            "org.apache.cayenne.access.QueryResult:int getFirstUpdateCount(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:int[] getFirstUpdateCounts(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getFirstRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getRows(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.QueryResult:java.util.List getUpdates(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.ResultScanParentAttachmentStrategy:void linkToParent(org.apache.cayenne.DataRow,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.ashwood.graph.IndegreeTopologicalSort:void <init>(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.MapDigraph$AllArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$IncomingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph$OutgoingArcIterator:java.lang.Object next()",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean addAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeAllVertices(java.util.Collection)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:boolean removeIncoming(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.MapDigraph:int incomingSize(java.lang.Object)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:org.apache.cayenne.ashwood.graph.Digraph contract(org.apache.cayenne.ashwood.graph.Digraph)",
            "org.apache.cayenne.ashwood.graph.StrongConnection:java.lang.Object nextDFSRoot()",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void doIndexSorter()",
            "org.apache.cayenne.cache.MapQueryCache:void removeGroup(java.lang.String)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:void shutdown()",
            "org.apache.cayenne.configuration.server.ServerRuntime:javax.sql.DataSource getDataSource(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.configuration.DataChannelDescriptor:org.apache.cayenne.configuration.DataNodeDescriptor getNodeDescriptor(java.lang.String)",
            "org.apache.cayenne.configuration.DataNodeDescriptor:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.configuration.DefaultDataChannelDescriptorMerger:org.apache.cayenne.configuration.DataChannelDescriptor merge(org.apache.cayenne.configuration.DataChannelDescriptor[])",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionErrorNotification(java.sql.SQLException)",
            "org.apache.cayenne.conn.PooledConnectionImpl:void connectionClosedNotification()",
            "org.apache.cayenne.dba.db2.DB2Adapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.db2.DB2PkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.frontbase.FrontBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.ingres.IngresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.openbase.OpenBaseJoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String newIDString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createPKString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.openbase.OpenBasePkGenerator:java.lang.String createUniquePKIndexString(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendJoinSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifier(java.lang.Appendable,boolean)",
            "org.apache.cayenne.dba.oracle.Oracle8JoinStack:void appendQualifierSubtree(java.lang.Appendable,org.apache.cayenne.access.trans.JoinTreeNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:boolean updatesLOBColumns(org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:java.util.List dropAutoPkStatements(java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.sqlserver.SQLServerBatchAction:boolean expectsToOverrideIdentityColumns()",
            "org.apache.cayenne.dba.sqlserver.SQLServerProcedureAction$Observer:void flushResults(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.JdbcAdapter:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createTable(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:void createTableAppendPKClause(java.lang.StringBuffer,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createUniqueConstraint(org.apache.cayenne.map.DbEntity,java.util.Collection)",
            "org.apache.cayenne.dba.JdbcAdapter:java.lang.String createFkConstraint(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.dba.JdbcPkGenerator:void createAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.JdbcPkGenerator:java.util.List createAutoPkStatements(java.util.List)",
            "org.apache.cayenne.di.spi.DefaultListBuilder:org.apache.cayenne.di.ListBuilder addAll(java.util.Collection)",
            "org.apache.cayenne.di.spi.DefaultMapBuilder:org.apache.cayenne.di.MapBuilder putAll(java.util.Map)",
            "org.apache.cayenne.di.spi.DefaultScope:void <init>(java.lang.Class[])",
            "org.apache.cayenne.di.spi.DefaultScope:void addScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void removeScopeEventListener(java.lang.Object)",
            "org.apache.cayenne.di.spi.DefaultScope:void postScopeEvent(java.lang.Class,java.lang.Object[])",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()",
            "org.apache.cayenne.ejbql.parser.Compiler$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler$2:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.ejbql.parser.CompiledExpression compile(java.lang.String,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResultWithPrefetch(org.apache.cayenne.map.EntityResult,org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.ejbql.parser.Compiler:org.apache.cayenne.map.EntityResult compileEntityResult(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_add_error_token(int,int)",
            "org.apache.cayenne.event.DefaultEventManager:void shutdown()",
            "org.apache.cayenne.event.DefaultEventManager:boolean removeListener(java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void addInvocation(org.apache.cayenne.util.Invocation,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:boolean removeInvocations(java.util.Collection,java.lang.Object)",
            "org.apache.cayenne.event.DispatchQueue:void dispatchEvent(java.util.Collection,org.apache.cayenne.event.DefaultEventManager$Dispatch)",
            "org.apache.cayenne.event.EventBridge:void startup(org.apache.cayenne.event.EventManager,int,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.event.EventBridge:void shutdown()",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTAnd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTEqual:boolean evaluateImpl(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTIn:java.lang.Object evaluateNode(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTList:void setValues(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTOr:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.exp.parser.ASTScalar:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.Expression:java.util.Collection filter(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.graph.ChildDiffLoader:org.apache.cayenne.Persistent findObjectInCollection(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.CompoundDiff:boolean isNoop()",
            "org.apache.cayenne.graph.CompoundDiff:void apply(org.apache.cayenne.graph.GraphChangeHandler)",
            "org.apache.cayenne.graph.GraphDiffCompressor$CompressAction:org.apache.cayenne.graph.GraphDiff getCompressedDiff()",
            "org.apache.cayenne.log.CommonsJdbcEventLogger:void buildLog(java.lang.StringBuilder,java.lang.String,java.lang.String,java.util.List,java.util.List,boolean)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.lang.String formatQuery(java.lang.String)",
            "org.apache.cayenne.log.FormattedCommonsJdbcEventLogger:java.util.Map scanQuery(java.lang.String)",
            "org.apache.cayenne.map.CallbackMap:void printMethods(org.apache.cayenne.map.CallbackDescriptor,java.lang.String,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ClientEntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.ClientObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeDBRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void encodeOBJRelationshipsAsXML(java.util.Map,org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.DataMap:void mergeWithDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.map.DataMap:void addDefaultEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.DataMap:void removeDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.EntityListener getDefaultEntityListener(java.lang.String)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.ObjEntity getObjEntityForJavaClass(java.lang.String)",
            "org.apache.cayenne.map.DataMap:java.util.Collection getMappedEntities(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:void <init>(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.String translatePath(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void removeAttribute(java.lang.String)",
            "org.apache.cayenne.map.DbEntity:void dbEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.DbEntity:void handleAttributeUpdate(org.apache.cayenne.map.event.AttributeEvent)",
            "org.apache.cayenne.map.DbEntity:void dbRelationshipChanged(org.apache.cayenne.map.event.RelationshipEvent)",
            "org.apache.cayenne.map.DbEntity:boolean isFullReplacementIdAttached(org.apache.cayenne.ObjectId)",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship createReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.DbRelationship:boolean isToPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isFromPK()",
            "org.apache.cayenne.map.DbRelationship:boolean isValidForDepPk()",
            "org.apache.cayenne.map.DbRelationship:boolean isMandatory()",
            "org.apache.cayenne.map.DefaultEntityResultSegment:java.lang.String getColumnPath(java.lang.String)",
            "org.apache.cayenne.map.Embeddable:org.apache.cayenne.map.EmbeddableAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttributeForDbPath(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.exp.Expression,java.util.Map)",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.PathComponent lastPathComponent(org.apache.cayenne.map.PathComponent)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.map.ObjEntity entityMatchingRow(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendSubentities(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredAttributes(java.util.Collection)",
            "org.apache.cayenne.map.EntityInheritanceTree:void appendDeclaredRelationships(java.util.Collection)",
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void initCallbacks()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.EntityResolver getClientEntityResolver()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getDbEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getObjEntities()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getEmbeddables()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getResultSets()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getProcedures()",
            "org.apache.cayenne.map.EntityResolver:java.util.Collection getQueries()",
            "org.apache.cayenne.map.EntityResolver:void constructCache()",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.DataMap getDataMap(java.lang.String)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.reflect.ClassDescriptorMap getClassDescriptorMap()",
            "org.apache.cayenne.map.EntityResult:java.util.Map getDbFields(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)",
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()",
            "org.apache.cayenne.map.ObjEntity:void addEntityListener(org.apache.cayenne.map.EntityListener)",
            "org.apache.cayenne.map.ObjEntity:void removeEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.EntityListener getEntityListener(java.lang.String)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getMutablePrimaryKeys()",
            "org.apache.cayenne.map.ObjEntity:void appendAttributes(java.util.Map)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjAttribute getAttributeForDbAttribute(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.map.ObjEntity:java.util.Collection getPrimaryKeyNames()",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjRelationship getRelationshipForDbRelationship(org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getDbRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getValidRelationshipPath()",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)",
            "org.apache.cayenne.map.ObjRelationship:void recalculateToManyValue()",
            "org.apache.cayenne.map.Procedure:java.util.List getCallOutParameters()",
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.map.SQLResult:java.util.List getResolvedComponents(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.SQLTemplateBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.AbstractToModelToken:void synchronizeWithObjEntity(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:java.util.Collection objEntitiesMappedToDbEntity(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.DbRelationship,boolean)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.merge.DbMerger:void checkRows(java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToDrop(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.merge.DbMerger:java.util.Set upperCaseEntityNames(java.util.Collection)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbEntity findDbEntity(org.apache.cayenne.map.DataMap,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbAttribute findDbAttribute(org.apache.cayenne.map.DbEntity,java.lang.String)",
            "org.apache.cayenne.merge.DbMerger:org.apache.cayenne.map.DbRelationship findDbRelationship(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbRelationship)",
            "org.apache.cayenne.merge.DbMerger:boolean equalDbJoinCollections(java.util.Collection,java.util.Collection)",
            "org.apache.cayenne.merge.DropColumnToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DropTableToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.SetPrimaryKeyToDb:void appendAddNewPrimaryKeySQL(org.apache.cayenne.dba.DbAdapter,java.util.List)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void <init>(org.apache.cayenne.map.DbEntity,java.util.Collection,java.util.Collection,java.lang.String)",
            "org.apache.cayenne.merge.SetPrimaryKeyToModel:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.query.PrefetchTreeNode deepClone(org.apache.cayenne.query.PrefetchTreeNode,org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.BaseQueryMetadata:void addPrefetches(java.util.Collection,int)",
            "org.apache.cayenne.query.EJBQLQueryMetadata:boolean resolve(org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.EJBQLQuery)",
            "org.apache.cayenne.query.NamedQuery:java.util.Map normalizedParameters()",
            "org.apache.cayenne.query.NamedQuery:boolean equals(java.lang.Object)",
            "org.apache.cayenne.query.PrefetchTreeNode:void traverse(org.apache.cayenne.query.PrefetchProcessor)",
            "org.apache.cayenne.query.PrefetchTreeNode:org.apache.cayenne.query.PrefetchTreeNode getChild(java.lang.String)",
            "org.apache.cayenne.query.PrefetchTreeNode:java.lang.Object readResolve()",
            "org.apache.cayenne.query.ProcedureQueryMetadata:void resolve(java.lang.Object,java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.ProcedureQuery)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.reflect.IdMapKeyAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(java.util.Collection)",
            "org.apache.cayenne.reflect.LifecycleCallbackEventHandler:void performCallbacks(org.apache.cayenne.Persistent,java.lang.Class)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Object)",
            "org.apache.cayenne.reflect.LifecycleCallbackRegistry:java.util.Collection getAnnotatedEntities(java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void injectValueHolders(java.lang.Object)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitSuperProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitDeclaredProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptor:boolean visitAllProperties(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.ClassDescriptor getDescriptor(org.apache.cayenne.map.ObjEntity,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexSubclassDescriptors(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory:void indexRootDbEntities(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.EntityInheritanceTree)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:java.lang.Object getValue(java.lang.Object)",
            "org.apache.cayenne.reflect.PropertyUtils$NestedBeanAccessor:void setValue(java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.remote.hessian.service.ServerDataRowSerializer:void writeObject(java.lang.Object,com.caucho.hessian.io.AbstractHessianOutput)",
            "org.apache.cayenne.remote.ClientChannel:void processMixedResult(org.apache.cayenne.map.EntityResolver,java.util.List,org.apache.cayenne.util.DeepMergeOperation,java.util.List)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:boolean containsAll(java.util.Collection)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateDataMap(org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntities(java.util.Collection)",
            "org.apache.cayenne.util.EntityMergeSupport:boolean synchronizeWithDbEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getMeaningfulFKs(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getAttributesToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.Collection getIncomingRelationships(org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.util.EntityMergeSupport:java.util.List getRelationshipsToAdd(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.util.NamedObjectFactory$DataNodeDescriptorFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory$ProcedureParameterFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void interceptObjectConversion()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.PersistentObjectList:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectList:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:java.util.Map indexCollection(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectMap:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void mergeLocalChanges(java.util.List)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessAdd(java.util.Collection)",
            "org.apache.cayenne.util.PersistentObjectSet:void postprocessRemove(java.util.Collection)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.util.ResourceLocator:java.net.URL findResource(java.lang.String)",
            "org.apache.cayenne.util.Util:java.util.Iterator sortedIterator(java.util.Iterator,java.util.Comparator)",
            "org.apache.cayenne.util.Util:int hashCode(java.util.Collection)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)",
            "org.apache.cayenne.validation.ValidationResult:java.util.List getFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:boolean hasFailures(java.lang.Object)",
            "org.apache.cayenne.validation.ValidationResult:java.lang.String toString()",
            "org.apache.cayenne.xml.SerializableEntity:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.xml.SerializableEntity:void encodeObject(org.apache.cayenne.xml.XMLEncoder,java.lang.Object,boolean)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.Collection decodeCollection(org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLDecoder:java.util.List decodeList(java.io.Reader,java.lang.String,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLEncoder:void encodeCollection(java.lang.String,java.util.Collection,boolean)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void <init>(java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.Object decode(org.w3c.dom.Element,org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:java.lang.String getPropertyMappingName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cayenne.xml.XMLMappingDescriptor:void decodeProperty(java.lang.Object,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cayenne.xml.XMLUtil:java.util.List replaceParent(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.cayenne.BaseContext:void prepareForAccess(org.apache.cayenne.Persistent,java.lang.String,boolean)",
            "org.apache.cayenne.BaseContext:void deleteObjects(java.util.Collection)",
            "org.apache.cayenne.Cayenne:java.lang.Object readNestedProperty(java.lang.Object,java.lang.String)",
            "org.apache.cayenne.Cayenne:java.lang.Object pkForObject(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.String,java.lang.Object)",
            "org.apache.cayenne.Cayenne:org.apache.cayenne.ObjectId buildId(org.apache.cayenne.ObjectContext,java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.CayenneContext:org.apache.cayenne.graph.GraphDiff doCommitChanges(boolean)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTarget(org.apache.cayenne.reflect.ToManyMapProperty,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextGraphManager:void reset()",
            "org.apache.cayenne.CayenneContextQueryAction:void invalidateLocally(org.apache.cayenne.CayenneContextGraphManager,java.util.Iterator)",
            "org.apache.cayenne.CayenneDataObject:void appendProperties(java.lang.StringBuffer)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.CayenneDataObject:void encodeAsXML(org.apache.cayenne.xml.XMLEncoder)",
            "org.apache.cayenne.CayenneDataObject:void decodeFromXML(org.apache.cayenne.xml.XMLDecoder)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow applyDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.DataRow:org.apache.cayenne.DataRow createDiff(org.apache.cayenne.DataRow)",
            "org.apache.cayenne.ObjectContextChangeLog:void unregisterNode(java.lang.Object)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)",
            "org.apache.cayenne.ObjectContextStateLog:void graphCommitted()",
            "org.apache.cayenne.ObjectContextStateLog:void graphReverted()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes()",
            "org.apache.cayenne.ObjectContextStateLog:java.util.Collection dirtyNodes(int)",
            "org.apache.cayenne.ObjectId:void <init>(java.lang.String,java.util.Map)",
            "org.apache.cayenne.ObjectId:boolean equals(java.lang.Object)",
            "org.apache.cayenne.ObjectId:java.lang.String toString()"
        ]
    },
    "org.apache.cayenne.merge.SetValueForNullToDb:java.util.List createSql(org.apache.cayenne.dba.DbAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.merge.AbstractToDbToken:void execute(org.apache.cayenne.merge.MergerContext)",
            "org.apache.cayenne.merge.DbMerger:void checkRelationshipsToAdd(org.apache.cayenne.dba.DbAdapter,java.util.List,org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.map.EjbqlBuilder:org.apache.cayenne.query.Query getQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void processEndQuery()"
        ]
    },
    "org.apache.cayenne.query.NamedQuery:void initMetadata(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.query.ProcedureQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:void initMetadata(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.ProcedureQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)"
        ]
    },
    "org.apache.cayenne.query.SelectQueryMetadata:void copyFromInfo(org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:void initMetadata(org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map,boolean)"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.SQLTemplate queryWithParameters(java.util.Map[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.Query createQuery(java.util.Map)"
        ]
    },
    "org.apache.cayenne.access.jdbc.SQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.dba.oracle.OracleSQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.dba.JdbcActionBuilder:org.apache.cayenne.query.SQLAction sqlAction(org.apache.cayenne.query.SQLTemplate)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleSQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleActionBuilder:org.apache.cayenne.query.SQLAction sqlAction(org.apache.cayenne.query.SQLTemplate)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$JoinVisitor:boolean visitIdentificationVariable(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIdentificationVariable:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.reflect.BaseArcProperty:org.apache.cayenne.reflect.ArcProperty getComplimentaryReverseArc()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.graph.ChildDiffLoader$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.graph.ChildDiffLoader$3:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.reflect.BaseArcProperty:void setReverse(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.util.Util:void setReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.util.Util:void unsetReverse(org.apache.cayenne.Persistent,java.lang.String,org.apache.cayenne.Persistent)",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.reflect.PersistentDescriptorFactory:org.apache.cayenne.reflect.Accessor createMapKeyAccessor(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList$1:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter$ObjEntityComparator:int compare(org.apache.cayenne.map.ObjEntity,org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.util.IndexPropertyList:int getIndexValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.IndexPropertyList:java.lang.Object set(int,java.lang.Object)",
            "org.apache.cayenne.util.IndexPropertyList:int calculateIndexValue(int)",
            "org.apache.cayenne.util.IndexPropertyList:void shift(int,int)"
        ]
    },
    "org.apache.cayenne.remote.service.HttpRemoteService:void <init>(org.apache.cayenne.configuration.ObjectContextFactory,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.hessian.service.HessianService:void <init>(org.apache.cayenne.configuration.ObjectContextFactory,java.util.Map)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean isFault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.access.DataDomainSyncBucket:void postprocess()",
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.CayenneContextGraphManager:void remapTargets()",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToOneProperty:boolean isFault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowUtils:boolean isToOneTargetModified(org.apache.cayenne.reflect.ArcProperty,org.apache.cayenne.Persistent,org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.util.DeepMergeOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.util.ObjectDetachOperation$1:boolean visitToOne(org.apache.cayenne.reflect.ToOneProperty)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssembler:void setQuery(org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.frontbase.FrontBaseActionBuilder$1:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.hsqldb.HSQLSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.mysql.MySQLSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.openbase.OpenBaseActionBuilder$1:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.oracle.Oracle8SelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.oracle.OracleSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.postgres.PostgresSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssembler:void setEntityResolver(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.frontbase.FrontBaseActionBuilder$1:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.hsqldb.HSQLSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.mysql.MySQLSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.openbase.OpenBaseActionBuilder$1:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.oracle.Oracle8SelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.oracle.OracleSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.postgres.PostgresSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ProcedureAction:org.apache.cayenne.map.Procedure getProcedure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.ProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.dba.oracle.OracleProcedureAction:void readProcedureOutParameters(java.sql.CallableStatement,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.trans.ProcedureTranslator:org.apache.cayenne.map.Procedure getProcedure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void initStatement(java.sql.CallableStatement)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBProcedureTranslator:java.lang.String createSqlString()"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.util.Collection getRelationships()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:boolean isPropagated(org.apache.cayenne.map.DbAttribute)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.map.DataMap:void removeDbEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DataMap:void removeObjEntity(java.lang.String,boolean)",
            "org.apache.cayenne.map.DbAttribute:boolean isForeignKey()",
            "org.apache.cayenne.map.DbRelationship:org.apache.cayenne.map.DbRelationship getReverseRelationship()",
            "org.apache.cayenne.map.Entity:org.apache.cayenne.map.Relationship getAnyRelationship(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.EntityInheritanceTree:java.util.Collection allRelationships()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.ObjEntity:void clearDbMapping()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.util.DeleteRuleUpdater:void updateObjEntity(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.CayenneDataObject:void validateForSave(org.apache.cayenne.validation.ValidationResult)",
            "org.apache.cayenne.ObjectContextDeleteAction:void processDeleteRules(org.apache.cayenne.Persistent,int)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()"
        ]
    },
    "org.apache.cayenne.xml.XMLUtil:org.w3c.dom.Element getChild(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Object decodeObject(java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.String decodeString(java.lang.String)"
        ]
    },
    "org.apache.cayenne.CayenneContext:java.util.Collection uncommittedObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContext:java.util.Collection deletedObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContext:java.util.Collection modifiedObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.CayenneContext:java.util.Collection newObjects()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.cache.OSQueryCacheFactory:org.apache.cayenne.cache.QueryCache getQueryCache(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContextMergeHandler$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.DataRowUtils$1:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.CayenneContextQueryAction$2:boolean visitToMany(org.apache.cayenne.reflect.ToManyProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)",
            "org.apache.cayenne.reflect.BaseToManyProperty:boolean visit(org.apache.cayenne.reflect.PropertyVisitor)"
        ]
    },
    "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.SelectQuery queryWithParameters(java.util.Map)"
        ]
    },
    "org.apache.cayenne.remote.hessian.HessianConnection:void beforeSendMessage(org.apache.cayenne.remote.ClientMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.BaseConnection:java.lang.Object sendMessage(org.apache.cayenne.remote.ClientMessage)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSelect:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLDelete:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLUpdate:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLDbPath:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitIn(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLIn:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLIn:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSubselect:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLGroupBy:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLHaving:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLOrderBy:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseEJBQLSubselectTranslator:boolean visitSelectExpressions(org.apache.cayenne.ejbql.EJBQLExpression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLSelectExpressions:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSelectExpressions:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLUpdateField:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLUpdateField:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSelectExpression:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLFromItem:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLFromTranslator:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)",
            "org.apache.cayenne.ejbql.parser.Compiler$FromItemVisitor:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLAbs:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLAdd:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLAnd:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLBetween:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLConcat:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLDivide:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLGreaterOrEqual:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLGreaterThan:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLIn:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLIsNull:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLLength:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLLessOrEqual:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLLessThan:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLLocate:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLLower:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLMod:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLMultiply:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLOr:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSqrt:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSubstring:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSubtract:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTrim:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLUpper:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void execute()",
            "org.apache.cayenne.access.DataDomainQueryAction:void runQuery()",
            "org.apache.cayenne.query.IndirectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryChain:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.RefreshQuery$1:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)"
        ]
    },
    "org.apache.cayenne.configuration.server.XMLPoolingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()",
            "org.apache.cayenne.configuration.server.DelegatingDataSourceFactory:javax.sql.DataSource getDataSource(org.apache.cayenne.configuration.DataNodeDescriptor)"
        ]
    },
    "org.apache.cayenne.conn.PoolManager:void <init>(java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.cayenne.configuration.CayenneRuntime:void <init>(org.apache.cayenne.di.Module[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientRuntime:void <init>(java.util.Map,java.util.Collection)",
            "org.apache.cayenne.configuration.rop.client.ClientRuntime:void <init>(java.util.Map,org.apache.cayenne.di.Module[])",
            "org.apache.cayenne.configuration.server.ServerRuntime:void <init>(java.lang.String,org.apache.cayenne.di.Module[])",
            "org.apache.cayenne.configuration.server.ServerRuntime:void <init>(java.lang.String[],org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.di.spi.Binding:void <init>(org.apache.cayenne.di.Provider,org.apache.cayenne.di.Scope)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void putBinding(org.apache.cayenne.di.Key,org.apache.cayenne.di.Provider)"
        ]
    },
    "org.apache.cayenne.di.spi.Binding:void changeScope(org.apache.cayenne.di.Scope)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.di.spi.DefaultInjector:void changeBindingScope(org.apache.cayenne.di.Key,org.apache.cayenne.di.Scope)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitInnerFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLInnerFetchJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOuterFetchJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLOuterFetchJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_156()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_60()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_155()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_60()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_154()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_60()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_31()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_31(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_94()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_110()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_44()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_38()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_38(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_101()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_37()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_37(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_36()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_36(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_99()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_113()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_45()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_34()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_34(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_97()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_35()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_35(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_98()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_39()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_181()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_29()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_180()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_41(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_43()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_33()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_96()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.ParseException generateParseException()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_40(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_39(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_28(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_term()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_38()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_28()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_37()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_29(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_27(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_37()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_93()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_27()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_36()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_34()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_91()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_38()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_26()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_26(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_185()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_61()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_22(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_25()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_25(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_184()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_61()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_24()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_24(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_183()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_61()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_310()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_286()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_309()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_286()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_308()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_286()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_307()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_286()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_311()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_286()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_18()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_18(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_332()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_329()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_272()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_157()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_273()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_157()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_61()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_247()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_246()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_245()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_114()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_41()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_222()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_216()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_53()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_126()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_259()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_187()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_111()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_65()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_59()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_179()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_86()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_159()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_63()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_158()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_63()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_279()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_188()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_73()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_26()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_280()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_188()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_79()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_28()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_85()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_31()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_61()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_61(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_299()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_284()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_300()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_284()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_70()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_21()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_69()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_21()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_5()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_5(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_167()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_68()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_7()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_7(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_1()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_1(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_295()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_274()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_4()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_4(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_166()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_68()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_20()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_2()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_8()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_296()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_163()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_67()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_298()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_282()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_121()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_48()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_90()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_33()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_88()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_32()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_20()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_20(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_334()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_329()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_314()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_293()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_83()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_30()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_6()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_6(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_164()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_67()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_160()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_64()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_176()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_77()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_306()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_285()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_305()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_285()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_304()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_285()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_303()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_285()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_302()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_285()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_301()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_285()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_60(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim_specification()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_266()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_175()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_59(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_265()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_175()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_264()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_175()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_263()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_175()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_262()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_175()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_142()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_225()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_223()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_57()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_56()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_56(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_81()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_29()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_139()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_219()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_217()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_56()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_53(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_26()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_10()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_124()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_52(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_52()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_41()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_237()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_235()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_233()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_231()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_229()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_227()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_58()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_252()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_162()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_330()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_327()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_171()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_71()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_51(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_170()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_71()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_72()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_25()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_58()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_47()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_107()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_54()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_103()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_43()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_59()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_48()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_108()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_57()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_46()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_106()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_56()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_45()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_105()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_55()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_104()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_44()"
        ]
    },
    "org.apache.cayenne.util.EventUtil:void listenForSubjects(org.apache.cayenne.event.EventManager,org.apache.cayenne.DataChannelListener,java.lang.Object,org.apache.cayenne.event.EventSubject[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EventUtil:boolean listenForChannelEvents(org.apache.cayenne.DataChannel,org.apache.cayenne.DataChannelListener)",
            "org.apache.cayenne.util.EventUtil:boolean listenForChannelEvents(org.apache.cayenne.event.EventManager,org.apache.cayenne.DataChannelListener)"
        ]
    },
    "org.apache.cayenne.access.DataRowStore:void startListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataRowStore:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.access.DataRowStore:void setEventManager(org.apache.cayenne.event.EventManager)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void setDataRowCache(org.apache.cayenne.access.DataRowStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void readObject(java.io.ObjectInputStream)",
            "org.apache.cayenne.access.ObjectStore:void <init>(org.apache.cayenne.access.DataRowStore,java.util.Map)",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.DataRowStore getDataRowCache()"
        ]
    },
    "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection,boolean,org.apache.cayenne.event.EventManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.ClientChannel:void <init>(org.apache.cayenne.remote.ClientConnection,boolean)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$12:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$23:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$15:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$50:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$51:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.ProcedureQuery:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SelectQuery:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addDefaultListener(org.apache.cayenne.LifecycleListener)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.reflect.LifecycleCallbackRegistry:void addListener(java.lang.Class,org.apache.cayenne.LifecycleListener)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.ProcedureQuery:void removePrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.query.SelectQuery:void removePrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void removePrefetch(java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:void removePrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.JdbcEJBQLTranslatorFactory:org.apache.cayenne.ejbql.EJBQLExpressionVisitor getFromTranslator(org.apache.cayenne.access.jdbc.EJBQLTranslationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDeleteTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLUpdateTranslator:boolean visitFrom(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLIntegerLiteral:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLDecimalLiteral:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLBooleanLiteral:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.SelectTranslator:void appendColumn(java.util.List,org.apache.cayenne.map.ObjAttribute,org.apache.cayenne.map.DbAttribute,java.util.Set,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.ColumnDescriptor:void <init>(java.sql.ResultSetMetaData,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BatchAction:void processGeneratedKeys(java.sql.Statement,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.ColumnDescriptor getColumnDescriptor(java.lang.String,org.apache.cayenne.access.jdbc.ColumnDescriptor[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.ColumnDescriptor[] mergeResultSetAndPresetColumns()"
        ]
    },
    "org.apache.cayenne.dba.db2.DB2Adapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void setInParam(java.sql.CallableStatement,org.apache.cayenne.map.ProcedureParameter,java.lang.Object,int)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.derby.DerbyAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void setInParam(java.sql.CallableStatement,org.apache.cayenne.map.ProcedureParameter,java.lang.Object,int)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.dba.sybase.SybaseAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SoftDeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void bind(java.sql.PreparedStatement,org.apache.cayenne.access.jdbc.ParameterBinding[])",
            "org.apache.cayenne.access.trans.BatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.DeleteBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.InsertBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.LOBBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:void setInParam(java.sql.CallableStatement,org.apache.cayenne.map.ProcedureParameter,java.lang.Object,int)",
            "org.apache.cayenne.access.trans.QueryAssembler:void initStatement(java.sql.PreparedStatement)",
            "org.apache.cayenne.access.trans.UpdateBatchQueryBuilder:void bindParameters(java.sql.PreparedStatement,org.apache.cayenne.query.BatchQuery)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.AutoAdapter:void bindParameter(java.sql.PreparedStatement,java.lang.Object,int,int,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EntityRowReader:java.lang.Object readRow(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.CompoundRowReader:java.lang.Object[] readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.access.jdbc.FullRowReader:java.lang.Object readRow(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.CompoundRowReader:java.lang.Object[] readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.access.jdbc.CompoundRowReader:java.lang.Object[] readRow(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.CompoundRowReader:java.lang.Object readRow(java.sql.ResultSet)"
        ]
    },
    "org.apache.cayenne.access.jdbc.JDBCResultIterator:java.lang.Object nextRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextUniqueRow()",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:java.util.List allRows()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void checkOffset()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:java.lang.Object nextRow()",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.map.MapLoader$3:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBinder:org.apache.cayenne.di.ListBuilder bindList(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.ServerModule:void configure(org.apache.cayenne.di.Binder)"
        ]
    },
    "org.apache.cayenne.di.spi.DefaultBinder:org.apache.cayenne.di.MapBuilder bindMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientModule:void configure(org.apache.cayenne.di.Binder)",
            "org.apache.cayenne.configuration.rop.server.ROPServerModule:void configure(org.apache.cayenne.di.Binder)",
            "org.apache.cayenne.configuration.server.ServerModule:void configure(org.apache.cayenne.di.Binder)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitFromItem(org.apache.cayenne.ejbql.parser.EJBQLFromItem,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLFromItem:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitInnerJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLInnerJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.Compiler$CompilationVisitor:boolean visitOuterJoin(org.apache.cayenne.ejbql.parser.EJBQLJoin)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLOuterJoin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.event.DefaultEventManager$Dispatch:void fire()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.event.DefaultEventManager$DispatchThread:void run()"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataRowStore getSharedSnapshotCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void <init>(org.apache.cayenne.DataChannel,org.apache.cayenne.access.ObjectStore)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.ObjectStore:org.apache.cayenne.access.DataRowStore getDataRowCache()",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createFromGenericChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.configuration.server.DataContextFactory:org.apache.cayenne.ObjectContext createdFromDataDomain(org.apache.cayenne.access.DataDomain)"
        ]
    },
    "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataRowStore nonNullSharedSnapshotCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataContext createDataContext(boolean)"
        ]
    },
    "org.apache.cayenne.remote.service.BaseRemoteService:org.apache.cayenne.remote.RemoteSession createRemoteSession(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.remote.service.ServerSession createServerSession()",
            "org.apache.cayenne.remote.service.HttpRemoteService:org.apache.cayenne.remote.service.ServerSession createServerSession(java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.EventUtil:boolean listenForChannelEvents(org.apache.cayenne.DataChannel,org.apache.cayenne.DataChannelListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:void attachToChannel(org.apache.cayenne.DataChannel)",
            "org.apache.cayenne.CayenneContext:void attachToChannel(org.apache.cayenne.DataChannel)"
        ]
    },
    "org.apache.cayenne.util.EventUtil:boolean listenForChannelEvents(org.apache.cayenne.event.EventManager,org.apache.cayenne.DataChannelListener)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataContext:void fireDataChannelChanged(java.lang.Object,org.apache.cayenne.graph.GraphDiff)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.graph.GraphDiff onContextFlush(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,boolean)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.DataContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.access.ObjectStore:void processSnapshotEvent(org.apache.cayenne.access.event.SnapshotEvent)"
        ]
    },
    "org.apache.cayenne.CayenneContextMergeHandler:void repostAfterMerge(org.apache.cayenne.graph.GraphEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.CayenneContextMergeHandler:void graphChanged(org.apache.cayenne.graph.GraphEvent)",
            "org.apache.cayenne.CayenneContextMergeHandler:void graphFlushed(org.apache.cayenne.graph.GraphEvent)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$6:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute makeObjAttribute(org.apache.cayenne.map.EmbeddableAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EmbeddedAttribute:org.apache.cayenne.map.ObjAttribute getAttribute(java.lang.String)",
            "org.apache.cayenne.map.EmbeddedAttribute:java.util.Collection getAttributes()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$400(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$5:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$47:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.DistinctResultIterator:java.util.List allRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.jdbc.LimitResultIterator:void checkOffset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void <init>(org.apache.cayenne.access.ResultIterator,int,int)"
        ]
    },
    "org.apache.cayenne.access.jdbc.LimitResultIterator:java.lang.Object nextRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextUniqueRow()",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void checkOffset()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:java.util.List allRows()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:java.lang.Object nextRow()",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.access.TransactionResultIteratorDecorator:java.lang.Object nextRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextUniqueRow()",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void checkNextRowWithUniqueId()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void checkOffset()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:java.lang.Object nextRow()",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:java.util.List allRows()",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.access.jdbc.LimitResultIterator:void skipRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void skipRow()",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void skipRow()"
        ]
    },
    "org.apache.cayenne.access.TransactionResultIteratorDecorator:void skipRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void skipRow()",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void skipRow()"
        ]
    },
    "org.apache.cayenne.map.MapLoader$24:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$25:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$26:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$27:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$28:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$29:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$30:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$31:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.dba.AutoAdapter:void <init>(javax.sql.DataSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.AshwoodEntitySorter:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.JDBCResultIterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void close()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void close()",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void close()"
        ]
    },
    "org.apache.cayenne.conn.DriverDataSource:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.PoolDataSource:void <init>(java.lang.String,java.lang.String)",
            "org.apache.cayenne.conn.PoolManager:void <init>(java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,org.apache.cayenne.log.JdbcEventLogger)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$1200(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$13:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLUpdateItemTranslator$1:boolean visitUpdateField(org.apache.cayenne.ejbql.EJBQLExpression,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateField:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)",
            "org.apache.cayenne.ejbql.parser.EJBQLUpdateField:boolean visitChild(org.apache.cayenne.ejbql.EJBQLExpressionVisitor,int)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLCount:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLAverage:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLMax:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLMin:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLSum:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.reflect.generic.DataObjectToManyMapProperty:void <init>(org.apache.cayenne.map.ObjRelationship,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.Fault,org.apache.cayenne.reflect.Accessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.generic.DataObjectDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTBetween:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression betweenExp(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression betweenDbExp(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTEqual:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.lang.String,java.lang.Object[])",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTGreater:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterDbExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTGreaterOrEqual:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterOrEqualExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterOrEqualDbExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLess:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessDbExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLessOrEqual:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessOrEqualExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessOrEqualDbExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLike:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeDbExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLike:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeDbExp(java.lang.String,java.lang.Object,char)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLikeIgnoreCase:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseDbExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTLikeIgnoreCase:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseDbExp(java.lang.String,java.lang.Object,char)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotBetween:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notBetweenExp(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notBetweenDbExp(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotEqual:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression noMatchDbExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression noMatchExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotLike:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeDbExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotLike:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeDbExp(java.lang.String,java.lang.Object,char)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotLikeIgnoreCase:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseExp(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseDbExp(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNotLikeIgnoreCase:void <init>(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseExp(java.lang.String,java.lang.Object,char)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseDbExp(java.lang.String,java.lang.Object,char)"
        ]
    },
    "org.apache.cayenne.exp.parser.SimpleNode:org.apache.cayenne.exp.parser.Node wrapChild(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.lang.Object[])",
            "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.lang.Object[])",
            "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.lang.Object[])",
            "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.util.Collection)",
            "org.apache.cayenne.exp.parser.ASTNegate:void <init>(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.lang.Object[])",
            "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.exp.parser.SimpleNode:void setOperand(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression joinExp(int,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllDbExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAnyExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchAllExp(java.util.Map,int)",
            "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression joinExp(int,java.util.List)",
            "org.apache.cayenne.map.DbEntity$RelationshipPathConverter:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.Object transform(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.trans.JoinStack$JoinedDbEntityQualifierTransformer:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.access.trans.QualifierTranslator$DbEntityQualifierTransformer:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.access.SimpleIdIncrementalFaultList:org.apache.cayenne.exp.Expression buildIdQualifier(java.lang.Object)",
            "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression noMatchDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessOrEqualDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterOrEqualDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression betweenDbExp(java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notBetweenDbExp(java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeDbExp(java.lang.String,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeDbExp(java.lang.String,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseDbExp(java.lang.String,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseDbExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseDbExp(java.lang.String,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression matchExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression noMatchExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression lessOrEqualExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression greaterOrEqualExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression betweenExp(java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notBetweenExp(java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeExp(java.lang.String,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeExp(java.lang.String,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression likeIgnoreCaseExp(java.lang.String,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseExp(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.ExpressionFactory:org.apache.cayenne.exp.Expression notLikeIgnoreCaseExp(java.lang.String,java.lang.Object,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.MapLoader$14:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$46:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.DistinctResultIterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void close()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void close()",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void close()"
        ]
    },
    "org.apache.cayenne.access.jdbc.LimitResultIterator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.DistinctResultIterator:void close()",
            "org.apache.cayenne.access.jdbc.LimitResultIterator:void close()",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.util.DefaultOperationObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataPort:void processInsert(java.util.List)",
            "org.apache.cayenne.access.IncrementalFaultList:void fillIn(org.apache.cayenne.query.Query,java.util.List)",
            "org.apache.cayenne.access.TransactionResultIteratorDecorator:void close()"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:void clearWarnings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void clearWarnings()",
            "org.apache.cayenne.conn.ConnectionWrapper:void clearWarnings()",
            "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:void commit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.TransactionConnectionDecorator:void commit()",
            "org.apache.cayenne.conn.ConnectionWrapper:void sybaseAutoCommitPatch(java.sql.Connection,java.sql.SQLException,boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void commit()",
            "org.apache.cayenne.dba.derby.DerbyPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.conn.ConnectionWrapper:void sybaseAutoCommitPatch(java.sql.Connection,java.sql.SQLException,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.conn.ConnectionWrapper:void setAutoCommit(boolean)",
            "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()"
        ]
    },
    "org.apache.cayenne.access.InternalTransaction:void fixConnectionState(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.ExternalTransaction:boolean addConnection(java.lang.String,java.sql.Connection)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:boolean getAutoCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.InternalTransaction:void fixConnectionState(java.sql.Connection)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:boolean getAutoCommit()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean getAutoCommit()",
            "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.lang.String getCatalog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.lang.String getCatalog()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.lang.String getCatalog()"
        ]
    },
    "org.apache.cayenne.access.DbLoader:java.sql.DatabaseMetaData getMetaData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:java.util.List getCatalogs()",
            "org.apache.cayenne.access.DbLoader:java.util.List getSchemas()",
            "org.apache.cayenne.access.DbLoader:java.util.List getTableTypes()",
            "org.apache.cayenne.access.DbLoader:java.util.List getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])",
            "org.apache.cayenne.access.DbLoader:boolean loadDbEntities(org.apache.cayenne.map.DataMap,java.util.List)",
            "org.apache.cayenne.access.DbLoader:void loadDbRelationships(org.apache.cayenne.map.DbEntity,org.apache.cayenne.map.DataMap)",
            "org.apache.cayenne.access.DbLoader:void loadProceduresFromDB(java.lang.String,java.lang.String,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.DatabaseMetaData getMetaData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.dbsync.CreateIfNoSchemaStrategy:java.util.Map getNameTablesInDB(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.dbsync.ThrowOnPartialSchemaStrategy:void processSchemaUpdate(org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.access.DbGeneratorPostprocessor:void execute(java.sql.Connection)",
            "org.apache.cayenne.access.DbLoader:java.sql.DatabaseMetaData getMetaData()",
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.DatabaseMetaData getMetaData()",
            "org.apache.cayenne.configuration.server.DefaultDbAdapterFactory:org.apache.cayenne.dba.DbAdapter detectAdapter(org.apache.cayenne.configuration.DataNodeDescriptor,javax.sql.DataSource)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.DatabaseMetaData getMetaData()",
            "org.apache.cayenne.dba.AutoAdapter$1:org.apache.cayenne.dba.DbAdapter get()",
            "org.apache.cayenne.dba.JdbcPkGenerator:boolean autoPkTableExists(org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:int getTransactionIsolation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:int getTransactionIsolation()",
            "org.apache.cayenne.conn.ConnectionWrapper:int getTransactionIsolation()"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.SQLWarning getWarnings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.sql.SQLWarning getWarnings()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.sql.SQLWarning getWarnings()"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:boolean isClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection()",
            "org.apache.cayenne.access.DataNode$TransactionDataSource:java.sql.Connection getConnection(java.lang.String,java.lang.String)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:boolean isClosed()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean isClosed()"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:boolean isReadOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:boolean isReadOnly()",
            "org.apache.cayenne.conn.ConnectionWrapper:boolean isReadOnly()"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.lang.String nativeSQL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.lang.String nativeSQL(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:java.lang.String nativeSQL(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:void rollback()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.InternalTransaction:void processCommit()",
            "org.apache.cayenne.access.InternalTransaction:void processRollback()",
            "org.apache.cayenne.access.TransactionConnectionDecorator:void rollback()",
            "org.apache.cayenne.conn.ConnectionWrapper:void rollback()",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:void setAutoCommit(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.InternalTransaction:void fixConnectionState(java.sql.Connection)",
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setAutoCommit(boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void sybaseAutoCommitPatch(java.sql.Connection,java.sql.SQLException,boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setAutoCommit(boolean)",
            "org.apache.cayenne.conn.PooledConnectionImpl:java.sql.Connection getConnection()",
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:void setCatalog(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setCatalog(java.lang.String)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setCatalog(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:void setReadOnly(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setReadOnly(boolean)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setReadOnly(boolean)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:void setTransactionIsolation(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setTransactionIsolation(int)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setTransactionIsolation(int)"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:java.util.Map getTypeMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:java.util.Map getTypeMap()",
            "org.apache.cayenne.conn.ConnectionWrapper:java.util.Map getTypeMap()"
        ]
    },
    "org.apache.cayenne.access.TransactionConnectionDecorator:void setTypeMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.TransactionConnectionDecorator:void setTypeMap(java.util.Map)",
            "org.apache.cayenne.conn.ConnectionWrapper:void setTypeMap(java.util.Map)"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8Adapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.dba.JdbcAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeQueryAction:void runQuery(java.sql.Connection,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.oracle.Oracle8Adapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.JdbcAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.configuration.CayenneRuntime:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void destroy()",
            "org.apache.cayenne.configuration.web.CayenneFilter:void destroy()"
        ]
    },
    "org.apache.cayenne.access.DataDomain:void setSharedSnapshotCache(org.apache.cayenne.access.DataRowStore)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomain:void setEventManager(org.apache.cayenne.event.EventManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.server.DataDomainProvider:org.apache.cayenne.access.DataDomain createAndInitDataDomain()"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:java.lang.Object transform(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:void performTransformAndTypeOverride(org.apache.cayenne.access.jdbc.ColumnDescriptor[])",
            "org.apache.cayenne.access.DataDomain:java.lang.Object runInTransaction(org.apache.commons.collections.Transformer)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:java.util.Map createQualifierSnapshot(org.apache.cayenne.access.ObjectDiff)",
            "org.apache.cayenne.exp.Expression:java.lang.Object transformExpression(org.apache.commons.collections.Transformer)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTAdd:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTAnd:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTDivide:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTMultiply:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNegate:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTNot:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTOr:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTSubtract:java.lang.Object evaluateNode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.SimpleNode:java.lang.Object evaluate(java.lang.Object)"
        ]
    },
    "org.apache.cayenne.access.QueryLogger:void logQuery(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long getLongPrimaryKey(java.sql.Statement,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.mysql.MySQLPkGenerator:long longPkFromDatabase(org.apache.cayenne.access.DataNode,org.apache.cayenne.map.DbEntity)"
        ]
    },
    "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()"
        ]
    },
    "org.apache.cayenne.query.ObjectIdQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.QueryAssembler:org.apache.cayenne.map.ObjEntity getRootEntity()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.DefaultQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.DataRowPostProcessor:org.apache.cayenne.access.jdbc.DataRowPostProcessor createPostProcessor(org.apache.cayenne.access.trans.SelectTranslator)",
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendIdColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataDomainQueryAction$SingleObjectConversionStrategy:void convert(java.util.List)",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:void route(org.apache.cayenne.query.SelectQuery,org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.reflect.ClassDescriptor getClassDescriptor()"
        ]
    },
    "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.trans.QueryAssembler:java.util.Map getPathAliases()",
            "org.apache.cayenne.access.trans.QueryAssembler:void refreshMetadata()",
            "org.apache.cayenne.access.ClientServerChannelQueryAction:void <init>(org.apache.cayenne.access.ClientServerChannel,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataContextQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.DataDomainLegacyQueryAction:void <init>(org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.access.DataDomain,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRefreshQuery()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.dba.sqlserver.SQLServerSelectTranslator:void appendLimitAndOffsetClauses(java.lang.StringBuilder)",
            "org.apache.cayenne.map.DataMap:org.apache.cayenne.map.DataMap getClientDataMap(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.map.EntityResolver:org.apache.cayenne.map.Procedure lookupProcedure(org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.IndirectQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.query.RefreshQuery$1:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.QueryResponse onQuery(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RangeQuery:org.apache.cayenne.query.QueryMetadata getMetaData(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.RemoteIncrementalFaultList:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.util.ObjectContextQueryAction:void <init>(org.apache.cayenne.ObjectContext,org.apache.cayenne.ObjectContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.CayenneContextQueryAction:boolean interceptRefreshQuery()"
        ]
    },
    "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.map.ObjRelationship getRelationship(org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainQueryAction:boolean interceptRelationshipQuery()",
            "org.apache.cayenne.query.RelationshipQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.util.ObjectContextQueryAction:boolean interceptRelationshipQuery()"
        ]
    },
    "org.apache.cayenne.util.DeleteRuleUpdater:void objRelationshipAdded(org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.EntityMergeSupport:void fireRelationshipAdded(org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void setPrefetchTree(org.apache.cayenne.query.PrefetchTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:void setPrefetchTree(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction$FlushCallbackAction:void applyPreCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction$FlushCallbackAction:void applyPostCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.DataChannelSyncCallbackAction$RollbackCallbackAction:void applyPostCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.graph.GraphDiff onSyncNoFilters(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)",
            "org.apache.cayenne.remote.ClientChannel:org.apache.cayenne.graph.GraphDiff onSync(org.apache.cayenne.ObjectContext,org.apache.cayenne.graph.GraphDiff,int)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object makeObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object createObject(java.lang.Class,java.lang.Object)",
            "org.apache.cayenne.util.NamedObjectFactory:org.apache.cayenne.map.Relationship createRelationship(org.apache.cayenne.map.Entity,org.apache.cayenne.map.Entity,boolean)"
        ]
    },
    "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainSyncBucket:void groupObjEntitiesBySpannedDbEntities()"
        ]
    },
    "org.apache.cayenne.access.DbEntityClassDescriptor:org.apache.cayenne.map.ObjEntity getEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DataDomainDeleteBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainInsertBucket:void createPermIds(org.apache.cayenne.access.DbEntityClassDescriptor,java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)"
        ]
    },
    "org.apache.cayenne.access.ObjectResolver:org.apache.cayenne.map.ObjEntity getEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildRowMapping()",
            "org.apache.cayenne.access.PrefetchProcessorJointNode:void buildPKIndex()",
            "org.apache.cayenne.access.PrefetchProcessorTreeBuilder:boolean addNode(org.apache.cayenne.access.PrefetchProcessorNode)"
        ]
    },
    "org.apache.cayenne.query.BaseQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.QueryAssembler:org.apache.cayenne.map.ObjEntity getRootEntity()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.SelectQueryMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.query.SQLTemplateMetadata:boolean resolve(java.lang.Object,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.SQLTemplate)",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.query.RelationshipQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.QueryAssembler:org.apache.cayenne.map.ObjEntity getRootEntity()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.DefaultQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.reflect.BaseArcProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.BaseToManyProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)",
            "org.apache.cayenne.reflect.BaseToOneProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)"
        ]
    },
    "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression andExp(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:org.apache.cayenne.exp.Expression extractQualifier()",
            "org.apache.cayenne.access.OptimisticLockException:java.util.Map getFreshSnapshot(org.apache.cayenne.ObjectContext)",
            "org.apache.cayenne.query.QualifiedQuery:void andQualifier(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.exp.Expression:org.apache.cayenne.exp.Expression orExp(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:org.apache.cayenne.exp.Expression trimmedInExpression(org.apache.cayenne.exp.parser.ASTPath,java.lang.Object[],int)",
            "org.apache.cayenne.map.EntityInheritanceTree:org.apache.cayenne.exp.Expression qualifierForEntityAndSubclasses()",
            "org.apache.cayenne.query.QualifiedQuery:void orQualifier(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JavaCharStream:char readChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa1_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa2_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa3_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa4_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa5_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa6_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa7_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa8_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa9_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa10_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa11_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa12_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa13_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa14_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa15_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa16_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveNfa_0(int,int)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:org.apache.cayenne.ejbql.parser.Token getNextToken()",
            "org.apache.cayenne.ejbql.parser.JavaCharStream:char BeginToken()"
        ]
    },
    "org.apache.cayenne.exp.parser.JavaCharStream:char readChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa1_0(long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa2_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa3_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa4_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa5_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa6_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa7_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa8_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa9_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa10_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa11_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa12_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa13_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfaWithStates_0(int,int,int)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveNfa_0(int,int)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveNfa_1(int,int)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveNfa_2(int,int)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:org.apache.cayenne.exp.parser.Token getNextToken()",
            "org.apache.cayenne.exp.parser.JavaCharStream:char BeginToken()"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$4900(org.apache.cayenne.map.MapLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$49:void execute()"
        ]
    },
    "org.apache.cayenne.query.Ordering:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.DataMap:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.Ordering:java.lang.String toString()",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Map)",
            "org.apache.cayenne.util.XMLEncoder:void print(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.graph.FilterIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()",
            "org.apache.cayenne.ashwood.graph.ReversedIteration:org.apache.cayenne.ashwood.graph.ArcIterator arcIterator()"
        ]
    },
    "org.apache.cayenne.ashwood.AshwoodEntitySorter$ObjEntityComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ashwood.AshwoodEntitySorter$ObjEntityComparator:int compare(org.apache.cayenne.map.ObjEntity,org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.cache.MapQueryCacheProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.ClientChannelProvider:java.lang.Object get()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.LocalConnectionProvider:org.apache.cayenne.remote.ClientConnection get()",
            "org.apache.cayenne.dba.AutoAdapter:org.apache.cayenne.dba.DbAdapter loadAdapter()",
            "org.apache.cayenne.di.spi.CustomProvidersProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(java.lang.Class)",
            "org.apache.cayenne.di.spi.DefaultInjector:java.lang.Object getInstance(org.apache.cayenne.di.Key)",
            "org.apache.cayenne.di.spi.DefaultScopeProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.FieldInjectingProvider:java.lang.Object get()",
            "org.apache.cayenne.di.spi.ListProvider:java.util.List get()",
            "org.apache.cayenne.di.spi.MapProvider:java.util.Map get()"
        ]
    },
    "org.apache.cayenne.map.DataMap:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.db2.DB2PkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.dba.oracle.OraclePkGenerator:void dropAutoPk(org.apache.cayenne.access.DataNode,java.util.List)",
            "org.apache.cayenne.merge.DbMerger:java.util.List createMergeTokens(org.apache.cayenne.dba.DbAdapter,javax.sql.DataSource,org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$DataMapFactory:java.lang.Object create(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.Object makeObject(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$33:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$ProcedureFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$SelectQueryFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void processStartDbRelationship(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void access$1000(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$DbEntityFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:void processIntermediatePathComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLDbPathTranslator:boolean visitDbPath(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:java.util.Iterator getDbPathIterator(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getDbAttribute()",
            "org.apache.cayenne.map.ObjAttribute:org.apache.cayenne.map.DbAttribute getParentDbAttribute(org.apache.cayenne.map.ObjEntity)",
            "org.apache.cayenne.map.ObjAttribute:java.util.Iterator getDbPathIterator()"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.util.Iterator resolvePathComponents(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ASTPath:org.apache.cayenne.util.CayenneMapEntry evaluateEntityNode(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjRelationship:void refreshFromPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$ObjEntityFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:int getLockType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.ObjectDiff:void <init>(org.apache.cayenne.Persistent)",
            "org.apache.cayenne.map.ObjEntity:int getLockType()"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.lang.String getSuperClassName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:java.lang.String getClientSuperClassName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.ObjEntity getClientEntity()"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Relationship getRelationship(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitSize(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLConditionTranslator:boolean visitMemberOf(org.apache.cayenne.ejbql.EJBQLExpression)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void resolveJoin(boolean)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processIntermediatePathComponent()",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processLastPathComponent()",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DbLoader:java.lang.String uniqueRelName(org.apache.cayenne.map.Entity,java.lang.String)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.ashwood.AshwoodEntitySorter:void sortObjectsForEntity(org.apache.cayenne.map.ObjEntity,java.util.List,boolean)",
            "org.apache.cayenne.map.ClientObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()",
            "org.apache.cayenne.map.Entity$PathIterator:org.apache.cayenne.util.CayenneMapEntry next()",
            "org.apache.cayenne.map.EntityResolver:java.lang.String makeUniqueRelationshipName(org.apache.cayenne.map.Entity)",
            "org.apache.cayenne.map.ObjEntity:org.apache.cayenne.map.Relationship getRelationship(java.lang.String)",
            "org.apache.cayenne.map.PathComponentIterator:org.apache.cayenne.map.PathComponent next()",
            "org.apache.cayenne.reflect.BaseArcProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)",
            "org.apache.cayenne.util.NamedObjectFactory$ObjRelationshipFactory:boolean isNameInUse(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)",
            "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)"
        ]
    },
    "org.apache.cayenne.map.ObjEntity:boolean isSubentityOf(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjEntity:boolean isSubentityOf(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.map.ObjRelationship:boolean isQualifiedEntity(org.apache.cayenne.map.ObjEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.ObjRelationship:boolean isOptional()",
            "org.apache.cayenne.map.ObjRelationship:boolean isQualifiedEntity(org.apache.cayenne.map.ObjEntity)"
        ]
    },
    "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processIntermediatePathComponent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLPathAnaliserTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:boolean visitPath(org.apache.cayenne.ejbql.EJBQLExpression,int)"
        ]
    },
    "org.apache.cayenne.map.ClientObjRelationship:org.apache.cayenne.map.ObjRelationship getReverseRelationship()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.FlattenedArcKey:void <init>(org.apache.cayenne.ObjectId,org.apache.cayenne.ObjectId,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.map.ClientObjRelationship:org.apache.cayenne.map.Relationship getReverseRelationship()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()",
            "org.apache.cayenne.map.ObjEntity:void objEntityChanged(org.apache.cayenne.map.event.EntityEvent)",
            "org.apache.cayenne.map.ObjRelationship:java.lang.String getReverseRelationshipName()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.ObjRelationship getClientRelationship()",
            "org.apache.cayenne.map.ObjRelationship:org.apache.cayenne.map.Relationship getReverseRelationship()",
            "org.apache.cayenne.merge.AbstractToModelToken:void remove(org.apache.cayenne.merge.MergerContext,org.apache.cayenne.map.ObjRelationship,boolean)",
            "org.apache.cayenne.reflect.PersistentDescriptor:void indexAddedProperty(org.apache.cayenne.reflect.Property)",
            "org.apache.cayenne.util.RelationshipFault:void updateReverse(java.util.List)",
            "org.apache.cayenne.CayenneDataObject:void setReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)",
            "org.apache.cayenne.CayenneDataObject:void unsetReverseRelationship(java.lang.String,org.apache.cayenne.DataObject)"
        ]
    },
    "org.apache.cayenne.query.PrefetchSelectQuery:void <init>(org.apache.cayenne.query.SelectQuery,java.lang.String,org.apache.cayenne.map.ObjRelationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.SelectQueryPrefetchRouterAction:boolean startDisjointPrefetch(org.apache.cayenne.query.PrefetchTreeNode)"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.Query createQuery(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8SQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.Oracle8ActionBuilder:org.apache.cayenne.query.SQLAction sqlAction(org.apache.cayenne.query.SQLTemplate)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteSQLTemplateAction:void <init>(org.apache.cayenne.query.SQLTemplate,org.apache.cayenne.dba.JdbcAdapter,org.apache.cayenne.map.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.sqlite.SQLiteActionBuilder:org.apache.cayenne.query.SQLAction sqlAction(org.apache.cayenne.query.SQLTemplate)"
        ]
    },
    "org.apache.cayenne.dba.JdbcActionBuilder:org.apache.cayenne.query.SQLAction sqlAction(org.apache.cayenne.query.SQLTemplate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleActionBuilder:org.apache.cayenne.query.SQLAction sqlAction(org.apache.cayenne.query.SQLTemplate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.remote.hessian.service.HessianService:void <init>(org.apache.cayenne.configuration.ObjectContextFactory,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.SelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.frontbase.FrontBaseActionBuilder$1:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.hsqldb.HSQLSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.mysql.MySQLSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.openbase.OpenBaseActionBuilder$1:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.oracle.Oracle8SelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.oracle.OracleSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.postgres.PostgresSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.dba.sqlserver.SQLServerSelectAction:org.apache.cayenne.access.trans.SelectTranslator createTranslator(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.String decodeString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Boolean decodeBoolean(java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Double decodeDouble(java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Float decodeFloat(java.lang.String)",
            "org.apache.cayenne.xml.XMLDecoder:java.lang.Integer decodeInteger(java.lang.String)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.query.NamedQuery:org.apache.cayenne.query.Query createReplacementQuery(org.apache.cayenne.map.EntityResolver)",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.Query createQuery(java.util.Map)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLIn:boolean visitNode(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.SimpleNode:void visit(org.apache.cayenne.ejbql.EJBQLExpressionVisitor)"
        ]
    },
    "org.apache.cayenne.configuration.rop.client.ClientRuntime:void <init>(java.util.Map,org.apache.cayenne.di.Module[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.client.ClientLocalRuntime:void <init>(org.apache.cayenne.di.Injector,java.util.Map,java.util.Collection)",
            "org.apache.cayenne.configuration.rop.client.ClientLocalRuntime:void <init>(org.apache.cayenne.di.Injector,java.util.Map,org.apache.cayenne.di.Module[])"
        ]
    },
    "org.apache.cayenne.configuration.server.ServerRuntime:void <init>(java.lang.String,org.apache.cayenne.di.Module[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cayenne.configuration.web.CayenneFilter:void init(javax.servlet.FilterConfig)"
        ]
    },
    "org.apache.cayenne.configuration.server.ServerRuntime:void <init>(java.lang.String[],org.apache.cayenne.di.Module[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_60()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_238()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_236()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_234()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_232()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_230()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_228()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_202()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_200()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_198()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_196()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_194()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_192()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_226()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_50()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_224()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_49()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_220()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_214()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_212()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_218()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_210()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_208()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_243()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_206()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_241()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_204()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_31(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_30()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_92()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_38(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_37(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_36(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_34(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_35(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_181()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_91()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_33()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_33(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_96()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_26(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_25(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_24(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_286()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_313()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_258()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_18(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_114()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_45()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_259()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_170()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_111()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_44()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_86()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_31()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_63()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_120()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_115()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_110()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_281()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_84()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_80()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_239()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_57()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_78()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_82()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_123()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_255()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_188()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_189()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_113()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_28()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_12()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_215()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_31()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_42()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_116()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_119()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_48()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_47()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_45()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_23()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_89()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_21()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_87()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_19()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_333()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_16()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_15()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_312()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_169()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_168()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_23()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_19()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_22()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_321()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_58()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_297()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_62()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_55()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_54()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_74()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_76()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_256()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_61(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void numeric_literal()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_284()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_278()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_254()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_21()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_3()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_165()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_5(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_68()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_20()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_7(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_1(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_274()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_275()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_182()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_4(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_2()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_2(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_8()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_8(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_296()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_274()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_282()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_240()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_33()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_22()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_35()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_20(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_293()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_294()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_273()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_30()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_14()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_6(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_64()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_59()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_77()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_27()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_285()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_257()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_175()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_75()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_225()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_144()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_223()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_143()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_56(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_29()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_13()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_221()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_219()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_141()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_217()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_140()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_10()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_10(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_124()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_50()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_237()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_150()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_235()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_149()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_233()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_148()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_231()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_147()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_229()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_146()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_227()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_145()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_71()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_261()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_260()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_25()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_25()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_39()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_17()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_331()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_9()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_320()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_319()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_328()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_318()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_288()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_51()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_173()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_172()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_201()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_199()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_197()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_195()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_193()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_191()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_54()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_47()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_47(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_107()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_42()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_103()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_42()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_43()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_43(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_48()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_48(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_108()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_42()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_46()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_46(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_106()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_42()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_45()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_45(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_105()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_42()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_104()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_42()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_44()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_44(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void <init>(org.apache.cayenne.access.DataRowStore,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.NoSyncObjectStore:void <init>(org.apache.cayenne.access.DataRowStore,java.util.Map)",
            "org.apache.cayenne.access.ObjectStore:void <init>(org.apache.cayenne.access.DataRowStore)",
            "org.apache.cayenne.configuration.DefaultObjectStoreFactory:org.apache.cayenne.access.ObjectStore createObjectStore(org.apache.cayenne.access.DataRowStore)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.SelectQueryBuilder:org.apache.cayenne.query.Query getQuery()",
            "org.apache.cayenne.remote.IncrementalSelectQuery:org.apache.cayenne.query.PrefetchTreeNode addPrefetch(java.lang.String)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void removePrefetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void removePrefetch(java.lang.String)"
        ]
    },
    "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.ColumnDescriptor[] mergeResultSetAndPresetColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder:org.apache.cayenne.access.jdbc.RowDescriptor getDescriptor(org.apache.cayenne.access.types.ExtendedTypeMap)"
        ]
    },
    "org.apache.cayenne.access.jdbc.CompoundRowReader:java.lang.Object readRow(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.CompoundRowReader:java.lang.Object[] readRow(java.sql.ResultSet)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:java.lang.Object nextRow()"
        ]
    },
    "org.apache.cayenne.access.jdbc.JDBCResultIterator:java.util.List allRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.map.MapLoader$5:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.access.jdbc.LimitResultIterator:void <init>(org.apache.cayenne.access.ResultIterator,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)"
        ]
    },
    "org.apache.cayenne.access.jdbc.LimitResultIterator:java.util.List allRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseSQLAction:void readResultSet(java.sql.ResultSet,org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.Query,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:void processSelectResult(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.Connection,java.sql.Statement,java.sql.ResultSet,org.apache.cayenne.access.OperationObserver,long)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.access.TransactionResultIteratorDecorator:java.util.List allRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.SelectAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.access.DataDomainFlushObserver:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)",
            "org.apache.cayenne.access.DataDomainQueryAction:void nextGeneratedRows(org.apache.cayenne.query.Query,org.apache.cayenne.access.ResultIterator)"
        ]
    },
    "org.apache.cayenne.conn.PoolDataSource:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.map.MapLoader$13:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTAdd:void <init>(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTDivide:void <init>(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTMultiply:void <init>(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ASTNegate:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.oracle.OracleQualifierTranslator$INTrimmer:org.apache.cayenne.exp.Expression trimmedInExpression(org.apache.cayenne.exp.Expression,int)"
        ]
    },
    "org.apache.cayenne.exp.parser.ASTSubtract:void <init>(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.SimpleIdIncrementalFaultList:org.apache.cayenne.exp.Expression buildIdQualifier(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.IncrementalFaultList:void resolveInterval(int,int)"
        ]
    },
    "org.apache.cayenne.access.DbLoader:java.util.List getCatalogs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DbLoader:java.util.List getSchemas()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DbLoader:java.util.List getTableTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DbLoader:java.util.List getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DbLoader:org.apache.cayenne.map.DataMap loadDataMapFromDB(java.lang.String,java.lang.String,java.lang.String[],org.apache.cayenne.map.DataMap)"
        ]
    },
    "org.apache.cayenne.configuration.rop.server.ROPHessianServlet:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.web.CayenneFilter:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.jdbc.BaseRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.FullRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.IdRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssembler:org.apache.cayenne.map.ObjEntity getRootEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.QueryAssembler:org.apache.cayenne.map.ObjEntity getRootEntity()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.query.DefaultQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.dba.oracle.Oracle8SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.DataMap getDataMap()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.QueryAssembler:org.apache.cayenne.map.ObjEntity getRootEntity()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.QueryAssembler:org.apache.cayenne.map.ObjEntity getRootEntity()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BaseRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.SQLTemplateAction:org.apache.cayenne.access.jdbc.RowDescriptorBuilder configureRowDescriptorBuilder(org.apache.cayenne.access.jdbc.SQLStatement,java.sql.ResultSet)",
            "org.apache.cayenne.access.trans.QueryAssembler:org.apache.cayenne.map.ObjEntity getRootEntity()",
            "org.apache.cayenne.access.IncrementalFaultList:void <init>(org.apache.cayenne.access.DataContext,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.ObjEntity getObjEntity()"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory:org.apache.cayenne.map.Relationship createRelationship(org.apache.cayenne.map.Entity,org.apache.cayenne.map.Entity,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.access.DataDomainDBDiffBuilder:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomainInsertBucket:void appendQueriesInternal(java.util.Collection)",
            "org.apache.cayenne.access.DataDomainUpdateBucket:void appendQueriesInternal(java.util.Collection)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToManyProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.BaseToOneProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.QualifiedQuery:void andQualifier(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void andQualifier(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.query.QualifiedQuery:void orQualifier(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void orQualifier(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa1_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa0_0()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa2_0(long,long,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa1_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa3_0(long,long,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa2_0(long,long,long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa4_0(long,long,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa3_0(long,long,long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa5_0(long,long,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa4_0(long,long,long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa6_0(long,long,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa5_0(long,long,long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa7_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa6_0(long,long,long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa8_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa7_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa9_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa8_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa10_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa9_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa11_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa10_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa12_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa11_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa13_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa12_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa14_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa13_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa15_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa14_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa16_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa15_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveNfa_0(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa0_0()",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa1_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa2_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa3_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa4_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa5_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa6_0(long,long,long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa7_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa8_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa9_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa10_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa11_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa12_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa13_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa14_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa15_0(long,long)",
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa16_0(long,long)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:org.apache.cayenne.ejbql.parser.Token getNextToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Token jj_consume_token(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_scan_token(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Token getNextToken()",
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Token getToken(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:int jj_ntk()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.JavaCharStream:char BeginToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:org.apache.cayenne.ejbql.parser.Token getNextToken()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa1_0(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa0_0()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa2_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa1_0(long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa3_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa2_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa4_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa3_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa5_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa4_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa6_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa5_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa7_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa6_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa8_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa7_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa9_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa8_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa10_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa9_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa11_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa10_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa12_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa11_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa13_0(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa12_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfaWithStates_0(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa1_0(long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa2_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa6_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa13_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveNfa_0(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfa_0(int,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa0_0()",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfaWithStates_0(int,int,int)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveNfa_1(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfa_1(int,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa0_1()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveNfa_2(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfa_2(int,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa0_2()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:org.apache.cayenne.exp.parser.Token getNextToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.Token jj_consume_token(int)",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.Token getNextToken()",
            "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.Token getToken(int)",
            "org.apache.cayenne.exp.parser.ExpressionParser:int jj_ntk()"
        ]
    },
    "org.apache.cayenne.exp.parser.JavaCharStream:char BeginToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:org.apache.cayenne.exp.parser.Token getNextToken()"
        ]
    },
    "org.apache.cayenne.map.MapLoader$49:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cayenne.query.Ordering:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.BindDirective:boolean render(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,org.apache.velocity.runtime.parser.node.Node)",
            "org.apache.cayenne.access.jdbc.BindObjectEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.BindObjectNotEqualDirective:void renderColumn(org.apache.velocity.context.InternalContextAdapter,java.io.Writer,java.lang.Object,int)",
            "org.apache.cayenne.access.jdbc.EJBQLMultiColumnOperand$PathMultiColumnOperand:void appendValue(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.ResultDirective:java.lang.String getChildAsString(org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.Node,int)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$1:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.jdbc.RowDescriptorBuilder$2:java.lang.Object transform(java.lang.Object)",
            "org.apache.cayenne.access.trans.LOBBatchQueryWrapper:java.lang.Object convertToClobValue(java.lang.Object)",
            "org.apache.cayenne.access.trans.ProcedureTranslator:java.sql.PreparedStatement createStatement()",
            "org.apache.cayenne.access.trans.QualifierTranslator:void finishedChild(org.apache.cayenne.exp.Expression,int,boolean)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.ResultSet,int,int)",
            "org.apache.cayenne.access.types.BigIntegerType:java.lang.Object materializeObject(java.sql.CallableStatement,int,int)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterArrayType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.ByteOrCharArrayFactory$CharacterType:java.lang.Object toJavaObject(java.lang.Object)",
            "org.apache.cayenne.access.types.UUIDType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.access.ClientReturnDiffFilter:boolean isClientArc(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataContextMergeHandler:void arcChanged(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendSimpleProperties(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void appendForeignKeys(java.util.Map)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainDBDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.DataDomainIndirectDiffBuilder:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.IncrementalFaultList:void checkPageResultConsistency(java.util.List,java.util.List)",
            "org.apache.cayenne.access.ObjectDiff:void addDiff(org.apache.cayenne.graph.GraphDiff)",
            "org.apache.cayenne.access.ObjectStore:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.access.ObjectStore:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache$RefreshSpecification:void setRefreshPeriod(java.lang.Object)",
            "org.apache.cayenne.cache.OSQueryCache:void init(com.opensymphony.oscache.general.GeneralCacheAdministrator,java.util.Properties)",
            "org.apache.cayenne.cache.OSQueryCache:void initCronPolicy(java.lang.String,java.lang.Object)",
            "org.apache.cayenne.configuration.server.DBCPDataSourceFactory:java.util.Properties filteredDeprecatedProperties(java.util.Properties)",
            "org.apache.cayenne.conn.ContainerPoolFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.cayenne.dba.db2.DB2QualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.derby.DerbyQualifierTranslator:void processColumnWithQuoteSqlIdentifiers(org.apache.cayenne.map.DbAttribute,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.dba.ingres.IngresCharType:void setJdbcObject(java.sql.PreparedStatement,java.lang.Object,int,int,int)",
            "org.apache.cayenne.dba.openbase.OpenBaseQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.dba.oracle.OracleLOBBatchAction:void processLOBRow(java.sql.Connection,org.apache.cayenne.access.trans.LOBBatchQueryBuilder,org.apache.cayenne.access.trans.LOBBatchQueryWrapper,java.util.List)",
            "org.apache.cayenne.dba.postgres.PostgresQualifierTranslator:void finishedChildNodeAppendExpression(org.apache.cayenne.exp.Expression,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void setValue(java.lang.Object)",
            "org.apache.cayenne.exp.parser.ASTNamedParameter:void encodeAsEJBQL(java.io.PrintWriter,java.lang.String)",
            "org.apache.cayenne.exp.parser.ASTPath:void setPath(java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.graph.ChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.map.DataMap:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.BaseQueryMetadata:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.ProcedureQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SelectQuery:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.query.SelectQuery:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void encodeAsXML(org.apache.cayenne.util.XMLEncoder)",
            "org.apache.cayenne.query.SQLTemplate:void initWithProperties(java.util.Map)",
            "org.apache.cayenne.reflect.ConverterFactory$10:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$11:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$2:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$3:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$4:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$5:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$6:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$7:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$8:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.ConverterFactory$9:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.EnumConverter:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.cayenne.reflect.PersistentDescriptorFactory$1:void startNode(org.apache.cayenne.exp.Expression,org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Comparable toComparable(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.String toString(java.lang.Object)",
            "org.apache.cayenne.util.ConversionUtil:java.lang.Object toUpperCase(java.lang.Object)",
            "org.apache.cayenne.validation.SimpleValidationFailure:java.lang.String toString()",
            "org.apache.cayenne.xml.XMLEncoder:void encodeSimple(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextChildDiffLoader:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcCreated(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.apache.cayenne.CayenneContextMergeHandler:void arcDeleted(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cayenne.map.MapLoader:void access$1000(org.apache.cayenne.map.MapLoader,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader$11:void execute(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.map.ObjAttribute:java.util.Iterator getDbPathIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLIdentifierColumnsTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.jdbc.EJBQLJoinAppender:void generateJoinsForFlattenedAttributes(org.apache.cayenne.access.jdbc.EJBQLTableId,java.lang.String)",
            "org.apache.cayenne.access.jdbc.EJBQLPathTranslator:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.jdbc.EJBQLSelectColumnsTranslator$1:void processTerminatingAttribute(org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.SelectTranslator$1:boolean visitAttribute(org.apache.cayenne.reflect.AttributeProperty)",
            "org.apache.cayenne.access.trans.SelectTranslator:java.util.List appendQueryColumns(java.util.List,org.apache.cayenne.query.SelectQuery)",
            "org.apache.cayenne.access.DataNodeSyncQualifierDescriptor:void reset(org.apache.cayenne.access.DbEntityClassDescriptor)",
            "org.apache.cayenne.access.DbEntityClassDescriptor:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.map.ObjAttribute)",
            "org.apache.cayenne.map.ObjAttribute:void updateDbAttributePath()",
            "org.apache.cayenne.map.ObjEntity$DBPathConverter:java.lang.String toDbPath(org.apache.cayenne.map.PathComponentIterator)"
        ]
    },
    "org.apache.cayenne.map.EntityResolver:java.lang.String makeUniqueRelationshipName(org.apache.cayenne.map.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.EntityResolver:void applyDBLayerDefaults()",
            "org.apache.cayenne.map.EntityResolver:void applyObjectLayerDefaults()"
        ]
    },
    "org.apache.cayenne.util.NamedObjectFactory$ObjRelationshipFactory:boolean isNameInUse(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.util.NamedObjectFactory:java.lang.String makeName(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cayenne.map.ClientObjRelationship:org.apache.cayenne.map.Relationship getReverseRelationship()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.dba.oracle.Oracle8ActionBuilder:org.apache.cayenne.query.SQLAction sqlAction(org.apache.cayenne.query.SQLTemplate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.dba.sqlite.SQLiteActionBuilder:org.apache.cayenne.query.SQLAction sqlAction(org.apache.cayenne.query.SQLTemplate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.EJBQLAction:void performAction(java.sql.Connection,org.apache.cayenne.access.OperationObserver)",
            "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.query.SQLTemplate:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.dba.frontbase.FrontBaseAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.hsqldb.HSQLDBAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.mysql.MySQLAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.openbase.OpenBaseAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.oracle.Oracle8Adapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.oracle.OracleAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.postgres.PostgresAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlite.SQLiteAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.sqlserver.SQLServerAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.dba.JdbcAdapter:org.apache.cayenne.query.SQLAction getAction(org.apache.cayenne.query.Query,org.apache.cayenne.access.DataNode)",
            "org.apache.cayenne.remote.IncrementalQuery:org.apache.cayenne.query.SQLAction createSQLAction(org.apache.cayenne.query.SQLActionVisitor)"
        ]
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Boolean decodeBoolean(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Double decodeDouble(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Float decodeFloat(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.xml.XMLDecoder:java.lang.Integer decodeInteger(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.configuration.rop.client.ClientLocalRuntime:void <init>(org.apache.cayenne.di.Injector,java.util.Map,org.apache.cayenne.di.Module[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_238()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_150()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_236()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_149()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_234()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_148()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_232()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_147()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_230()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_146()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_228()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_145()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_202()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_132()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_131()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_198()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_130()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_196()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_129()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_194()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_128()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_192()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_127()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_226()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_144()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_50()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_50(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_224()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_143()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_49()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_49(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_220()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_141()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_214()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_138()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_212()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_137()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_218()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_140()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_210()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_136()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_208()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_135()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_243()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_153()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_206()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_134()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_241()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_152()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_204()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_133()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_30()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_30(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_92()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_39()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_33(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_313()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_293()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_258()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_170()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_120()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_48()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_115()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_46()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_281()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_188()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_84()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_30()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_80()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_28()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_239()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_151()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_57()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_57(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_78()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_27()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_82()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_29()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_123()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_50()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_255()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_170()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_12()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_12(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_215()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_139()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_42()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_42(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_116()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_46()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_119()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_48()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_23()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_23(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_89()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_33()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_21()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_21(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_87()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_32()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_19()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_19(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_333()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_329()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_16()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_16(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_15()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_15(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_312()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_293()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_58()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_58(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_297()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_282()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_55()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_55(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_29()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_54()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_54(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_28()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_74()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_26()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_76()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_27()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_256()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_170()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_278()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_188()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_254()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_170()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_3()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_3(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_165()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_68()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_2(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_8(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_240()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_151()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_14()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_14(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_27()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_11()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_125()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_257()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_170()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_75()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_26()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_13()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_13(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_221()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_142()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_10(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_50()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_44()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_40()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_317()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_316()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_291()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_290()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_289()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_288()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_287()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_52()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_213()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_211()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_209()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_207()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_205()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_203()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_55()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_17()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_17(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_331()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_329()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_9()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_9(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_201()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_132()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_199()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_131()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_197()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_130()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_195()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_129()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_193()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_128()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_191()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_127()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_47(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_42()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_32()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_95()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_43(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_48(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_46(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_45(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_44(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void comparison_expression()"
        ]
    },
    "org.apache.cayenne.access.NoSyncObjectStore:void <init>(org.apache.cayenne.access.DataRowStore,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.configuration.DefaultObjectStoreFactory:org.apache.cayenne.access.ObjectStore createObjectStore(org.apache.cayenne.access.DataRowStore)"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void <init>(org.apache.cayenne.access.DataRowStore)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataDomain:org.apache.cayenne.access.DataContext createDataContext(boolean)",
            "org.apache.cayenne.access.ObjectStore:void <init>()"
        ]
    },
    "org.apache.cayenne.access.jdbc.FullRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.jdbc.InheritanceAwareRowReader:void <init>(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)",
            "org.apache.cayenne.access.jdbc.JDBCResultIterator:org.apache.cayenne.access.jdbc.RowReader createFullRowReader(org.apache.cayenne.access.jdbc.RowDescriptor,org.apache.cayenne.query.QueryMetadata)"
        ]
    },
    "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.ObjEntity getObjEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QualifierTranslator:org.apache.cayenne.exp.Expression extractQualifier()",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void appendObjPath(org.apache.cayenne.exp.Expression)",
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:org.apache.cayenne.map.DbAttribute paramsDbType(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.dba.oracle.Oracle8SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.DataMap getDataMap()"
        ]
    },
    "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.DataMap getDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.dba.oracle.Oracle8SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.DataMap getDataMap()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.DataMap getDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.dba.oracle.Oracle8SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.DataMap getDataMap()"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.DataMap getDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.trans.QueryAssemblerHelper:void <init>(org.apache.cayenne.access.trans.QueryAssembler)",
            "org.apache.cayenne.access.trans.SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.access.trans.SelectTranslator:java.lang.String createSqlString()",
            "org.apache.cayenne.cache.NestedQueryCache$QualifiedKeyQueryMetadata:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.dba.openbase.OpenBaseSelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.dba.oracle.Oracle8SelectTranslator:org.apache.cayenne.access.trans.JoinStack createJoinStack()",
            "org.apache.cayenne.query.AbstractQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.EJBQLQuery:void route(org.apache.cayenne.query.QueryRouter,org.apache.cayenne.map.EntityResolver,org.apache.cayenne.query.Query)",
            "org.apache.cayenne.query.QueryMetadataWrapper:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalQuery$1:org.apache.cayenne.map.DataMap getDataMap()",
            "org.apache.cayenne.remote.IncrementalSelectQuery$1:org.apache.cayenne.map.DataMap getDataMap()"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderToManyProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderListProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String,org.apache.cayenne.reflect.Accessor)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderSetProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToOneProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void andQualifier(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void andQualifier(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.remote.IncrementalSelectQuery:void orQualifier(org.apache.cayenne.exp.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.remote.IncrementalSelectQuery:void orQualifier(org.apache.cayenne.exp.Expression)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:int jjMoveStringLiteralDfa0_0()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQLTokenManager:org.apache.cayenne.ejbql.parser.Token getNextToken()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Token getNextToken()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Token getToken(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:int jj_ntk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:org.apache.cayenne.ejbql.parser.Node parseQuery()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void delete_statement()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void from_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subquery_from_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_declaration()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void outer_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void inner_fetch_join()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void db_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void object_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void set_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void update_field()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_entity_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_select_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expressions()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void classname()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameters()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void constructor_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_select_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void between_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void in_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void literal_or_param()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void like_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void null_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void empty_collection_comparison_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void exists_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void all_or_any_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_comp()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_term()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void arithmetic_factor()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void string_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void datetime_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_primary()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_value()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_expression()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_strings()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void trim_specification()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_numerics()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void locate()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void functions_returning_datetime()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_clause()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void orderby_item()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void abstract_schema_name()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void path_component()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void numeric_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void integer_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void decimal_literal()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void input_parameter()",
            "org.apache.cayenne.ejbql.parser.EJBQL:void pattern_value()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa0_0()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:org.apache.cayenne.exp.parser.Token getNextToken()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfa_0(int,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa1_0(long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa2_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa3_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa4_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa5_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa6_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa7_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa8_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa9_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa10_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa11_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa12_0(long,long)",
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa13_0(long,long)"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfa_1(int,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa0_1()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:org.apache.cayenne.exp.parser.Token getNextToken()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjStartNfa_2(int,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:int jjMoveStringLiteralDfa0_2()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParserTokenManager:org.apache.cayenne.exp.parser.Token getNextToken()"
        ]
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.Token getNextToken()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:org.apache.cayenne.exp.parser.Token getToken(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cayenne.exp.parser.ExpressionParser:int jj_ntk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.exp.parser.ExpressionParser:void orCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void andCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void notCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void simpleNotCondition()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarCommaList()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConditionExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarConstExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void scalarNumericExpression()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void multiplySubtractExp()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericTerm()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void numericPrimary()",
            "org.apache.cayenne.exp.parser.ExpressionParser:void pathExpression()"
        ]
    },
    "org.apache.cayenne.map.MapLoader$11:void execute(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.map.MapLoader:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_50(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_49(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_comp()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_30(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void conditional_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_151()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_244()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_242()",
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_59()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_57(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_12(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_42(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void collection_member_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_23(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void groupby_item()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_21(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void distinct_path()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_19(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_16(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void subselect_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_15(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void select_expression()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_58(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void entity_bean_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_55(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void enum_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_54(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void boolean_primary()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_3(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void identification_variable_declaration()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_14(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_11()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_11(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_125()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_52()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_13(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_213()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_138()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_211()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_137()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_209()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_136()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_207()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_135()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_205()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_134()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_203()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_133()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_17(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void aggregate_path()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_9(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3_32()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_32(int)",
            "org.apache.cayenne.ejbql.parser.EJBQL:void jj_rescan_token()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_95()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_40()"
        ]
    },
    "org.apache.cayenne.access.ObjectStore:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.access.DataContext:org.apache.cayenne.ObjectContext createChildContext()"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderListProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyCollectionProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)",
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyListProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderMapProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String,org.apache.cayenne.reflect.Accessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManyMapProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.reflect.valueholder.ValueHolderSetProperty:void <init>(org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.ClassDescriptor,org.apache.cayenne.reflect.Accessor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.reflect.valueholder.ValueHolderDescriptorFactory:void createToManySetProperty(org.apache.cayenne.reflect.PersistentDescriptor,org.apache.cayenne.map.ObjRelationship)"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_244()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_153()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_242()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_3R_152()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_11(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void new_value()"
        ]
    },
    "org.apache.cayenne.ejbql.parser.EJBQL:boolean jj_2_32(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cayenne.ejbql.parser.EJBQL:void simple_cond_expression()"
        ]
    }
}
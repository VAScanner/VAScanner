{
    "org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter:java.lang.Object readFromSource(java.lang.Class,org.springframework.http.HttpHeaders,javax.xml.transform.Source)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.http.converter.xml.AbstractXmlHttpMessageConverter:java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)"
        ]
    },
    "org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter:javax.xml.transform.Source processSource(javax.xml.transform.Source)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter:java.lang.Object readFromSource(java.lang.Class,org.springframework.http.HttpHeaders,javax.xml.transform.Source)"
        ]
    },
    "org.springframework.http.converter.xml.SourceHttpMessageConverter:javax.xml.transform.sax.SAXSource readSAXSource(java.io.InputStream)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.http.converter.xml.SourceHttpMessageConverter:javax.xml.transform.Source readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)"
        ]
    },
    "org.springframework.http.converter.xml.SourceHttpMessageConverter:javax.xml.transform.dom.DOMSource readDOMSource(java.io.InputStream)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.http.converter.xml.SourceHttpMessageConverter:javax.xml.transform.Source readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)"
        ]
    },
    "org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter:javax.xml.stream.XMLInputFactory createXmlInputFactory()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter:void <init>()"
        ]
    },
    "org.springframework.http.converter.xml.SourceHttpMessageConverter:javax.xml.transform.Source readStAXSource(java.io.InputStream)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.http.converter.xml.SourceHttpMessageConverter:javax.xml.transform.Source readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)"
        ]
    },
    "org.springframework.http.converter.xml.AbstractXmlHttpMessageConverter:java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.http.converter.AbstractHttpMessageConverter:java.lang.Object read(java.lang.Class,org.springframework.http.HttpInputMessage)"
        ]
    },
    "org.springframework.http.converter.xml.SourceHttpMessageConverter:javax.xml.transform.Source readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.http.converter.xml.SourceHttpMessageConverter:java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)"
        ]
    },
    "org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.http.converter.AbstractHttpMessageConverter:java.lang.Object read(java.lang.Class,org.springframework.http.HttpInputMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.HttpMessageConverterExtractor:java.lang.Object extractData(org.springframework.http.client.ClientHttpResponse)",
            "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object readWithMessageConverters(org.springframework.core.MethodParameter,org.springframework.http.HttpInputMessage,java.lang.Class)"
        ]
    },
    "org.springframework.http.converter.xml.SourceHttpMessageConverter:java.lang.Object readInternal(java.lang.Class,org.springframework.http.HttpInputMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.http.converter.AbstractHttpMessageConverter:java.lang.Object read(java.lang.Class,org.springframework.http.HttpInputMessage)"
        ]
    },
    "org.springframework.web.client.HttpMessageConverterExtractor:java.lang.Object extractData(org.springframework.http.client.ClientHttpResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.AsyncRestTemplate$ResponseExtractorFuture:java.lang.Object convertResponse(org.springframework.http.client.ClientHttpResponse)",
            "org.springframework.web.client.RestTemplate:java.lang.Object doExecute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor)",
            "org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor:org.springframework.http.ResponseEntity extractData(org.springframework.http.client.ClientHttpResponse)"
        ]
    },
    "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object readWithMessageConverters(org.springframework.core.MethodParameter,org.springframework.http.HttpInputMessage,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object resolveRequestBody(org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest,java.lang.Object)",
            "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:org.springframework.http.HttpEntity resolveHttpEntityRequest(org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)"
        ]
    },
    "org.springframework.web.client.AsyncRestTemplate$ResponseExtractorFuture:java.lang.Object convertResponse(org.springframework.http.client.ClientHttpResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.AsyncRestTemplate$ResponseExtractorFuture:java.lang.Object adapt(org.springframework.http.client.ClientHttpResponse)"
        ]
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object doExecute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.RestTemplate:java.lang.Object execute(java.lang.String,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:java.lang.Object execute(java.lang.String,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor,java.util.Map)",
            "org.springframework.web.client.RestTemplate:java.lang.Object execute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor)"
        ]
    },
    "org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor:org.springframework.http.ResponseEntity extractData(org.springframework.http.client.ClientHttpResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor:java.lang.Object extractData(org.springframework.http.client.ClientHttpResponse)"
        ]
    },
    "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object resolveRequestBody(org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object[] resolveHandlerArguments(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.ExtendedModelMap)"
        ]
    },
    "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:org.springframework.http.HttpEntity resolveHttpEntityRequest(org.springframework.core.MethodParameter,org.springframework.web.context.request.NativeWebRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object[] resolveHandlerArguments(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.ExtendedModelMap)"
        ]
    },
    "org.springframework.web.client.AsyncRestTemplate$ResponseExtractorFuture:java.lang.Object adapt(org.springframework.http.client.ClientHttpResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.AsyncRestTemplate$ResponseExtractorFuture:java.lang.Object adapt(java.lang.Object)"
        ]
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object execute(java.lang.String,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.RestTemplate:java.lang.Object getForObject(java.lang.String,java.lang.Class,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity getForEntity(java.lang.String,java.lang.Class,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:org.springframework.http.HttpHeaders headForHeaders(java.lang.String,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:java.net.URI postForLocation(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:java.lang.Object postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:void put(java.lang.String,java.lang.Object,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:void delete(java.lang.String,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:java.util.Set optionsForAllow(java.lang.String,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference,java.lang.Object[])"
        ]
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object execute(java.lang.String,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.RestTemplate:java.lang.Object getForObject(java.lang.String,java.lang.Class,java.util.Map)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity getForEntity(java.lang.String,java.lang.Class,java.util.Map)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.HttpHeaders headForHeaders(java.lang.String,java.util.Map)",
            "org.springframework.web.client.RestTemplate:java.net.URI postForLocation(java.lang.String,java.lang.Object,java.util.Map)",
            "org.springframework.web.client.RestTemplate:java.lang.Object postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)",
            "org.springframework.web.client.RestTemplate:void put(java.lang.String,java.lang.Object,java.util.Map)",
            "org.springframework.web.client.RestTemplate:void delete(java.lang.String,java.util.Map)",
            "org.springframework.web.client.RestTemplate:java.util.Set optionsForAllow(java.lang.String,java.util.Map)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.util.Map)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference,java.util.Map)"
        ]
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object execute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.RestTemplate:java.lang.Object getForObject(java.net.URI,java.lang.Class)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity getForEntity(java.net.URI,java.lang.Class)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.HttpHeaders headForHeaders(java.net.URI)",
            "org.springframework.web.client.RestTemplate:java.net.URI postForLocation(java.net.URI,java.lang.Object)",
            "org.springframework.web.client.RestTemplate:java.lang.Object postForObject(java.net.URI,java.lang.Object,java.lang.Class)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity postForEntity(java.net.URI,java.lang.Object,java.lang.Class)",
            "org.springframework.web.client.RestTemplate:void put(java.net.URI,java.lang.Object)",
            "org.springframework.web.client.RestTemplate:void delete(java.net.URI)",
            "org.springframework.web.client.RestTemplate:java.util.Set optionsForAllow(java.net.URI)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class)",
            "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference)"
        ]
    },
    "org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor:java.lang.Object extractData(org.springframework.http.client.ClientHttpResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.client.AsyncRestTemplate$ResponseExtractorFuture:java.lang.Object convertResponse(org.springframework.http.client.ClientHttpResponse)",
            "org.springframework.web.client.RestTemplate:java.lang.Object doExecute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor)"
        ]
    },
    "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object[] resolveHandlerArguments(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.ExtendedModelMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object invokeHandlerMethod(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.ExtendedModelMap)"
        ]
    },
    "org.springframework.web.client.AsyncRestTemplate$ResponseExtractorFuture:java.lang.Object adapt(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object getForObject(java.lang.String,java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity getForEntity(java.lang.String,java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.HttpHeaders headForHeaders(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.net.URI postForLocation(java.lang.String,java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:void put(java.lang.String,java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:void delete(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.util.Set optionsForAllow(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object getForObject(java.lang.String,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity getForEntity(java.lang.String,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.HttpHeaders headForHeaders(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.net.URI postForLocation(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity postForEntity(java.lang.String,java.lang.Object,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:void put(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:void delete(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.util.Set optionsForAllow(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object getForObject(java.net.URI,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity getForEntity(java.net.URI,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.HttpHeaders headForHeaders(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.net.URI postForLocation(java.net.URI,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.lang.Object postForObject(java.net.URI,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity postForEntity(java.net.URI,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:void put(java.net.URI,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:void delete(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:java.util.Set optionsForAllow(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.client.RestTemplate:org.springframework.http.ResponseEntity exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,org.springframework.core.ParameterizedTypeReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.web.bind.annotation.support.HandlerMethodInvoker:java.lang.Object invokeHandlerMethod(java.lang.reflect.Method,java.lang.Object,org.springframework.web.context.request.NativeWebRequest,org.springframework.ui.ExtendedModelMap)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
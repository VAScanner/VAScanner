{
    "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame copy()": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.handler.codec.http.websocketx.WebSocketFrame copy()",
            "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.buffer.ByteBufHolder copy()"
        ]
    },
    "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame duplicate()": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate()",
            "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.buffer.ByteBufHolder duplicate()"
        ]
    },
    "io.netty.handler.codec.http.websocketx.UTF8Output:void write(io.netty.buffer.ByteBuf)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.UTF8Output:void <init>(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void checkUTF8String(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)"
        ]
    },
    "io.netty.handler.codec.http.websocketx.UTF8Output:void write(byte[])": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "io.netty.handler.codec.http.websocketx.UTF8Output:void write(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.UTF8Output:void write(io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.websocketx.UTF8Output:void write(byte[])"
        ]
    },
    "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void protocolViolation(io.netty.channel.ChannelHandlerContext,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)",
            "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void checkUTF8String(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void checkCloseFrameBody(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)"
        ]
    },
    "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void checkUTF8String(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"
        ]
    },
    "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void checkCloseFrameBody(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"
        ]
    },
    "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.handler.codec.http.websocketx.WebSocketFrame copy()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.WebSocketFrame:io.netty.buffer.ByteBufHolder copy()"
        ]
    },
    "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.WebSocketFrame:io.netty.buffer.ByteBufHolder duplicate()"
        ]
    },
    "io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.netty.handler.codec.http.websocketx.UTF8Output:void <init>(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void checkUTF8String(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:void checkCloseFrameBody(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)"
        ]
    },
    "io.netty.handler.codec.http.websocketx.WebSocketFrame:io.netty.buffer.ByteBufHolder copy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.netty.handler.codec.http.websocketx.WebSocketFrame:io.netty.buffer.ByteBufHolder duplicate()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
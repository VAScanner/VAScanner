{
    "org.keycloak.authorization.client.util.HttpMethod:java.lang.Object execute(org.keycloak.authorization.client.util.HttpResponseProcessor)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.authorization.client.util.HttpMethodResponse$2:java.lang.Object execute()",
            "org.keycloak.authorization.client.util.HttpMethodResponse:java.lang.Object execute()",
            "org.keycloak.authorization.client.util.HttpMethodResponse$3:java.lang.Object execute()",
            "org.keycloak.authorization.client.util.HttpMethod:void execute()"
        ]
    },
    "org.keycloak.authorization.client.util.HttpMethodResponse$2:java.lang.Object execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$1:org.keycloak.representations.idm.authorization.PermissionResponse call()",
            "org.keycloak.authorization.client.resource.ProtectionResource:org.keycloak.authorization.client.representation.TokenIntrospectionResponse introspectRequestingPartyToken(java.lang.String)",
            "org.keycloak.authorization.client.resource.PermissionResource$2:org.keycloak.representations.idm.authorization.PermissionTicketRepresentation call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$1:org.keycloak.representations.idm.authorization.ResourceRepresentation call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$5:java.util.List call()",
            "org.keycloak.authorization.client.resource.PermissionResource$3:java.util.List call()",
            "org.keycloak.authorization.client.resource.PermissionResource$5:java.util.List call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$4:java.lang.String[] call()",
            "org.keycloak.authorization.client.resource.AuthorizationResource$1:org.keycloak.representations.idm.authorization.AuthorizationResponse call()",
            "org.keycloak.authorization.client.resource.PermissionResource$4:java.util.List call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$3:org.keycloak.representations.idm.authorization.ResourceRepresentation call()",
            "org.keycloak.authorization.client.resource.PolicyResource$5:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()",
            "org.keycloak.authorization.client.resource.PolicyResource$4:java.util.List call()",
            "org.keycloak.authorization.client.resource.PolicyResource$3:java.lang.Void call()",
            "org.keycloak.authorization.client.resource.PermissionResource$6:java.lang.Object call()",
            "org.keycloak.authorization.client.resource.PolicyResource$1:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()",
            "org.keycloak.authorization.client.util.TokenCallable:java.lang.String call()",
            "org.keycloak.authorization.client.util.TokenCallable:org.keycloak.representations.AccessTokenResponse obtainAccessToken()",
            "org.keycloak.authorization.client.util.TokenCallable:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken()",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)",
            "org.keycloak.authorization.client.AuthzClient:void <init>(org.keycloak.authorization.client.Configuration,org.keycloak.authorization.client.ClientAuthenticator)"
        ]
    },
    "org.keycloak.authorization.client.util.HttpMethodResponse:java.lang.Object execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$1:org.keycloak.representations.idm.authorization.PermissionResponse call()",
            "org.keycloak.authorization.client.resource.ProtectionResource:org.keycloak.authorization.client.representation.TokenIntrospectionResponse introspectRequestingPartyToken(java.lang.String)",
            "org.keycloak.authorization.client.resource.PermissionResource$2:org.keycloak.representations.idm.authorization.PermissionTicketRepresentation call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$1:org.keycloak.representations.idm.authorization.ResourceRepresentation call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$5:java.util.List call()",
            "org.keycloak.authorization.client.resource.PermissionResource$3:java.util.List call()",
            "org.keycloak.authorization.client.resource.PermissionResource$5:java.util.List call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$4:java.lang.String[] call()",
            "org.keycloak.authorization.client.resource.AuthorizationResource$1:org.keycloak.representations.idm.authorization.AuthorizationResponse call()",
            "org.keycloak.authorization.client.resource.PermissionResource$4:java.util.List call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$3:org.keycloak.representations.idm.authorization.ResourceRepresentation call()",
            "org.keycloak.authorization.client.resource.PolicyResource$5:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()",
            "org.keycloak.authorization.client.resource.PolicyResource$4:java.util.List call()",
            "org.keycloak.authorization.client.resource.PolicyResource$3:java.lang.Void call()",
            "org.keycloak.authorization.client.resource.PermissionResource$6:java.lang.Object call()",
            "org.keycloak.authorization.client.resource.PolicyResource$1:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()",
            "org.keycloak.authorization.client.util.TokenCallable:java.lang.String call()",
            "org.keycloak.authorization.client.util.TokenCallable:org.keycloak.representations.AccessTokenResponse obtainAccessToken()",
            "org.keycloak.authorization.client.util.TokenCallable:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken()",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)",
            "org.keycloak.authorization.client.AuthzClient:void <init>(org.keycloak.authorization.client.Configuration,org.keycloak.authorization.client.ClientAuthenticator)"
        ]
    },
    "org.keycloak.authorization.client.util.HttpMethodResponse$3:java.lang.Object execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$1:org.keycloak.representations.idm.authorization.PermissionResponse call()",
            "org.keycloak.authorization.client.resource.ProtectionResource:org.keycloak.authorization.client.representation.TokenIntrospectionResponse introspectRequestingPartyToken(java.lang.String)",
            "org.keycloak.authorization.client.resource.PermissionResource$2:org.keycloak.representations.idm.authorization.PermissionTicketRepresentation call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$1:org.keycloak.representations.idm.authorization.ResourceRepresentation call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$5:java.util.List call()",
            "org.keycloak.authorization.client.resource.PermissionResource$3:java.util.List call()",
            "org.keycloak.authorization.client.resource.PermissionResource$5:java.util.List call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$4:java.lang.String[] call()",
            "org.keycloak.authorization.client.resource.AuthorizationResource$1:org.keycloak.representations.idm.authorization.AuthorizationResponse call()",
            "org.keycloak.authorization.client.resource.PermissionResource$4:java.util.List call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$3:org.keycloak.representations.idm.authorization.ResourceRepresentation call()",
            "org.keycloak.authorization.client.resource.PolicyResource$5:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()",
            "org.keycloak.authorization.client.resource.PolicyResource$4:java.util.List call()",
            "org.keycloak.authorization.client.resource.PolicyResource$3:java.lang.Void call()",
            "org.keycloak.authorization.client.resource.PermissionResource$6:java.lang.Object call()",
            "org.keycloak.authorization.client.resource.PolicyResource$1:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()",
            "org.keycloak.authorization.client.util.TokenCallable:java.lang.String call()",
            "org.keycloak.authorization.client.util.TokenCallable:org.keycloak.representations.AccessTokenResponse obtainAccessToken()",
            "org.keycloak.authorization.client.util.TokenCallable:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken()",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)",
            "org.keycloak.authorization.client.AuthzClient:void <init>(org.keycloak.authorization.client.Configuration,org.keycloak.authorization.client.ClientAuthenticator)"
        ]
    },
    "org.keycloak.authorization.client.util.HttpMethod:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource$2:java.lang.Object call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$6:java.lang.Object call()",
            "org.keycloak.authorization.client.resource.PolicyResource$2:java.lang.Void call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$1:org.keycloak.representations.idm.authorization.PermissionResponse call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$1:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectionResource:org.keycloak.authorization.client.representation.TokenIntrospectionResponse introspectRequestingPartyToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PermissionResource$2:org.keycloak.representations.idm.authorization.PermissionTicketRepresentation call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$2:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$1:org.keycloak.representations.idm.authorization.ResourceRepresentation call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource$1:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$5:java.util.List call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource$5:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$3:java.util.List call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$3:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$5:java.util.List call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$5:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$4:java.lang.String[] call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource$4:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.AuthorizationResource$1:org.keycloak.representations.idm.authorization.AuthorizationResponse call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.AuthorizationResource$1:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$4:java.util.List call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$4:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$3:org.keycloak.representations.idm.authorization.ResourceRepresentation call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource$3:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PolicyResource$5:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource$5:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PolicyResource$4:java.util.List call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource$4:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PolicyResource$3:java.lang.Void call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource$3:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$6:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:void update(org.keycloak.representations.idm.authorization.PermissionTicketRepresentation)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PolicyResource$1:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource$1:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.util.TokenCallable:java.lang.String call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource$1:org.keycloak.representations.idm.authorization.PermissionResponse call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$2:java.lang.Object call()",
            "org.keycloak.authorization.client.resource.PermissionResource$2:org.keycloak.representations.idm.authorization.PermissionTicketRepresentation call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$1:org.keycloak.representations.idm.authorization.ResourceRepresentation call()",
            "org.keycloak.authorization.client.resource.PermissionResource$3:java.util.List call()",
            "org.keycloak.authorization.client.resource.PermissionResource$5:java.util.List call()",
            "org.keycloak.authorization.client.resource.AuthorizationResource$1:org.keycloak.representations.idm.authorization.AuthorizationResponse call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$6:java.lang.Object call()",
            "org.keycloak.authorization.client.resource.PermissionResource$4:java.util.List call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$3:org.keycloak.representations.idm.authorization.ResourceRepresentation call()",
            "org.keycloak.authorization.client.resource.PolicyResource$5:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()",
            "org.keycloak.authorization.client.resource.PolicyResource$4:java.util.List call()",
            "org.keycloak.authorization.client.resource.PolicyResource$3:java.lang.Void call()",
            "org.keycloak.authorization.client.resource.PolicyResource$2:java.lang.Void call()",
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.util.HttpMethod createFindRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.resource.PermissionResource$6:java.lang.Object call()",
            "org.keycloak.authorization.client.resource.PolicyResource$1:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation call()",
            "org.keycloak.authorization.client.util.TokenCallable:java.lang.Object call()",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.util.TokenCallable:org.keycloak.representations.AccessTokenResponse obtainAccessToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.util.TokenCallable:java.lang.String call()"
        ]
    },
    "org.keycloak.authorization.client.util.TokenCallable:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.util.TokenCallable:java.lang.String call()"
        ]
    },
    "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionResponse create(java.util.List)",
            "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionTicketRepresentation create(org.keycloak.representations.idm.authorization.PermissionTicketRepresentation)",
            "org.keycloak.authorization.client.resource.PermissionResource:java.util.List findByScope(java.lang.String)",
            "org.keycloak.authorization.client.resource.PermissionResource:java.util.List findByResource(java.lang.String)",
            "org.keycloak.authorization.client.resource.PermissionResource:java.util.List find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.resource.PermissionResource:void update(org.keycloak.representations.idm.authorization.PermissionTicketRepresentation)",
            "org.keycloak.authorization.client.resource.AuthorizationResource:org.keycloak.representations.idm.authorization.AuthorizationResponse authorize(org.keycloak.representations.idm.authorization.AuthorizationRequest)",
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation create(org.keycloak.representations.idm.authorization.ResourceRepresentation)",
            "org.keycloak.authorization.client.resource.ProtectedResource:void update(org.keycloak.representations.idm.authorization.ResourceRepresentation)",
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation findById(java.lang.String)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.String[] find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.Object find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.resource.ProtectedResource:void delete(java.lang.String)",
            "org.keycloak.authorization.client.resource.PolicyResource:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation create(org.keycloak.representations.idm.authorization.UmaPermissionRepresentation)",
            "org.keycloak.authorization.client.resource.PolicyResource:void update(org.keycloak.representations.idm.authorization.UmaPermissionRepresentation)",
            "org.keycloak.authorization.client.resource.PolicyResource:void delete(java.lang.String)",
            "org.keycloak.authorization.client.resource.PolicyResource:java.util.List find(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.resource.PolicyResource:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation findById(java.lang.String)"
        ]
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.representations.AccessTokenResponse obtainAccessToken(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:void <init>(org.keycloak.authorization.client.Configuration,org.keycloak.authorization.client.ClientAuthenticator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create(org.keycloak.authorization.client.Configuration)",
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create(org.keycloak.authorization.client.Configuration,org.keycloak.authorization.client.ClientAuthenticator)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$2:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:void update(org.keycloak.representations.idm.authorization.ResourceRepresentation)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$6:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:void delete(java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PolicyResource$2:java.lang.Void call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource$2:java.lang.Object call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$1:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionResponse create(java.util.List)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$2:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionTicketRepresentation create(org.keycloak.representations.idm.authorization.PermissionTicketRepresentation)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$1:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation create(org.keycloak.representations.idm.authorization.ResourceRepresentation)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$5:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.Object find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$3:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:java.util.List findByScope(java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$5:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:java.util.List find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$4:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.String[] find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.AuthorizationResource$1:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.AuthorizationResource:org.keycloak.representations.idm.authorization.AuthorizationResponse authorize(org.keycloak.representations.idm.authorization.AuthorizationRequest)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource$4:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:java.util.List findByResource(java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource$3:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation findById(java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PolicyResource$5:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation findById(java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PolicyResource$4:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource:java.util.List find(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PolicyResource$3:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource:void delete(java.lang.String)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource:void update(org.keycloak.representations.idm.authorization.PermissionTicketRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PolicyResource$1:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation create(org.keycloak.representations.idm.authorization.UmaPermissionRepresentation)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.util.HttpMethod createFindRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.Integer,java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.util.HttpMethod access$300(org.keycloak.authorization.client.resource.ProtectedResource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.Integer,java.lang.Integer)"
        ]
    },
    "org.keycloak.authorization.client.util.TokenCallable:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionResponse create(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionResponse create(org.keycloak.representations.idm.authorization.PermissionRequest)"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionTicketRepresentation create(org.keycloak.representations.idm.authorization.PermissionTicketRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PermissionResource:java.util.List findByScope(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PermissionResource:java.util.List findByResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PermissionResource:java.util.List find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.lang.Integer,java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.AuthorizationResource:org.keycloak.representations.idm.authorization.AuthorizationResponse authorize(org.keycloak.representations.idm.authorization.AuthorizationRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.AuthorizationResource:org.keycloak.representations.idm.authorization.AuthorizationResponse authorize()"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation create(org.keycloak.representations.idm.authorization.ResourceRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:void update(org.keycloak.representations.idm.authorization.ResourceRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation findById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.String[] find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer,java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.Object find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.Integer,java.lang.Integer)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.String[] findAll()"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.Object find(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.Integer,java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation findByName(java.lang.String)",
            "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation findByName(java.lang.String,java.lang.String)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.util.List findByUri(java.lang.String)",
            "org.keycloak.authorization.client.resource.ProtectedResource:java.util.List findByMatchingUri(java.lang.String)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:void delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PolicyResource:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation create(org.keycloak.representations.idm.authorization.UmaPermissionRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PolicyResource:void update(org.keycloak.representations.idm.authorization.UmaPermissionRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PolicyResource:void delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PolicyResource:java.util.List find(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PolicyResource:org.keycloak.representations.idm.authorization.UmaPermissionRepresentation findById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create(org.keycloak.authorization.client.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create(java.io.InputStream)"
        ]
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create(org.keycloak.authorization.client.Configuration,org.keycloak.authorization.client.ClientAuthenticator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.PolicyResource$2:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PolicyResource:void update(org.keycloak.representations.idm.authorization.UmaPermissionRepresentation)",
            "org.keycloak.authorization.client.util.Throwables:java.lang.Object retryAndWrapExceptionIfNecessary(java.util.concurrent.Callable,org.keycloak.authorization.client.util.TokenCallable,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.authorization.client.util.HttpMethod access$300(org.keycloak.authorization.client.resource.ProtectedResource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.Integer,java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.ProtectedResource$5:java.util.List call()",
            "org.keycloak.authorization.client.resource.ProtectedResource$4:java.lang.String[] call()"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionResponse create(org.keycloak.representations.idm.authorization.PermissionRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionResponse forResource(org.keycloak.representations.idm.authorization.PermissionRequest)"
        ]
    },
    "org.keycloak.authorization.client.resource.AuthorizationResource:org.keycloak.representations.idm.authorization.AuthorizationResponse authorize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:java.lang.String[] findAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation findByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:org.keycloak.representations.idm.authorization.ResourceRepresentation findByName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:java.util.List findByUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.resource.ProtectedResource:java.util.List findByMatchingUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create()"
        ]
    },
    "org.keycloak.authorization.client.resource.PermissionResource:org.keycloak.representations.idm.authorization.PermissionResponse forResource(org.keycloak.representations.idm.authorization.PermissionRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.client.AuthzClient:org.keycloak.authorization.client.AuthzClient create()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
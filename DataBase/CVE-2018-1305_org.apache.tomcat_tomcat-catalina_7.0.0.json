{
    "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:boolean isSingleThreadModel()",
            "org.apache.catalina.core.StandardWrapper:java.lang.String[] getServletMethods()",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()",
            "org.apache.catalina.core.StandardWrapper:void load()"
        ]
    },
    "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set addMapping(java.lang.String[])": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:boolean isSingleThreadModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:java.lang.String[] getServletMethods()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void loadOnStartup(org.apache.catalina.Container[])"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void applicationAnnotationsConfig()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void configureStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void loadOnStartup(org.apache.catalina.Container[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void applicationAnnotationsConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$1:void run()",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)",
            "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)",
            "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)",
            "org.apache.catalina.core.ContainerBase:void addChildInternal(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.StandardContext:void reload()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void startRecursive()",
            "org.apache.catalina.core.StandardPipeline:void startInternal()",
            "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void addValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void addService(org.apache.catalina.Service)",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardService:void addConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.core.StandardService:void addExecutor(org.apache.catalina.Executor)",
            "org.apache.catalina.core.StandardService:void startInternal()",
            "org.apache.catalina.manager.host.HostManagerServlet:void start(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.ManagerServlet:void start(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.realm.CombinedRealm:void startInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void startInternal()",
            "org.apache.catalina.startup.Catalina:void start()",
            "org.apache.catalina.startup.Embedded:void addEngine(org.apache.catalina.Engine)",
            "org.apache.catalina.startup.Embedded:void startInternal()",
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.Tomcat:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void fireLifecycleEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.startup.Embedded:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$2:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeLoader(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardManager(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeManager(java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createDataSourceRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJDBCRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJNDIRealm(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createMemoryRealm(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createUserDatabaseRealm(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeRealm(java.lang.String)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addChildInternal(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void access$000(org.apache.catalina.core.ContainerBase,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardEngine:void startInternal()",
            "org.apache.catalina.core.StandardHost:void startInternal()",
            "org.apache.catalina.core.StandardWrapper:void startInternal()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void reload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void backgroundProcess()",
            "org.apache.catalina.manager.ManagerServlet:void reload(java.io.PrintWriter,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void startRecursive()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardPipeline:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void <init>()",
            "org.apache.catalina.core.StandardEngine:void <init>()",
            "org.apache.catalina.core.StandardHost:void <init>()",
            "org.apache.catalina.core.StandardWrapper:void <init>()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void addValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void addValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardHost:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAccessLoggerValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteAddrValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteHostValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createSingleSignOn(java.lang.String)",
            "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void addService(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()"
        ]
    },
    "org.apache.catalina.core.StandardService:void addConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:void addConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()"
        ]
    },
    "org.apache.catalina.core.StandardService:void addExecutor(org.apache.catalina.Executor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardService:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void start(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String start(java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void start(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String start(java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.LockOutRealm:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void addEngine(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void check()",
            "org.apache.catalina.startup.HostConfig:void check(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)",
            "org.apache.catalina.core.StandardWrapper:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.startup.Embedded:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl$2:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$2:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.core.AsyncContextImpl:void start(java.lang.Runnable)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String getFileText(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void setLoader(org.apache.catalina.Loader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeLoader(java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeLoader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardManager(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeManager(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat$DefaultWebXmlListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Engine)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Host)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Engine)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Host)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createDataSourceRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJDBCRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJNDIRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createMemoryRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createUserDatabaseRealm(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardEngine:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardHost:void addChild(org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void access$000(org.apache.catalina.core.ContainerBase,org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void reload(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String reload(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Context createContext(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Host createHost(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:org.apache.catalina.Wrapper createWrapper()",
            "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper:void <init>(javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAccessLoggerValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteAddrValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteHostValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createSingleSignOn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.startup.Tomcat:void start()",
            "org.apache.catalina.startup.Tomcat:void stop()",
            "org.apache.catalina.startup.Tomcat:void destroy()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Service getService()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()",
            "org.apache.catalina.startup.Tomcat:void enableNaming()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAjpConnector(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpConnector(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpsConnector(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.catalina.startup.Embedded:void addConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.startup.Tomcat:void start()"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String start(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String start(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.realm.LockOutRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void check()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void check(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void run()",
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)",
            "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)",
            "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)",
            "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void stopInternal()",
            "org.apache.catalina.core.StandardContext:void reload()",
            "org.apache.catalina.core.StandardContext:boolean resourcesStop()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void removeService(org.apache.catalina.Service)",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardService:void removeConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.core.StandardService:void removeExecutor(org.apache.catalina.Executor)",
            "org.apache.catalina.core.StandardService:void stopInternal()",
            "org.apache.catalina.manager.host.HostManagerServlet:void stop(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.ManagerServlet:void stop(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.ManagerServlet:void undeploy(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.realm.CombinedRealm:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.startup.Catalina:void stop()",
            "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)",
            "org.apache.catalina.startup.Embedded:void stopInternal()",
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.Tomcat:void stop()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void startInternal()",
            "org.apache.catalina.connector.Connector:void stopInternal()",
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.ContainerBase:void stopInternal()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void startInternal()",
            "org.apache.catalina.core.StandardPipeline:void stopInternal()",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.core.StandardService:void startInternal()",
            "org.apache.catalina.core.StandardService:void stopInternal()",
            "org.apache.catalina.core.StandardThreadExecutor:void startInternal()",
            "org.apache.catalina.core.StandardThreadExecutor:void stopInternal()",
            "org.apache.catalina.loader.WebappLoader:void startInternal()",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.realm.RealmBase:void startInternal()",
            "org.apache.catalina.realm.RealmBase:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void startInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.StandardManager:void startInternal()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.session.StoreBase:void startInternal()",
            "org.apache.catalina.session.StoreBase:void stopInternal()",
            "org.apache.catalina.startup.Embedded:void startInternal()",
            "org.apache.catalina.startup.Embedded:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void init()",
            "org.apache.catalina.util.LifecycleBase:void start()",
            "org.apache.catalina.util.LifecycleBase:void stop()",
            "org.apache.catalina.util.LifecycleBase:void destroy()",
            "org.apache.catalina.valves.AccessLogValve:void startInternal()",
            "org.apache.catalina.valves.AccessLogValve:void stopInternal()",
            "org.apache.catalina.valves.CometConnectionManagerValve:void startInternal()",
            "org.apache.catalina.valves.CometConnectionManagerValve:void stopInternal()",
            "org.apache.catalina.valves.JDBCAccessLogValve:void startInternal()",
            "org.apache.catalina.valves.JDBCAccessLogValve:void stopInternal()",
            "org.apache.catalina.valves.SemaphoreValve:void startInternal()",
            "org.apache.catalina.valves.SemaphoreValve:void stopInternal()",
            "org.apache.catalina.valves.ValveBase:void startInternal()",
            "org.apache.catalina.valves.ValveBase:void stopInternal()"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void start(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.startup.Tomcat$DefaultWebXmlListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Request:boolean isUserInRole(java.lang.String)",
            "org.apache.catalina.connector.Request:void login(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Host)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Host)",
            "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Host)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerAddChild(org.apache.catalina.Container,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Service)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerAddChild(org.apache.catalina.Container,org.apache.catalina.Container)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processServicePropertyChange(org.apache.catalina.Service,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Host)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Engine)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerAddChild(org.apache.catalina.Container,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Host)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerRemoveChild(org.apache.catalina.Container,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Service)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processServicePropertyChange(org.apache.catalina.Service,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Host)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Engine)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerRemoveChild(org.apache.catalina.Container,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.HostConfig:void deployDescriptor(java.lang.String,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployWAR(java.lang.String,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployDirectory(java.lang.String,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void manageApp(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.UserConfig:void deploy(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String reload(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Context createContext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Host createHost(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void silence(java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:org.apache.catalina.Wrapper createWrapper()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper:void <init>(javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Service getService()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void enableNaming()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAjpConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpsConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$2:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeHost(java.lang.String)",
            "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)",
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.HostConfig:void undeployApps()",
            "org.apache.catalina.startup.HostConfig:void unmanageApp(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean resourcesStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardPipeline:void destroyInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:void removeValve(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardServer:void removeService(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:void removeService(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardService:void removeConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void destroyInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)",
            "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)"
        ]
    },
    "org.apache.catalina.core.StandardService:void removeExecutor(org.apache.catalina.Executor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardService:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void stop(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String stop(java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void stop(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String stop(java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void undeploy(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String undeploy(java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina$CatalinaShutdownHook:void run()",
            "org.apache.catalina.startup.Catalina:void start()"
        ]
    },
    "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Connector:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.connector.Connector:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.VirtualWebappLoader:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.CombinedRealm:void startInternal()",
            "org.apache.catalina.realm.DataSourceRealm:void startInternal()",
            "org.apache.catalina.realm.JAASRealm:void startInternal()",
            "org.apache.catalina.realm.JDBCRealm:void startInternal()",
            "org.apache.catalina.realm.JNDIRealm:void startInternal()",
            "org.apache.catalina.realm.MemoryRealm:void startInternal()",
            "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.CombinedRealm:void stopInternal()",
            "org.apache.catalina.realm.JDBCRealm:void stopInternal()",
            "org.apache.catalina.realm.JNDIRealm:void stopInternal()",
            "org.apache.catalina.realm.UserDatabaseRealm:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.JDBCStore:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.JDBCStore:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardServer:void initInternal()",
            "org.apache.catalina.core.StandardService:void initInternal()",
            "org.apache.catalina.startup.Catalina:void load()",
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void destroyInternal()",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void destroyInternal()",
            "org.apache.catalina.core.StandardService:void destroyInternal()",
            "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeHost(java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.Tomcat:void destroy()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch()"
        ]
    },
    "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)"
        ]
    },
    "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void login(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:void login(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerAddChild(org.apache.catalina.Container,org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void containerEvent(org.apache.catalina.ContainerEvent)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Server)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerPropertyChange(org.apache.catalina.Container,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processServerPropertyChange(org.apache.catalina.Server,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void processServicePropertyChange(org.apache.catalina.Service,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void propertyChange(java.beans.PropertyChangeEvent)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerRemoveChild(org.apache.catalina.Container,org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void containerEvent(org.apache.catalina.ContainerEvent)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Server)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerPropertyChange(org.apache.catalina.Container,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processServerPropertyChange(org.apache.catalina.Server,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDescriptor(java.lang.String,java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployDescriptors(java.io.File,java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployWAR(java.lang.String,java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployWARs(java.io.File,java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDirectory(java.lang.String,java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployDirectories(java.io.File,java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void manageApp(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.UserConfig:void deploy(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig:void deploy()"
        ]
    },
    "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void silence(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void destroyInternal()",
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.startup.ContextConfig:void configureStop()",
            "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String remove(java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeHost(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void undeployApps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void stop()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void unmanageApp(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeService(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Connector:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String stop(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String stop(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String undeploy(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Catalina$CatalinaShutdownHook:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$2:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.ContainerBase:void threadStart()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.loader.VirtualWebappLoader:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.DataSourceRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JAASRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JDBCRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.MemoryRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JDBCRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.UserDatabaseRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.JDBCStore:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.JDBCStore:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.core.StandardService:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void load(java.lang.String[])",
            "org.apache.catalina.startup.Catalina:void start()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardService:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean authenticate(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:void login(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void containerEvent(org.apache.catalina.ContainerEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void fireContainerEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerPropertyChange(org.apache.catalina.Container,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void propertyChange(java.beans.PropertyChangeEvent)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void processServerPropertyChange(org.apache.catalina.Server,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void propertyChange(java.beans.PropertyChangeEvent)"
        ]
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void propertyChange(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.ServerLifecycleListener:void destroyMBeans(org.apache.catalina.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServerLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void webConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void check(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDescriptors(java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployWARs(java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDirectories(java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps()"
        ]
    },
    "org.apache.catalina.startup.UserConfig:void deploy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig:void start()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void configureStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String remove(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void threadStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void load(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void access$000(org.apache.catalina.core.ApplicationFilterChain,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void fireContainerEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ContainerBase:void addChildInternal(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardContext:void addApplicationListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addApplicationParameter(org.apache.catalina.deploy.ApplicationParameter)",
            "org.apache.catalina.core.StandardContext:void addErrorPage(org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.core.StandardContext:void addFilterDef(org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.StandardContext:void addFilterMap(org.apache.catalina.deploy.FilterMap)",
            "org.apache.catalina.core.StandardContext:void addFilterMapBefore(org.apache.catalina.deploy.FilterMap)",
            "org.apache.catalina.core.StandardContext:void addInstanceListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addMessageDestination(org.apache.catalina.deploy.MessageDestination)",
            "org.apache.catalina.core.StandardContext:void addMessageDestinationRef(org.apache.catalina.deploy.MessageDestinationRef)",
            "org.apache.catalina.core.StandardContext:void addMimeMapping(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addParameter(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addRoleMapping(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addSecurityRole(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.catalina.core.StandardContext:void addWatchedResource(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addWelcomeFile(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addWrapperLifecycle(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addWrapperListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeApplicationListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeApplicationParameter(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeConstraint(org.apache.catalina.deploy.SecurityConstraint)",
            "org.apache.catalina.core.StandardContext:void removeErrorPage(org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.core.StandardContext:void removeFilterDef(org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.StandardContext:void removeFilterMap(org.apache.catalina.deploy.FilterMap)",
            "org.apache.catalina.core.StandardContext:void removeInstanceListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeMessageDestination(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeMessageDestinationRef(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeMimeMapping(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeParameter(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeRoleMapping(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeSecurityRole(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeServletMapping(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWatchedResource(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWelcomeFile(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWrapperLifecycle(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWrapperListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:boolean listenerStart()",
            "org.apache.catalina.core.StandardContext:boolean listenerStop()",
            "org.apache.catalina.core.StandardHost:void addAlias(java.lang.String)",
            "org.apache.catalina.core.StandardHost:void removeAlias(java.lang.String)",
            "org.apache.catalina.core.StandardPipeline:void addValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardWrapper:void addInitParameter(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void addMapping(java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void addSecurityReference(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()",
            "org.apache.catalina.core.StandardWrapper:void removeInitParameter(java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void removeMapping(java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void removeSecurityReference(java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void unload()",
            "org.apache.catalina.session.StandardSession:void fireContainerEvent(org.apache.catalina.Context,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployApps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void start()",
            "org.apache.catalina.startup.HostConfig:void check()"
        ]
    },
    "org.apache.catalina.startup.UserConfig:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.filters.AddDefaultCharsetFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestFilter:void process(java.lang.String,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.WebdavFixFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void access$000(org.apache.catalina.core.ApplicationFilterChain,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationContext:void clearAttributes()",
            "org.apache.catalina.core.ApplicationContextFacade:void removeAttribute(java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerRemoveChild(org.apache.catalina.Container,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.StandardContext:void setAltDDName(java.lang.String)",
            "org.apache.catalina.core.StandardContext:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void postWelcomeFiles()",
            "org.apache.catalina.core.StandardContext:void postWorkDirectory()",
            "org.apache.catalina.loader.WebappLoader:void setClassPath()",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Context)",
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addApplicationListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.TldConfig:void execute()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addApplicationParameter(org.apache.catalina.deploy.ApplicationParameter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addErrorPage(org.apache.catalina.deploy.ErrorPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addFilterDef(org.apache.catalina.deploy.FilterDef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String,javax.servlet.Filter)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addFilterMap(org.apache.catalina.deploy.FilterMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForServletNames(java.util.EnumSet,boolean,java.lang.String[])",
            "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForUrlPatterns(java.util.EnumSet,boolean,java.lang.String[])",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addFilterMapBefore(org.apache.catalina.deploy.FilterMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForServletNames(java.util.EnumSet,boolean,java.lang.String[])",
            "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForUrlPatterns(java.util.EnumSet,boolean,java.lang.String[])"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addInstanceListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addMessageDestination(org.apache.catalina.deploy.MessageDestination)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addMessageDestinationRef(org.apache.catalina.deploy.MessageDestinationRef)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addMimeMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addParameter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addRoleMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addSecurityRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:void declareRoles(java.lang.String[])",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.ContextConfig:void validateSecurityRoles()",
            "org.apache.catalina.startup.WebAnnotationSet:void loadClassAnnotation(org.apache.catalina.Context,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addWatchedResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processContextConfig(java.net.URL)",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getWebXmlSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addWelcomeFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addWrapperLifecycle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addWrapperListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeApplicationListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeApplicationParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeConstraint(org.apache.catalina.deploy.SecurityConstraint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set setServletSecurity(javax.servlet.ServletSecurityElement)",
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeErrorPage(org.apache.catalina.deploy.ErrorPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeFilterDef(org.apache.catalina.deploy.FilterDef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeFilterMap(org.apache.catalina.deploy.FilterMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeInstanceListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeMessageDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeMessageDestinationRef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeMimeMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeRoleMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeSecurityRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeServletMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeWatchedResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeWelcomeFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeWrapperLifecycle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeWrapperListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean listenerStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean listenerStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void addAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean)"
        ]
    },
    "org.apache.catalina.core.StandardHost:void removeAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void addInitParameter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationServletRegistration:boolean setInitParameter(java.lang.String,java.lang.String)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void addMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void addSecurityReference(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void removeInitParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void removeMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.catalina.core.StandardContext:void removeServletMapping(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void removeSecurityReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void stopInternal()",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void fireContainerEvent(org.apache.catalina.Context,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void tellNew()",
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object,boolean)",
            "org.apache.catalina.session.StandardSession:void removeAttributeInternal(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.startup.UserConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.filters.AddDefaultCharsetFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RequestFilter:void process(java.lang.String,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.WebdavFixFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:void clearAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerRemoveChild(org.apache.catalina.Container,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void postWelcomeFiles()",
            "org.apache.catalina.core.StandardContext:void postWorkDirectory()",
            "org.apache.catalina.loader.WebappLoader:void setClassPath()",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Context)",
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void setAltDDName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.Request:java.lang.String getRealPath(java.lang.String)",
            "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.connector.Request:void removeAttribute(java.lang.String)",
            "org.apache.catalina.connector.Request:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.connector.Request:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.connector.Request:java.lang.String getPathTranslated()",
            "org.apache.catalina.connector.Request:void changeSessionId(java.lang.String)",
            "org.apache.catalina.connector.Request:void parseParts()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletContext getContext(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.core.ApplicationSessionCookieConfig:javax.servlet.http.Cookie createSessionCookie(org.apache.catalina.Context,java.lang.String,boolean)",
            "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getConfiguredSessionCookieName(org.apache.catalina.Context)",
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.core.StandardContext:boolean listenerStart()",
            "org.apache.catalina.core.StandardContext:boolean listenerStop()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void postWelcomeFiles()",
            "org.apache.catalina.core.StandardContext:void postWorkDirectory()",
            "org.apache.catalina.core.StandardContext:java.lang.String getDeploymentDescriptor()",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.loader.WebappLoader:void setPermissions()",
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:void setClassPath()",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void createMBeans(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ServerLifecycleListener:void processContainerRemoveChild(org.apache.catalina.Container,org.apache.catalina.Container)",
            "org.apache.catalina.session.FileStore:java.io.File directory()",
            "org.apache.catalina.session.StandardManager:java.io.File file()",
            "org.apache.catalina.session.StandardSession:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.startup.ContextConfig:void webConfig()",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getContextWebXmlSource()",
            "org.apache.catalina.startup.ContextConfig:java.util.Map processJarsForWebFragments()",
            "org.apache.catalina.startup.TldConfig:void execute()",
            "org.apache.catalina.startup.TldConfig:void tldScanWebXml()",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$ServletContextElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void postWelcomeFiles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addWelcomeFile(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWelcomeFile(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void postWorkDirectory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void setWorkDir(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void setClassPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void addRepository(java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForServletNames(java.util.EnumSet,boolean,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForUrlPatterns(java.util.EnumSet,boolean,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContext:void declareRoles(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:void declareRoles(java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void validateSecurityRoles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadClassAnnotation(org.apache.catalina.Context,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationListenerAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationFilterAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set addMapping(java.lang.String[])",
            "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processContextConfig(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void contextConfig()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getWebXmlSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getGlobalWebXmlSource()",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getHostWebXmlSource()"
        ]
    },
    "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set setServletSecurity(javax.servlet.ServletSecurityElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationServletRegistration:boolean setInitParameter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set setInitParameters(java.util.Map)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void tellNew()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.StandardSession:void setId(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void expire(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void doUnload()",
            "org.apache.catalina.session.StandardSession:boolean isValid()",
            "org.apache.catalina.session.StandardSession:void expire()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void removeAttributeInternal(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.session.StandardSession:void removeAttribute(java.lang.String,boolean)",
            "org.apache.catalina.session.StandardSession:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.catalina.filters.RemoteAddrFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RemoteHostFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getRealPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getRealPath(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:javax.servlet.RequestDispatcher run()",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.connector.RequestFacade:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.connector.Request:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)",
            "org.apache.catalina.connector.RequestFacade:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.AsyncContextImpl$1:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardWrapperValve:void exception(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void setVariableValue(java.lang.String,java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getPathTranslated()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getPathTranslated()",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void changeSessionId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void parseParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Collection getParts()",
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()",
            "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal(boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletContext getContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletContext getContext(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:boolean isRootContext(javax.servlet.ServletContext)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()",
            "org.apache.catalina.ssi.SSIFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationSessionCookieConfig:javax.servlet.http.Cookie createSessionCookie(org.apache.catalina.Context,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void changeSessionId(java.lang.String)",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getConfiguredSessionCookieName(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getSessionCookieName(org.apache.catalina.Context)",
            "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getSessionUriParamName(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()"
        ]
    },
    "org.apache.catalina.core.StandardContext:java.lang.String getDeploymentDescriptor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()",
            "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)",
            "org.apache.catalina.core.StandardWrapper:void unavailable(javax.servlet.UnavailableException)",
            "org.apache.catalina.core.StandardWrapper:void unload()",
            "org.apache.catalina.core.StandardWrapper:void stopInternal()",
            "org.apache.catalina.core.StandardWrapperFacade:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void setPermissions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void startInternal()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void setRepositories()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void startInternal()"
        ]
    },
    "org.apache.catalina.session.FileStore:java.io.File directory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:int getSize()",
            "org.apache.catalina.session.FileStore:java.lang.String[] keys()",
            "org.apache.catalina.session.FileStore:java.io.File file(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardManager:java.io.File file()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void doLoad()",
            "org.apache.catalina.session.StandardManager:void doUnload()"
        ]
    },
    "org.apache.catalina.session.StandardSession:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSessionFacade:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getContextWebXmlSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:java.util.Map processJarsForWebFragments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void tldScanWebXml()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void execute()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void execute()",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$ServletContextElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void setWorkDir(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void postWorkDirectory()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void addRepository(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.VirtualWebappLoader:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:void declareRoles(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationListenerAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationFilterAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void contextConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void init()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getGlobalWebXmlSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getHostWebXmlSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set setInitParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session findSession(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void load()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession(java.lang.String)",
            "org.apache.catalina.session.ManagerBase:void changeSessionId(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.session.StandardManager:void doUnload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Void run()",
            "org.apache.catalina.session.StandardManager:void unload()"
        ]
    },
    "org.apache.catalina.session.StandardSession:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.session.JDBCStore:void save(org.apache.catalina.Session)",
            "org.apache.catalina.session.ManagerBase:void processExpires()",
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void expire()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOn:void deregister(java.lang.String)",
            "org.apache.catalina.manager.ManagerServlet:void sessions(java.io.PrintWriter,java.lang.String,int)",
            "org.apache.catalina.session.ManagerBase:void expireSession(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.StandardManager:void doLoad()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.session.StandardSession:void setMaxInactiveInterval(int)",
            "org.apache.catalina.session.StandardSession:void invalidate()",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.session.StandardSession:void putValue(java.lang.String,java.lang.Object)",
            "org.apache.catalina.session.StandardSessionFacade:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.session.StandardSessionFacade:void putValue(java.lang.String,java.lang.Object)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void removeAttribute(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void removeAttribute(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void writeObjectData(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getRealPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:javax.servlet.RequestDispatcher run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void setVariableValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void exception(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:void setVariableValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:void setVariableValue(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIMediator:void setDateVariables(boolean)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getPathTranslated()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Request:void login(java.lang.String,java.lang.String)",
            "org.apache.catalina.connector.Request:void logout()"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Collection getParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.http.Part getPart(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade:java.util.Collection getParts()",
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String upload(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.catalina.connector.Request:void parseParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)",
            "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:javax.servlet.http.HttpSession run()",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionIdElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean matchRequest(org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve$SessionIdElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletContext getContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:boolean isRootContext(javax.servlet.ServletContext)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:boolean isRootContext(javax.servlet.ServletContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void <init>(org.apache.catalina.Context,org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.Filter getFilter()"
        ]
    },
    "org.apache.catalina.ssi.SSIFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()"
        ]
    },
    "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getSessionCookieName(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.core.ApplicationSessionCookieConfig:javax.servlet.http.Cookie createSessionCookie(org.apache.catalina.Context,java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getSessionUriParamName(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Response:boolean doIsEncodeable(org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String toEncoded(java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.RealmBase:boolean hasUserDataPermission(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.SecurityConstraint[])"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void fireContainerEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void propertyChange(java.beans.PropertyChangeEvent)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void createNamingContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void unavailable(javax.servlet.UnavailableException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()",
            "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperFacade:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperFacade:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.catalina.session.FileStore:int getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.FileStore:java.lang.String[] keys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:void clear()",
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys:java.lang.String[] run()",
            "org.apache.catalina.session.PersistentManagerBase:void load()",
            "org.apache.catalina.session.StoreBase:void processExpires()"
        ]
    },
    "org.apache.catalina.session.FileStore:java.io.File file(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:org.apache.catalina.Session load(java.lang.String)",
            "org.apache.catalina.session.FileStore:void remove(java.lang.String)",
            "org.apache.catalina.session.FileStore:void save(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.session.StandardManager:void doLoad()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Void run()",
            "org.apache.catalina.session.StandardManager:void load()"
        ]
    },
    "org.apache.catalina.session.StandardSessionFacade:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSessionFacade:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)",
            "org.apache.catalina.core.StandardEngine:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.ContextConfig:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session findSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.manager.HTMLManagerServlet:org.apache.catalina.Session getSessionForPathAndId(java.lang.String,java.lang.String)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void load()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession()",
            "org.apache.catalina.session.StandardManager:org.apache.catalina.Session createSession(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void changeSessionId(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void stopInternal()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.RequestFacade:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$8:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession()"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.JDBCStore:void save(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void unload()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxActiveSwaps()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void deregister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.SingleSignOn:void sessionEvent(org.apache.catalina.SessionEvent)",
            "org.apache.catalina.authenticator.SingleSignOn:void removeSession(java.lang.String,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void sessions(java.io.PrintWriter,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String sessions(java.lang.String,int)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void expireSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSession:void setMaxInactiveInterval(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:int setSessionMaxInactiveInterval(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession(java.lang.String)",
            "org.apache.catalina.session.StandardSessionFacade:void setMaxInactiveInterval(int)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void invalidate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(java.lang.String,java.lang.String[])",
            "org.apache.catalina.session.StandardSessionFacade:void invalidate()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()"
        ]
    },
    "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void putValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSessionFacade:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.session.StandardSessionFacade:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.session.StandardSessionFacade:void putValue(java.lang.String,java.lang.Object)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSessionFacade:void putValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSession:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:boolean removeSessionAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.session.StandardSession:void removeValue(java.lang.String)",
            "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object,boolean)",
            "org.apache.catalina.session.StandardSessionFacade:void removeAttribute(java.lang.String)",
            "org.apache.catalina.session.StandardSessionFacade:void removeValue(java.lang.String)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void writeObjectData(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:void save(org.apache.catalina.Session)",
            "org.apache.catalina.session.JDBCStore:void save(org.apache.catalina.Session)",
            "org.apache.catalina.session.StandardManager:void doUnload()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void setVariableValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:void setDateVariables(boolean)",
            "org.apache.catalina.ssi.SSISet:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void setDateVariables(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:void setConfigTimeFmt(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectUrl(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectUrl(java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeUrl(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeURL(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeUrl(java.lang.String)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.lang.String getVariableValue(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIMediator:void setDateVariables(boolean)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)"
        ]
    },
    "org.apache.catalina.connector.Request:void logout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:void logout()"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.Part getPart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.Part getPart(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Collection getParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String upload(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String upload(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.String run()",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean)",
            "org.apache.catalina.manager.host.HostManagerServlet:boolean booleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean,boolean)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String expireSessions(java.lang.String,javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void expireSessions(java.io.PrintWriter,java.lang.String,javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.util.Enumeration run()",
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.String[] run()",
            "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:javax.servlet.http.HttpSession run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession()",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$SessionIdElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean matchRequest(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPath(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.net.URLConnection getURLConnection(java.lang.String,boolean)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void <init>(org.apache.catalina.Context,org.apache.catalina.deploy.FilterDef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:boolean filterStart()"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.Filter getFilter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.ApplicationFilterConfig:void setFilterDef(org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.connector.Response:boolean doIsEncodeable(org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)",
            "org.apache.catalina.connector.Response:boolean access$000(org.apache.catalina.connector.Response,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String toEncoded(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.RealmBase:boolean hasUserDataPermission(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.SecurityConstraint[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void propertyChange(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.NamingContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.session.FileStore:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void clearStore()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys:java.lang.String[] run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.FileStore:org.apache.catalina.Session load(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad:org.apache.catalina.Session run()",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.FileStore:void remove(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:void clear()",
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void removeSession(java.lang.String)",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.FileStore:void save(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void startInternal()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:org.apache.catalina.Session getSessionForPathAndId(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardManager:org.apache.catalina.Session createSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession()"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void unload()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$8:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxActiveSwaps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void sessionEvent(org.apache.catalina.SessionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void fireSessionEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void removeSession(java.lang.String,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOn:void sessionEvent(org.apache.catalina.SessionEvent)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String sessions(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:int setSessionMaxInactiveInterval(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSessionFacade:void setMaxInactiveInterval(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:int setSessionMaxInactiveInterval(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.session.StandardSessionFacade:void setMaxInactiveInterval(int)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSessionFacade:void invalidate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(java.lang.String,java.lang.String[])",
            "org.apache.catalina.session.StandardSessionFacade:void invalidate()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[])"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[])"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:boolean removeSessionAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSession:void removeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSessionFacade:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:boolean removeSessionAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.session.StandardSessionFacade:void removeAttribute(java.lang.String)",
            "org.apache.catalina.session.StandardSessionFacade:void removeValue(java.lang.String)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSessionFacade:void removeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSISet:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void setConfigTimeFmt(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:void <init>(org.apache.catalina.ssi.SSIExternalResolver,long,int)",
            "org.apache.catalina.ssi.SSIMediator:void setConfigTimeFmt(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeRedirectUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String getVariableValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIEcho:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIMediator:java.lang.String getVariableValue(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.util.Collection getVariableNames()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:void logout()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.Part getPart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.String run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean)",
            "org.apache.catalina.manager.host.HostManagerServlet:boolean booleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean,boolean)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String expireSessions(java.lang.String,javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void expireSessions(java.io.PrintWriter,java.lang.String,javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String add(javax.servlet.http.HttpServletRequest,java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:boolean booleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String expireSessions(java.lang.String,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.ManagerServlet:void expireSessions(java.io.PrintWriter,java.lang.String,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.util.Map run()",
            "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.util.Enumeration run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.String[] run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.net.URLConnection getURLConnection(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileLastModified(java.lang.String,boolean)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileSize(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean filterStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.ApplicationFilterChain:void access$100(org.apache.catalina.core.ApplicationFilterChain,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void setFilterDef(org.apache.catalina.deploy.FilterDef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void <init>(org.apache.catalina.Context,org.apache.catalina.deploy.FilterDef)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Response:boolean access$000(org.apache.catalina.connector.Response,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response$2:java.lang.Boolean run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void clearStore()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void load()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad:org.apache.catalina.Session run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void removeSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void remove(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void load()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void fireSessionEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void tellNew()",
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.session.StandardSession:void passivate()",
            "org.apache.catalina.session.StandardSession:void activate()"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void unload()"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void <init>(org.apache.catalina.ssi.SSIExternalResolver,long,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void setConfigTimeFmt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIConfig:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIEcho:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String getVariableValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.lang.String substituteVariables(java.lang.String)",
            "org.apache.catalina.ssi.SSIPrintenv:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.util.Collection getVariableNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIPrintenv:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String add(javax.servlet.http.HttpServletRequest,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.util.Map run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileLastModified(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:long getFileLastModified(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileSize(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:long getFileSize(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.filters.RequestFilter:void processCometEvent(java.lang.String,org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void access$100(org.apache.catalina.core.ApplicationFilterChain,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.connector.Response$2:java.lang.Boolean run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response$2:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void clearStore()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void removeSession(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void remove(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void setId(java.lang.String)",
            "org.apache.catalina.session.StandardSession:void expire(boolean)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void passivate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.StandardManager:void doUnload()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void activate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.StandardManager:void doLoad()"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void release()",
            "org.apache.catalina.core.ApplicationFilterConfig:void setFilterDef(org.apache.catalina.deploy.FilterDef)"
        ]
    },
    "org.apache.catalina.ssi.SSIConfig:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String substituteVariables(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$StringNode:java.lang.String getValue()",
            "org.apache.catalina.ssi.SSIConfig:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIFlastmod:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIFsize:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSISet:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIPrintenv:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:long getFileLastModified(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIFlastmod:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIFsize:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:long getFileSize(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIFsize:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.filters.RequestFilter:void processCometEvent(java.lang.String,org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.Response$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void release()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:boolean filterStop()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$StringNode:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$CompareNode:int compareBranches()",
            "org.apache.catalina.ssi.ExpressionParseTree$StringNode:boolean evaluate()"
        ]
    },
    "org.apache.catalina.ssi.SSIFlastmod:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIFsize:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.filters.RemoteAddrFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.filters.RemoteHostFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean filterStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$CompareNode:int compareBranches()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$EqualNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$GreaterThanNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$LessThanNode:boolean evaluate()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$StringNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$EqualNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$GreaterThanNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$LessThanNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIConditional:boolean evaluateArguments(java.lang.String[],java.lang.String[],org.apache.catalina.ssi.SSIMediator)"
        ]
    },
    "org.apache.catalina.ssi.SSIConditional:boolean evaluateArguments(java.lang.String[],java.lang.String[],org.apache.catalina.ssi.SSIMediator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIConditional:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIConditional:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    }
}
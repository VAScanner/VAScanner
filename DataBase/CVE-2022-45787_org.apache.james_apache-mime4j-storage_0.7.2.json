{
    "org.apache.james.mime4j.storage.TempFileStorageProvider:org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.james.mime4j.storage.AbstractStorageProvider:org.apache.james.mime4j.storage.Storage store(java.io.InputStream)",
            "org.apache.james.mime4j.storage.CipherStorageProvider:org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream()",
            "org.apache.james.mime4j.storage.ThresholdStorageProvider$ThresholdStorageOutputStream:void write0(byte[],int,int)"
        ]
    },
    "org.apache.james.mime4j.storage.AbstractStorageProvider:org.apache.james.mime4j.storage.Storage store(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.james.mime4j.storage.StorageBodyFactory:org.apache.james.mime4j.dom.BinaryBody binaryBody(java.io.InputStream)",
            "org.apache.james.mime4j.storage.StorageBodyFactory:org.apache.james.mime4j.dom.TextBody textBody(java.io.InputStream)",
            "org.apache.james.mime4j.storage.StorageBodyFactory:org.apache.james.mime4j.dom.TextBody textBody(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.james.mime4j.storage.CipherStorageProvider:org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.james.mime4j.storage.AbstractStorageProvider:org.apache.james.mime4j.storage.Storage store(java.io.InputStream)",
            "org.apache.james.mime4j.storage.CipherStorageProvider:org.apache.james.mime4j.storage.StorageOutputStream createStorageOutputStream()",
            "org.apache.james.mime4j.storage.ThresholdStorageProvider$ThresholdStorageOutputStream:void write0(byte[],int,int)"
        ]
    },
    "org.apache.james.mime4j.storage.ThresholdStorageProvider$ThresholdStorageOutputStream:void write0(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.james.mime4j.storage.StorageOutputStream:void write(int)",
            "org.apache.james.mime4j.storage.StorageOutputStream:void write(byte[])",
            "org.apache.james.mime4j.storage.StorageOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.james.mime4j.storage.StorageBodyFactory:org.apache.james.mime4j.dom.BinaryBody binaryBody(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.james.mime4j.storage.StorageBodyFactory:org.apache.james.mime4j.dom.TextBody textBody(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.james.mime4j.storage.StorageBodyFactory:org.apache.james.mime4j.dom.TextBody textBody(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.james.mime4j.storage.StorageOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.james.mime4j.storage.StorageOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.james.mime4j.storage.StorageOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorageOutputStream:void write0(byte[],int,int)",
            "org.apache.james.mime4j.storage.ThresholdStorageProvider$ThresholdStorageOutputStream:void write0(byte[],int,int)"
        ]
    },
    "org.apache.james.mime4j.storage.TempFileStorageProvider$TempFileStorageOutputStream:void write0(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.james.mime4j.storage.StorageOutputStream:void write(int)",
            "org.apache.james.mime4j.storage.StorageOutputStream:void write(byte[])",
            "org.apache.james.mime4j.storage.StorageOutputStream:void write(byte[],int,int)"
        ]
    }
}
{
    "org.apache.shiro.web.util.WebUtils:java.lang.String getRequestUri(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.shiro.web.util.WebUtils:java.lang.String getPathWithinApplication(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.shiro.web.util.WebUtils:java.lang.String getPathWithinApplication(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.PathMatchingFilter:java.lang.String getPathWithinApplication(javax.servlet.ServletRequest)",
            "org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver:java.lang.String getPathWithinApplication(javax.servlet.ServletRequest)"
        ]
    },
    "org.apache.shiro.web.filter.PathMatchingFilter:java.lang.String getPathWithinApplication(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.PathMatchingFilter:boolean pathsMatch(java.lang.String,javax.servlet.ServletRequest)"
        ]
    },
    "org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver:java.lang.String getPathWithinApplication(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver:javax.servlet.FilterChain getChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.shiro.web.filter.PathMatchingFilter:boolean pathsMatch(java.lang.String,javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.AccessControlFilter:boolean isLoginRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.shiro.web.filter.PathMatchingFilter:boolean preHandle(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver:javax.servlet.FilterChain getChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.AbstractShiroFilter:javax.servlet.FilterChain getExecutionChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.shiro.web.filter.AccessControlFilter:boolean isLoginRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.authc.AuthenticatingFilter:boolean isAccessAllowed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)",
            "org.apache.shiro.web.filter.authc.FormAuthenticationFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.shiro.web.filter.authc.UserFilter:boolean isAccessAllowed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)"
        ]
    },
    "org.apache.shiro.web.filter.PathMatchingFilter:boolean preHandle(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.AdviceFilter:void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.shiro.web.servlet.AbstractShiroFilter:javax.servlet.FilterChain getExecutionChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.AbstractShiroFilter:void executeChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.shiro.web.filter.authc.AuthenticatingFilter:boolean isAccessAllowed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.AccessControlFilter:boolean onPreHandle(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)",
            "org.apache.shiro.web.filter.authc.HttpAuthenticationFilter:boolean isAccessAllowed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)"
        ]
    },
    "org.apache.shiro.web.filter.authc.FormAuthenticationFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.AccessControlFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)",
            "org.apache.shiro.web.filter.authc.AuthenticatingFilter:void cleanup(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Exception)"
        ]
    },
    "org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.AccessControlFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)"
        ]
    },
    "org.apache.shiro.web.filter.authc.UserFilter:boolean isAccessAllowed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.AccessControlFilter:boolean onPreHandle(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)"
        ]
    },
    "org.apache.shiro.web.servlet.AdviceFilter:void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.OncePerRequestFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.shiro.web.servlet.AbstractShiroFilter:void executeChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.AbstractShiroFilter$1:java.lang.Object call()"
        ]
    },
    "org.apache.shiro.web.filter.AccessControlFilter:boolean onPreHandle(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.PathMatchingFilter:boolean isFilterChainContinued(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.shiro.web.filter.authc.HttpAuthenticationFilter:boolean isAccessAllowed(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.AccessControlFilter:boolean onPreHandle(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)"
        ]
    },
    "org.apache.shiro.web.filter.AccessControlFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.AccessControlFilter:boolean onPreHandle(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Object)"
        ]
    },
    "org.apache.shiro.web.filter.authc.AuthenticatingFilter:void cleanup(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.AdviceFilter:void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.shiro.web.servlet.OncePerRequestFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.ProxiedFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.shiro.web.servlet.AbstractShiroFilter$1:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.shiro.web.filter.PathMatchingFilter:boolean isFilterChainContinued(javax.servlet.ServletRequest,javax.servlet.ServletResponse,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.filter.PathMatchingFilter:boolean preHandle(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.shiro.web.servlet.ProxiedFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.AbstractShiroFilter:void executeChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.shiro.web.servlet.AdviceFilter:void executeChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.shiro.web.servlet.OncePerRequestFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.shiro.web.servlet.ProxiedFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.shiro.web.servlet.AdviceFilter:void executeChain(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.shiro.web.servlet.AdviceFilter:void doFilterInternal(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    }
}
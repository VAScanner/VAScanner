{
    "com.ctc.wstx.api.ReaderConfig:com.ctc.wstx.api.ReaderConfig createNonShared(com.ctc.wstx.util.SymbolTable)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.dtd.DTDSchemaFactory:com.ctc.wstx.api.ReaderConfig createPrivateReaderConfig()",
            "com.ctc.wstx.dtd.FullDTDReader:com.ctc.wstx.dtd.DTDSubset flattenExternalSubset(com.ctc.wstx.io.WstxInputSource,java.io.Writer,boolean,boolean,boolean)",
            "com.ctc.wstx.stax.WstxInputFactory:com.ctc.wstx.api.ReaderConfig createPrivateConfig()"
        ]
    },
    "com.ctc.wstx.sr.BasicStreamReader:int nextFromTree()": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:int next()"
        ]
    },
    "com.ctc.wstx.sr.AttributeCollector:int addDefaultAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.sr.InputElementStack:int addDefaultAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.ctc.wstx.sr.AttributeCollector:com.ctc.wstx.util.TextBuilder getNsBuilder(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.sr.AttributeCollector:com.ctc.wstx.util.TextBuilder getDefaultNsBuilder()",
            "com.ctc.wstx.sr.BasicStreamReader:boolean handleNsAttrs(char)"
        ]
    },
    "com.ctc.wstx.sr.AttributeCollector:com.ctc.wstx.util.TextBuilder getAttrBuilder(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.sr.AttributeCollector:int addDefaultAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "com.ctc.wstx.sr.BasicStreamReader:boolean handleNsAttrs(char)",
            "com.ctc.wstx.sr.BasicStreamReader:boolean handleNonNsAttrs(char)"
        ]
    },
    "com.ctc.wstx.sr.InputElementStack:void push(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:void handleStartElem(char)"
        ]
    },
    "com.ctc.wstx.sr.InputElementStack:int addDefaultAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.dtd.DTDValidatorBase:void doAddDefaultValue(com.ctc.wstx.dtd.DTDAttribute)"
        ]
    },
    "com.ctc.wstx.api.ReaderConfig:boolean setProperty(java.lang.String,int,java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.api.CommonConfig:boolean setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "com.ctc.wstx.api.ReaderConfig:java.lang.Object getProperty(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.ctc.wstx.api.CommonConfig:java.lang.Object getProperty(java.lang.String)",
            "com.ctc.wstx.api.CommonConfig:java.lang.Object safeGetProperty(java.lang.String)"
        ]
    },
    "com.ctc.wstx.dtd.DTDSchemaFactory:com.ctc.wstx.api.ReaderConfig createPrivateReaderConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.dtd.DTDSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)",
            "com.ctc.wstx.dtd.DTDSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.Reader,java.lang.String,java.lang.String)",
            "com.ctc.wstx.dtd.DTDSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.net.URL)",
            "com.ctc.wstx.dtd.DTDSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.File)"
        ]
    },
    "com.ctc.wstx.dtd.FullDTDReader:com.ctc.wstx.dtd.DTDSubset flattenExternalSubset(com.ctc.wstx.io.WstxInputSource,java.io.Writer,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:com.ctc.wstx.api.ReaderConfig createPrivateConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sax.WstxSAXParser:void <init>(com.ctc.wstx.stax.WstxInputFactory,boolean)",
            "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLEventReader2 createXMLEventReader(java.net.URL)",
            "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createXMLStreamReader(java.net.URL)",
            "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.InputStream,java.lang.String,boolean,boolean)",
            "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.Reader,boolean,boolean)",
            "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createSR(java.io.File,boolean,boolean)",
            "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createSR(javax.xml.transform.Source,boolean)"
        ]
    },
    "com.ctc.wstx.sr.BasicStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sax.WstxSAXParser:void fireEvents()",
            "com.ctc.wstx.sr.BasicStreamReader:java.lang.String getElementText()",
            "com.ctc.wstx.sr.BasicStreamReader:int nextTag()",
            "com.ctc.wstx.sr.BasicStreamReader:void skipElement()",
            "com.ctc.wstx.sr.TypedStreamReader:void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)",
            "com.ctc.wstx.sr.TypedStreamReader:int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)",
            "com.ctc.wstx.sr.TypedStreamReader:int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)"
        ]
    },
    "com.ctc.wstx.sr.AttributeCollector:com.ctc.wstx.util.TextBuilder getDefaultNsBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:boolean handleNsAttrs(char)"
        ]
    },
    "com.ctc.wstx.sr.BasicStreamReader:boolean handleNsAttrs(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:void handleStartElem(char)"
        ]
    },
    "com.ctc.wstx.sr.BasicStreamReader:boolean handleNonNsAttrs(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:void handleStartElem(char)"
        ]
    },
    "com.ctc.wstx.sr.BasicStreamReader:void handleStartElem(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:void handleRootElem(char)",
            "com.ctc.wstx.sr.BasicStreamReader:int nextFromTree()"
        ]
    },
    "com.ctc.wstx.dtd.DTDValidatorBase:void doAddDefaultValue(com.ctc.wstx.dtd.DTDAttribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.dtd.DTDTypingNonValidator:int validateElementAndAttributes()",
            "com.ctc.wstx.dtd.DTDValidator:int validateElementAndAttributes()"
        ]
    },
    "com.ctc.wstx.api.CommonConfig:boolean setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.dom.WstxDOMWrappingReader:boolean setProperty(java.lang.String,java.lang.Object)",
            "com.ctc.wstx.dom.WstxDOMWrappingWriter:boolean setProperty(java.lang.String,java.lang.Object)",
            "com.ctc.wstx.dtd.DTDSchemaFactory:boolean setProperty(java.lang.String,java.lang.Object)",
            "com.ctc.wstx.msv.BaseSchemaFactory:boolean setProperty(java.lang.String,java.lang.Object)",
            "com.ctc.wstx.sr.BasicStreamReader:boolean setProperty(java.lang.String,java.lang.Object)",
            "com.ctc.wstx.sr.ValidatingStreamReader:void setFeature(java.lang.String,java.lang.Object)",
            "com.ctc.wstx.stax.WstxInputFactory:void setProperty(java.lang.String,java.lang.Object)",
            "com.ctc.wstx.stax.WstxOutputFactory:void setProperty(java.lang.String,java.lang.Object)",
            "com.ctc.wstx.sw.BaseStreamWriter:boolean setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "com.ctc.wstx.api.CommonConfig:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.dom.WstxDOMWrappingReader:java.lang.Object getProperty(java.lang.String)",
            "com.ctc.wstx.dom.WstxDOMWrappingWriter:java.lang.Object getProperty(java.lang.String)",
            "com.ctc.wstx.dtd.DTDSchemaFactory:java.lang.Object getProperty(java.lang.String)",
            "com.ctc.wstx.msv.BaseSchemaFactory:java.lang.Object getProperty(java.lang.String)",
            "com.ctc.wstx.stax.WstxInputFactory:java.lang.Object getProperty(java.lang.String)",
            "com.ctc.wstx.stax.WstxOutputFactory:java.lang.Object getProperty(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "com.ctc.wstx.api.CommonConfig:java.lang.Object safeGetProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "com.ctc.wstx.dtd.DTDSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.dtd.DTDSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.Reader,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.dtd.DTDSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.dtd.DTDSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema createSchema(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sax.WstxSAXParser:void <init>(com.ctc.wstx.stax.WstxInputFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sax.WstxSAXParser:void <init>()",
            "com.ctc.wstx.sax.WstxSAXParserFactory:javax.xml.parsers.SAXParser newSAXParser()"
        ]
    },
    "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLEventReader2 createXMLEventReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createXMLStreamReader(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.InputStream,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream,java.lang.String)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.InputStream)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)"
        ]
    },
    "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createSR(java.lang.String,java.io.Reader,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.Reader)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.Reader)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.Reader)"
        ]
    },
    "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createSR(java.io.File,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLEventReader2 createXMLEventReader(java.io.File)",
            "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createXMLStreamReader(java.io.File)"
        ]
    },
    "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createSR(javax.xml.transform.Source,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(javax.xml.transform.Source)",
            "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)"
        ]
    },
    "com.ctc.wstx.sax.WstxSAXParser:void fireEvents()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sax.WstxSAXParser:void parse(org.xml.sax.InputSource)"
        ]
    },
    "com.ctc.wstx.sr.BasicStreamReader:java.lang.String getElementText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.BasicStreamReader:int nextTag()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.BasicStreamReader:void skipElement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:void getElementAs(org.codehaus.stax2.typed.TypedValueDecoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.TypedStreamReader:boolean getElementAsBoolean()",
            "com.ctc.wstx.sr.TypedStreamReader:int getElementAsInt()",
            "com.ctc.wstx.sr.TypedStreamReader:long getElementAsLong()",
            "com.ctc.wstx.sr.TypedStreamReader:float getElementAsFloat()",
            "com.ctc.wstx.sr.TypedStreamReader:double getElementAsDouble()",
            "com.ctc.wstx.sr.TypedStreamReader:java.math.BigInteger getElementAsInteger()",
            "com.ctc.wstx.sr.TypedStreamReader:java.math.BigDecimal getElementAsDecimal()",
            "com.ctc.wstx.sr.TypedStreamReader:javax.xml.namespace.QName getElementAsQName()"
        ]
    },
    "com.ctc.wstx.sr.TypedStreamReader:int readElementAsArray(org.codehaus.stax2.typed.TypedArrayDecoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.TypedStreamReader:int readElementAsIntArray(int[],int,int)",
            "com.ctc.wstx.sr.TypedStreamReader:int readElementAsLongArray(long[],int,int)",
            "com.ctc.wstx.sr.TypedStreamReader:int readElementAsFloatArray(float[],int,int)",
            "com.ctc.wstx.sr.TypedStreamReader:int readElementAsDoubleArray(double[],int,int)"
        ]
    },
    "com.ctc.wstx.sr.TypedStreamReader:int readElementAsBinary(byte[],int,int,org.codehaus.stax2.typed.Base64Variant)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.TypedStreamReader:byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant)",
            "com.ctc.wstx.sr.TypedStreamReader:int readElementAsBinary(byte[],int,int)"
        ]
    },
    "com.ctc.wstx.sr.BasicStreamReader:void handleRootElem(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:boolean nextFromProlog(boolean)",
            "com.ctc.wstx.sr.BasicStreamReader:int nextFromMultiDocState()"
        ]
    },
    "com.ctc.wstx.dtd.DTDTypingNonValidator:int validateElementAndAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.InputElementStack:int resolveAndValidateElement()",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void closeStartElement(boolean)",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void doWriteEndTag(javax.xml.namespace.QName,boolean)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void closeStartElement(boolean)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void doWriteEndTag(java.lang.String,boolean)"
        ]
    },
    "com.ctc.wstx.dtd.DTDValidator:int validateElementAndAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.InputElementStack:int resolveAndValidateElement()",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void closeStartElement(boolean)",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void doWriteEndTag(javax.xml.namespace.QName,boolean)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void closeStartElement(boolean)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void doWriteEndTag(java.lang.String,boolean)"
        ]
    },
    "com.ctc.wstx.dom.WstxDOMWrappingReader:boolean setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.dom.WstxDOMWrappingWriter:boolean setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.dtd.DTDSchemaFactory:boolean setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.msv.BaseSchemaFactory:boolean setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.BasicStreamReader:boolean setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.evt.WstxEventReader:boolean setProperty(java.lang.String,java.lang.Object)"
        ]
    },
    "com.ctc.wstx.sr.ValidatingStreamReader:void setFeature(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxOutputFactory:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:boolean setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.dom.WstxDOMWrappingReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.dom.WstxDOMWrappingWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.dtd.DTDSchemaFactory:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.msv.BaseSchemaFactory:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxOutputFactory:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.BasicStreamReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.ValidatingStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "com.ctc.wstx.sax.WstxSAXParser:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sax.WstxSAXParserFactory:javax.xml.parsers.SAXParser newSAXParser()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String,java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLEventReader2 createXMLEventReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:org.codehaus.stax2.XMLStreamReader2 createXMLStreamReader(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLEventReader createXMLEventReader(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.stax.WstxInputFactory:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sax.WstxSAXParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sax.WstxSAXParser:void parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)",
            "com.ctc.wstx.sax.WstxSAXParser:void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)",
            "com.ctc.wstx.sax.WstxSAXParser:void parse(java.lang.String)"
        ]
    },
    "com.ctc.wstx.sr.TypedStreamReader:boolean getElementAsBoolean()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:int getElementAsInt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:long getElementAsLong()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:float getElementAsFloat()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:double getElementAsDouble()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:java.math.BigInteger getElementAsInteger()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:java.math.BigDecimal getElementAsDecimal()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:javax.xml.namespace.QName getElementAsQName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:int readElementAsIntArray(int[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:int readElementAsLongArray(long[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:int readElementAsFloatArray(float[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:int readElementAsDoubleArray(double[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:byte[] getElementAsBinary(org.codehaus.stax2.typed.Base64Variant)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.TypedStreamReader:byte[] getElementAsBinary()"
        ]
    },
    "com.ctc.wstx.sr.TypedStreamReader:int readElementAsBinary(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.BasicStreamReader:boolean nextFromProlog(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:int next()",
            "com.ctc.wstx.sr.BasicStreamReader:int nextFromMultiDocState()",
            "com.ctc.wstx.sr.BasicStreamReader:int closeContentTree()"
        ]
    },
    "com.ctc.wstx.sr.BasicStreamReader:int nextFromMultiDocState()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:int next()"
        ]
    },
    "com.ctc.wstx.sr.InputElementStack:int resolveAndValidateElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:void handleStartElem(char)"
        ]
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void closeStartElement(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseNsStreamWriter:void checkStartElement(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void doWriteEndTag(javax.xml.namespace.QName,boolean)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCData(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(char[],int,int)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeComment(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeEntityRef(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeProcessingInstruction(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCData(char[],int,int)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(java.lang.String,int,int)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(char[],int,int)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(javax.xml.stream.events.Characters)",
            "com.ctc.wstx.sw.BaseStreamWriter:void _finishDocument(boolean)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeTypedElement(org.codehaus.stax2.ri.typed.AsciiValueEncoder)"
        ]
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void doWriteEndTag(javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEndElement()",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeFullEndElement()",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEndElement(javax.xml.namespace.QName)"
        ]
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void closeStartElement(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCData(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(char[],int,int)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeComment(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeEntityRef(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeProcessingInstruction(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCData(char[],int,int)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(java.lang.String)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(java.lang.String,int,int)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(char[],int,int)",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(javax.xml.stream.events.Characters)",
            "com.ctc.wstx.sw.BaseStreamWriter:void _finishDocument(boolean)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void doWriteStartElement(java.lang.String)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void doWriteEndTag(java.lang.String,boolean)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeTypedElement(org.codehaus.stax2.ri.typed.AsciiValueEncoder)"
        ]
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void doWriteEndTag(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeEndElement()",
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeFullEndElement()",
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeEndElement(javax.xml.namespace.QName)"
        ]
    },
    "com.ctc.wstx.evt.WstxEventReader:boolean setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.ValidatingStreamReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sax.WstxSAXParser:void parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sax.WstxSAXParser:void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sax.WstxSAXParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.TypedStreamReader:byte[] getElementAsBinary()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sr.BasicStreamReader:int closeContentTree()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sr.BasicStreamReader:int nextFromTree()"
        ]
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void checkStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEmptyElement(java.lang.String)",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeStartElement(java.lang.String)",
            "com.ctc.wstx.sw.RepairingNsStreamWriter:void writeStartOrEmpty(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.RepairingNsStreamWriter:void writeStartOrEmpty(java.lang.String,java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.SimpleNsStreamWriter:void writeStartOrEmpty(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.SimpleNsStreamWriter:void writeStartOrEmpty(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeCData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCData(char[],int,int)"
        ]
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void writeCData(java.lang.String)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeQName(javax.xml.namespace.QName)"
        ]
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeEntityRef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)"
        ]
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeProcessingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void writeProcessingInstruction(java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeCData(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void writeSpace(java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeRaw(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void writeSpace(char[],int,int)"
        ]
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeCharacters(javax.xml.stream.events.Characters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void _finishDocument(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void close()",
            "com.ctc.wstx.sw.BaseStreamWriter:void writeEndDocument()",
            "com.ctc.wstx.sw.BaseStreamWriter:void closeCompletely()"
        ]
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeTypedElement(org.codehaus.stax2.ri.typed.AsciiValueEncoder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.TypedStreamWriter:void writeBoolean(boolean)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeInt(int)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeLong(long)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeFloat(float)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeDouble(double)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeInteger(java.math.BigInteger)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeDecimal(java.math.BigDecimal)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeIntArray(int[],int,int)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeLongArray(long[],int,int)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeFloatArray(float[],int,int)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeDoubleArray(double[],int,int)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeBinary(byte[],int,int)",
            "com.ctc.wstx.sw.TypedStreamWriter:void writeBinary(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)"
        ]
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)",
            "com.ctc.wstx.sw.BaseStreamWriter:void _finishDocument(boolean)"
        ]
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeFullEndElement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEndElement(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void doWriteStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeEmptyElement(java.lang.String)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)",
            "com.ctc.wstx.sw.BaseStreamWriter:void _finishDocument(boolean)"
        ]
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeFullEndElement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeEndElement(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.SimpleNsStreamWriter:void writeStartElement(javax.xml.stream.events.StartElement)"
        ]
    },
    "com.ctc.wstx.sw.RepairingNsStreamWriter:void writeStartOrEmpty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.RepairingNsStreamWriter:void writeStartOrEmpty(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.SimpleNsStreamWriter:void writeStartOrEmpty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.SimpleNsStreamWriter:void writeStartOrEmpty(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.BaseNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeQName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeProcessingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeSpace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeSpace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void writeEndDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)"
        ]
    },
    "com.ctc.wstx.sw.BaseStreamWriter:void closeCompletely()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeBoolean(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeInt(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeLong(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeFloat(float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeDouble(double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeInteger(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeDecimal(java.math.BigDecimal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeIntArray(int[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeLongArray(long[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeFloatArray(float[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeDoubleArray(double[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeBinary(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.TypedStreamWriter:void writeBinary(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void writeStartElement(javax.xml.stream.events.StartElement)",
            "com.ctc.wstx.sw.NonNsStreamWriter:void copyStartElement(com.ctc.wstx.sr.InputElementStack,com.ctc.wstx.sr.AttributeCollector)"
        ]
    },
    "com.ctc.wstx.sw.SimpleNsStreamWriter:void writeStartElement(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.BaseNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.evt.BaseStartElement:void writeUsing(org.codehaus.stax2.XMLStreamWriter2)",
            "com.ctc.wstx.sw.RepairingNsStreamWriter:void writeStartElement(javax.xml.stream.events.StartElement)",
            "com.ctc.wstx.sw.RepairingNsStreamWriter:void copyStartElement(com.ctc.wstx.sr.InputElementStack,com.ctc.wstx.sr.AttributeCollector)",
            "com.ctc.wstx.sw.SimpleNsStreamWriter:void writeStartElement(javax.xml.stream.events.StartElement)",
            "com.ctc.wstx.sw.SimpleNsStreamWriter:void copyStartElement(com.ctc.wstx.sr.InputElementStack,com.ctc.wstx.sr.AttributeCollector)"
        ]
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.evt.BaseStartElement:void writeUsing(org.codehaus.stax2.XMLStreamWriter2)"
        ]
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void writeStartElement(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.NonNsStreamWriter:void copyStartElement(com.ctc.wstx.sr.InputElementStack,com.ctc.wstx.sr.AttributeCollector)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)"
        ]
    },
    "com.ctc.wstx.evt.BaseStartElement:void writeUsing(org.codehaus.stax2.XMLStreamWriter2)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.RepairingNsStreamWriter:void writeStartElement(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.ctc.wstx.sw.RepairingNsStreamWriter:void copyStartElement(com.ctc.wstx.sr.InputElementStack,com.ctc.wstx.sr.AttributeCollector)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)"
        ]
    },
    "com.ctc.wstx.sw.SimpleNsStreamWriter:void copyStartElement(com.ctc.wstx.sr.InputElementStack,com.ctc.wstx.sr.AttributeCollector)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.ctc.wstx.sw.BaseStreamWriter:void copyEventFromReader(org.codehaus.stax2.XMLStreamReader2,boolean)"
        ]
    }
}
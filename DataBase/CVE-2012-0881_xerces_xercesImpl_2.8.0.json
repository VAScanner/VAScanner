{
    "org.apache.xerces.util.SymbolHash:void clear()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)",
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <init>()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addIDConstraintDecl(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.identity.IdentityConstraint)",
            "org.apache.xerces.impl.xs.XSConstraints:void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[])",
            "org.apache.xerces.impl.xs.XSModelImpl:void buildSubGroups()",
            "org.apache.xerces.parsers.AbstractSAXParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:void rehash()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:int hash(char[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:int hash(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:void rehash()",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:int hash(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:int hash(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:void prepareAndPopulateTableView()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.XMLAttributesImpl:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:org.apache.xerces.xni.QName checkDuplicatesNS()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:int getTableViewBucket(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.XMLAttributesImpl:org.apache.xerces.xni.QName checkDuplicatesNS()"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:void prepareTableView()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.XMLAttributesImpl:org.apache.xerces.xni.QName checkDuplicatesNS()",
            "org.apache.xerces.util.XMLAttributesImpl:void prepareAndPopulateTableView()"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.xs.util.XSNamedMap4Types:org.apache.xerces.xs.XSObject itemByName(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.util.XSNamedMapImpl:org.apache.xerces.xs.XSObject itemByName(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <init>()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeDecl getGlobalAttributeDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeGroupDecl getGlobalAttributeGroupDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl getGlobalElementDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl getGlobalGroupDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSNotationDecl getGlobalNotationDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraintDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.XSConstraints:void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSObjectList getSubstitutionGroup(org.apache.xerces.xs.XSElementDeclaration)",
            "org.apache.xerces.parsers.AbstractSAXParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:int getTableViewBucket(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.XMLAttributesImpl:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.XMLAttributesImpl:void prepareAndPopulateTableView()"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void endDTD(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addIDConstraintDecl(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.identity.IdentityConstraint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.util.SymbolHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel()",
            "org.apache.xerces.impl.xs.ElementPSVImpl:org.apache.xerces.xs.XSModel getSchemaInformation()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.xni.grammars.XSGrammar[])",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)"
        ]
    },
    "org.apache.xerces.impl.xs.XSModelImpl:void buildSubGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[])"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.ShadowedSymbolTable:int hash(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:int hash(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:void rehash()",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPI()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLScanner:void scanPI()"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPI()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLScanner:void scanPI()"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)"
        ]
    },
    "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.parsers.DOMParserImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:boolean hasNonSchemaAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getURI(int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getLocalName(int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotationElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:boolean hasNonSchemaAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getName(int)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.parsers.DOMParserImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getName(int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:void getName(int,org.apache.xerces.xni.QName)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:boolean isEntityDeclared(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.impl.xs.SchemaGrammar loadSchema(org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.xni.parser.XMLInputSource,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport:java.lang.String getURI(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getURI(java.lang.String)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void finishNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void access$200(org.apache.xerces.jaxp.validation.DOMValidatorHelper,org.apache.xerces.xni.QName,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String access$700(org.apache.xerces.jaxp.JAXPValidatorComponent,java.lang.String)"
        ]
    },
    "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()",
            "org.apache.xerces.util.NamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean access$300(org.apache.xerces.xpointer.ElementSchemePointer$Scanner,org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean access$400(org.apache.xerces.xpointer.XPointerHandler$Scanner,org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.util.ShadowedSymbolTable:int hash(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:int hash(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void access$400(org.apache.xerces.jaxp.JAXPValidatorComponent,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSNamedMap4Types:org.apache.xerces.xs.XSObject itemByName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.util.XSNamedMapImpl:org.apache.xerces.xs.XSObject itemByName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeDecl getGlobalAttributeDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeGroupDecl getGlobalAttributeGroupDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl getGlobalElementDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl getMatchingElemDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl getGlobalGroupDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSNotationDecl getGlobalNotationDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:boolean checkBuiltIn(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XSConstraints:void <clinit>()",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraintDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSObjectList getSubstitutionGroup(org.apache.xerces.xs.XSElementDeclaration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void loadGrammar(org.apache.xerces.xni.parser.XMLInputSource[])",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarPreparser:org.apache.xerces.xni.grammars.Grammar preparseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.impl.xs.SchemaGrammar loadSchema(org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.xni.parser.XMLInputSource,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void endEntity()"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.FullDVFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:boolean checkBuiltIn(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType errorType(java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel()",
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)",
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <init>()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <init>(java.lang.String,org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.util.SimpleLocator)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addRedefinedGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.util.SimpleLocator)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSComplexTypeDecl[] getUncheckedComplexTypeDecls()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.util.SimpleLocator[] getUncheckedCTLocators()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl[] getRedefinedGroupDecls()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.util.SimpleLocator[] getRGLocators()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void setUncheckedTypeNum(int)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroups()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSNamedMap getComponents(short)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.xni.grammars.XSGrammar[])",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean substitutionGroupOK(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,short)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean getDBMethods(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XSComplexTypeDecl:boolean derivedFromType(org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSComplexTypeDecl:boolean derivedFrom(java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSConstraints:void <clinit>()",
            "org.apache.xerces.impl.xs.XSGrammarBucket:org.apache.xerces.impl.xs.SchemaGrammar[] getGrammars()",
            "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[])"
        ]
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void putGrammar(org.apache.xerces.xni.grammars.Grammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void resolveKeyRefs()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)"
        ]
    },
    "org.apache.xerces.impl.xs.ElementPSVImpl:org.apache.xerces.xs.XSModel getSchemaInformation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.PSVIElementNSImpl:void setPSVI(org.apache.xerces.xs.ElementPSVI)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.xni.grammars.XSGrammar[])",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.xni.grammars.XSGrammar[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()"
        ]
    },
    "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanPI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)",
            "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int,int)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.DOMParserImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:boolean hasNonSchemaAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.DOMParserImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotationElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:void getName(int,org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.identity.XPathMatcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:boolean isEntityDeclared(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityDeclared(java.lang.String)",
            "org.apache.xerces.impl.validation.ConfigurableValidationState:boolean isEntityDeclared(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:boolean isEntityUnparsed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.dtd.ENTITYDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.EntityDV:void checkExtraRules(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityUnparsed(java.lang.String)",
            "org.apache.xerces.impl.validation.ConfigurableValidationState:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:void parseExpression(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseLocalElements()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.impl.xs.SchemaGrammar loadSchema(org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.xni.parser.XMLInputSource,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaNamespaceSupport:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()",
            "org.apache.xerces.util.NamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.util.NamespaceSupport:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()",
            "org.apache.xerces.util.NamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void finishNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void access$200(org.apache.xerces.jaxp.validation.DOMValidatorHelper,org.apache.xerces.xni.QName,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttributes2(org.xml.sax.ext.Attributes2)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String access$700(org.apache.xerces.jaxp.JAXPValidatorComponent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:org.apache.xerces.xni.QName toQName(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.NamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.MultipleScopeNamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean access$300(org.apache.xerces.xpointer.ElementSchemePointer$Scanner,org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.ElementSchemePointer:void parseXPointer(java.lang.String)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean access$400(org.apache.xerces.xpointer.XPointerHandler$Scanner,org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler:void parseXPointer(java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Element)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.DocumentFragment)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void access$400(org.apache.xerces.jaxp.JAXPValidatorComponent,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGrpOrAttrGrpRedefinedByRestriction(int,org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl getMatchingElemDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <init>(org.apache.xerces.impl.xs.traversers.XSDHandler)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] getAvailableArray()",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void returnAttrArray(java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSParticleDecl checkOccurrences(org.apache.xerces.impl.xs.XSParticleDecl,java.lang.String,org.w3c.dom.Element,int,long)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:boolean checkBuiltIn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)",
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.StandardParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSAllCM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.Object[] validRestrictionOf(java.lang.String,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition,java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:void gatherChildren(int,org.apache.xerces.impl.xs.XSParticleDecl,java.util.Vector)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSCompat(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSSubset(org.apache.xerces.impl.xs.XSWildcardDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(java.lang.Object,java.lang.Object,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void loadGrammar(org.apache.xerces.xni.parser.XMLInputSource[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory:javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarPreparser:org.apache.xerces.xni.grammars.Grammar preparseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void finishNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarPreparser:org.apache.xerces.xni.grammars.Grammar preparseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void endEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityScanner:boolean load(int,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType errorType(java.lang.String,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void <init>(java.lang.String,org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.util.SimpleLocator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addRedefinedGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.util.SimpleLocator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSComplexTypeDecl[] getUncheckedComplexTypeDecls()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.util.SimpleLocator[] getUncheckedCTLocators()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl[] getRedefinedGroupDecls()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.util.SimpleLocator[] getRGLocators()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void setUncheckedTypeNum(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSModelImpl:void buildSubGroups()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSNamedMap getComponents(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean substitutionGroupOK(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl getMatchingElemDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean inSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean getDBMethods(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup[] getSubGroupB(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)"
        ]
    },
    "org.apache.xerces.impl.xs.XSComplexTypeDecl:boolean derivedFromType(org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSComplexTypeDecl:boolean derivedFrom(java.lang.String,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.Object[] validRestrictionOf(java.lang.String,org.apache.xerces.impl.xs.XSAttributeGroupDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)"
        ]
    },
    "org.apache.xerces.impl.xs.XSGrammarBucket:org.apache.xerces.impl.xs.SchemaGrammar[] getGrammars()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void addGrammars(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.impl.xs.XSGrammarBucket)"
        ]
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void putGrammar(org.apache.xerces.xni.grammars.Grammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.XMLGrammarPoolImpl:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void resolveKeyRefs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.dom.PSVIElementNSImpl:void setPSVI(org.apache.xerces.xs.ElementPSVI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanXMLDeclOrTextDecl(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLScanner:void scanPI()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLScanner:void scanPI()"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.NonValidatingConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void normalizeDocument()"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.XPathMatcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityDeclared(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityDeclared(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ConfigurableValidationState:boolean isEntityDeclared(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityDeclared(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dv.dtd.ENTITYDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void validateDTDattribute(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dv.dtd.ListDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.EntityDV:void checkExtraRules(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkExtraRules(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityUnparsed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.dtd.ENTITYDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.EntityDV:void checkExtraRules(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ConfigurableValidationState:boolean isEntityUnparsed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.dtd.ENTITYDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.EntityDV:void checkExtraRules(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void main(java.lang.String[])",
            "org.apache.xerces.impl.xs.identity.Field$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.identity.Selector$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseLocalElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.util.NamespaceSupport:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttributes2(org.xml.sax.ext.Attributes2)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:org.apache.xerces.xni.QName toQName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.MultipleScopeNamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeNamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.ElementSchemePointer:void parseXPointer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler:void parseXPointer(java.lang.String)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void parseXPointer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.DocumentFragment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGrpOrAttrGrpRedefinedByRestriction(int,org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void reset()",
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void reset()",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void resetSchemaValidator()",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void resetSchemaValidator()",
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void resetCommon()",
            "org.apache.xerces.parsers.XML11Configuration:void resetXML11()",
            "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetXML11()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetXML11()"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <init>(org.apache.xerces.impl.xs.traversers.XSDHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] getAvailableArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void returnAttrArray(java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void returnSchemaAttrs()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSequence(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSParticleDecl checkOccurrences(org.apache.xerces.impl.xs.XSParticleDecl,java.lang.String,org.w3c.dom.Element,int,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void prepareForTraverse()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)",
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:javax.xml.parsers.DocumentBuilder newDocumentBuilder()",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserFactoryImpl:javax.xml.parsers.SAXParser newSAXParser()",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.parsers.IntegratedParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XPointerParserConfiguration:void configureXML11Pipeline()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XPointerParserConfiguration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSAllCM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.Object[] validRestrictionOf(java.lang.String,org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition,java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void gatherChildren(int,org.apache.xerces.impl.xs.XSParticleDecl,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:void gatherChildren(int,org.apache.xerces.impl.xs.XSParticleDecl,java.util.Vector)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNSCompat(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNSSubset(org.apache.xerces.impl.xs.XSWildcardDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(java.lang.Object,java.lang.Object,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory:javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASURI(java.lang.String)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.w3c.dom.ls.LSInput)"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean load(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11EntityScanner:int peekChar()",
            "org.apache.xerces.impl.XML11EntityScanner:int scanChar()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11EntityScanner:int scanContent(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11EntityScanner:int scanLiteral(int,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanData(java.lang.String,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XML11EntityScanner:boolean skipChar(int)",
            "org.apache.xerces.impl.XML11EntityScanner:boolean skipSpaces()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean skipString(java.lang.String)",
            "org.apache.xerces.impl.XMLEntityScanner:int peekChar()",
            "org.apache.xerces.impl.XMLEntityScanner:int scanChar()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLEntityScanner:int scanContent(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLEntityScanner:int scanLiteral(int,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanData(java.lang.String,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean skipChar(int)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean skipSpaces()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean skipDeclSpaces()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean skipString(java.lang.String)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean load(int,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean isExistingGrammar(org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean inSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup[] getSubGroupB(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup[] getSubGroupB(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void addGrammars(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.impl.xs.XSGrammarBucket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.util.XMLGrammarPoolImpl:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanXMLDeclOrTextDecl(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.DTDConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void validateAnnotations(java.util.ArrayList)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void normalizeDocument()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DOMNormalizer:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short,short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeUseImpl)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition,java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.Object)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.Object)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void validateDTDattribute(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.impl.dtd.XMLAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.dv.dtd.ListDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void validateDTDattribute(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dv.dtd.ListDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkExtraRules(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void validate(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkExtraRules(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.identity.Field$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Selector$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:void traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeNamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.xpointer.XPointerHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:java.lang.String saveXML(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DOMConfigurationImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void normalizeDocument()"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument()"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:void resetSchemaValidator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderImpl:org.w3c.dom.Document parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void resetSchemaValidator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(org.xml.sax.InputSource)",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.BasicParserConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void reset()",
            "org.apache.xerces.parsers.DTDConfiguration:void reset()",
            "org.apache.xerces.parsers.NonValidatingConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void resetCommon()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void resetXML11()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void resetCommon()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void resetXML11()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetCommon()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetXML11()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void returnSchemaAttrs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSequence(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void prepareForTraverse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.AbstractXMLSchema:javax.xml.validation.ValidatorHandler newValidatorHandler()"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorImpl:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.AbstractXMLSchema:javax.xml.validation.Validator newValidator()"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:javax.xml.parsers.DocumentBuilder newDocumentBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void setupDOMResultHandler(javax.xml.transform.dom.DOMSource,javax.xml.transform.dom.DOMResult)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:boolean getFeature(java.lang.String)",
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:void setFeature(java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserFactoryImpl:javax.xml.parsers.SAXParser newSAXParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserFactoryImpl:org.apache.xerces.jaxp.SAXParserImpl newSAXParserImpl()"
        ]
    },
    "org.apache.xerces.parsers.DTDConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeParserConfiguration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XPointerParserConfiguration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XPointerParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XML11EntityScanner:int peekChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:int scanChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DTDScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:int scanContent(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:int scanLiteral(int,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean scanData(java.lang.String,org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean skipChar(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean skipSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean skipString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanForDoctypeHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:int peekChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:int scanChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DTDScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:int scanContent(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:int scanLiteral(int,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean scanData(java.lang.String,org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean skipChar(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean skipSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean skipDeclSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean skipString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanForDoctypeHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument()",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:void startDocumentParsing(org.apache.xerces.impl.XMLEntityHandler,short)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void reset()",
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void resetSchemaValidator()",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void resetSchemaValidator()",
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void resetCommon()",
            "org.apache.xerces.parsers.XML11Configuration:void resetXML11()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetXML11()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetXML11()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean isExistingGrammar(org.apache.xerces.impl.xs.XSDDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSWildcardDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSModelImpl:void buildSubGroups()"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:void setAbstractSchema(org.apache.xerces.dom3.as.ASModel)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,short,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void parse(java.lang.String)",
            "org.apache.xerces.parsers.AbstractSAXParser:void parse(org.xml.sax.InputSource)",
            "org.apache.xerces.parsers.DOMParser:void parse(java.lang.String)",
            "org.apache.xerces.parsers.DOMParser:void parse(org.xml.sax.InputSource)",
            "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parseURI(java.lang.String)",
            "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void validateAnnotations(java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeUseImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.Object)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void validate(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDocumentImpl:java.lang.String saveXML(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:org.w3c.dom.Document parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToSAX(org.xml.sax.ContentHandler)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.SAXParserImpl:void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)",
            "org.apache.xerces.jaxp.SAXParserImpl:void parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void reset()",
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.jaxp.validation.AbstractXMLSchema:javax.xml.validation.ValidatorHandler newValidatorHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)"
        ]
    },
    "org.apache.xerces.jaxp.validation.AbstractXMLSchema:javax.xml.validation.Validator newValidator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void setupDOMResultHandler(javax.xml.transform.dom.DOMSource,javax.xml.transform.dom.DOMResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:boolean getFeature(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:void setFeature(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserFactoryImpl:org.apache.xerces.jaxp.SAXParserImpl newSAXParserImpl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserFactoryImpl:void setFeature(java.lang.String,boolean)",
            "org.apache.xerces.jaxp.SAXParserFactoryImpl:boolean getFeature(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11DTDScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanForDoctypeHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLVersionDetector:void startDocumentParsing(org.apache.xerces.impl.XMLEntityHandler,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSAllCM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(java.lang.Object,java.lang.Object,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSWildcardDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(java.lang.Object,java.lang.Object,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void setAbstractSchema(org.apache.xerces.dom3.as.ASModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,short,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToSAX(org.xml.sax.ContentHandler)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:org.w3c.dom.Document parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parseURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToSAX(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:boolean writeAnnotation(java.lang.Object,short)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.SAXParserFactoryImpl:void setFeature(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.SAXParserFactoryImpl:boolean getFeature(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)",
            "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:boolean writeAnnotation(java.lang.Object,short)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAnnotationImpl:boolean writeAnnotation(java.lang.Object,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)",
            "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)"
        ]
    }
}
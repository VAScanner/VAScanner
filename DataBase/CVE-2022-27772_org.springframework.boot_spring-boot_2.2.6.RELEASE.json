{
    "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory:java.io.File createTempDir(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)",
            "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory:void prepareContext(org.apache.catalina.Host,org.springframework.http.server.reactive.TomcatHttpHandlerAdapter)",
            "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[])",
            "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory:void prepareContext(org.apache.catalina.Host,org.springframework.boot.web.servlet.ServletContextInitializer[])",
            "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:io.undertow.servlet.api.DeploymentManager createDeploymentManager(org.springframework.boot.web.servlet.ServletContextInitializer[])",
            "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:java.io.File getCanonicalDocumentRoot(java.io.File)",
            "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory:void configureDocumentRoot(org.eclipse.jetty.webapp.WebAppContext)"
        ]
    },
    "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext$ServerManager:void <init>(org.springframework.boot.web.reactive.server.ReactiveWebServerFactory,boolean)"
        ]
    },
    "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory:void prepareContext(org.apache.catalina.Host,org.springframework.http.server.reactive.TomcatHttpHandlerAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.http.server.reactive.HttpHandler)"
        ]
    },
    "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:void createWebServer()"
        ]
    },
    "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory:void prepareContext(org.apache.catalina.Host,org.springframework.boot.web.servlet.ServletContextInitializer[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[])"
        ]
    },
    "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:io.undertow.servlet.api.DeploymentManager createDeploymentManager(org.springframework.boot.web.servlet.ServletContextInitializer[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[])"
        ]
    },
    "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:java.io.File getCanonicalDocumentRoot(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:io.undertow.server.handlers.resource.ResourceManager getDocumentRootResourceManager()"
        ]
    },
    "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory:void configureDocumentRoot(org.eclipse.jetty.webapp.WebAppContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory:void configureWebAppContext(org.eclipse.jetty.webapp.WebAppContext,org.springframework.boot.web.servlet.ServletContextInitializer[])"
        ]
    },
    "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext$ServerManager:void <init>(org.springframework.boot.web.reactive.server.ReactiveWebServerFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext$ServerManager:org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext$ServerManager get(org.springframework.boot.web.reactive.server.ReactiveWebServerFactory,boolean)"
        ]
    },
    "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:void createWebServer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:void onRefresh()"
        ]
    },
    "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:void createWebServer()"
        ]
    },
    "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:io.undertow.server.handlers.resource.ResourceManager getDocumentRootResourceManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory:io.undertow.servlet.api.DeploymentManager createDeploymentManager(org.springframework.boot.web.servlet.ServletContextInitializer[])"
        ]
    },
    "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory:void configureWebAppContext(org.eclipse.jetty.webapp.WebAppContext,org.springframework.boot.web.servlet.ServletContextInitializer[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[])"
        ]
    },
    "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext$ServerManager:org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext$ServerManager get(org.springframework.boot.web.reactive.server.ReactiveWebServerFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext:void createWebServer()"
        ]
    },
    "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:void onRefresh()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory:org.springframework.boot.web.server.WebServer getWebServer(org.springframework.boot.web.servlet.ServletContextInitializer[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext:void createWebServer()"
        ]
    },
    "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext:void createWebServer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext:void onRefresh()"
        ]
    },
    "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext:void onRefresh()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
{
    "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void resume()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1$1:void run()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.http.AbstractHTTPDestination)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object handleResponse(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$1$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CglibProxyHelper$1:java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object invoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.http.AbstractHTTPDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPHandler:void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object handleResponse(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CglibProxyHelper$1:java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object invoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response invoke(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response form(java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response form(org.apache.cxf.jaxrs.ext.form.Form)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object invoke(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection invokeAndGetCollection(java.lang.String,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response postCollection(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object postCollection(java.lang.Object,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection postAndGetCollection(java.lang.Object,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection postObjectGetCollection(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPHandler:void handle(java.lang.String,org.eclipse.jetty.server.Request,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response invoke(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response post(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response put(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response get()",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response head()",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response options()",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response delete()"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response form(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response form(org.apache.cxf.jaxrs.ext.form.Form)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object invoke(java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object post(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object put(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object get(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection invokeAndGetCollection(java.lang.String,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection postAndGetCollection(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection getCollection(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response postCollection(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object postCollection(java.lang.Object,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection postAndGetCollection(java.lang.Object,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection postObjectGetCollection(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void enforceLimits()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void access$000(org.apache.cxf.io.CachedOutputStream,java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response post(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response put(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response get()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response head()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response options()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response delete()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object post(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object put(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object get(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection postAndGetCollection(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:java.util.Collection getCollection(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void close(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.io.DelegatingInputStream:void cacheInput()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination$1:void cacheInput()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getRealStream(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void enforceLimits()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void access$000(org.apache.cxf.io.CachedOutputStream,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream$1:void close()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] preProcessResult(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] preProcessResult(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()",
            "org.apache.cxf.attachment.AttachmentDeserializer:boolean hasNext()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$1:void cacheInput()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getRealStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.ExtendedURIResolver:void close()",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:org.springframework.context.ApplicationContext createSpringContext(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.util.ClassReader:byte[] getBytes(java.lang.Class)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.version.Version:void loadProperties()",
            "org.apache.cxf.attachment.DelegatingInputStream:void close()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.helpers.FileUtils:java.lang.String getStringFromFile(java.io.File)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void closeInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()",
            "org.apache.cxf.configuration.jsse.SSLUtils:byte[] loadClientCredential(java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:byte[] loadCACert(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils$1$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.bus.spring.BusApplicationContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getBaseInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] preProcessResult(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:void loadAll()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext(boolean)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$1:boolean hasNext()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext(boolean)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.AttachmentDataSource:void hold(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.jaxrs.utils.FormUtils:java.lang.String readBody(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void unBuffer()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleWriteException(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Throwable,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.form.Form:java.lang.String toString()",
            "org.apache.cxf.jaxrs.utils.FormUtils:void logRequestParametersIfNeeded(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogWSDLLocator:void close()"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFServlet:org.springframework.context.ApplicationContext createSpringContext(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.util.Map)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:javax.xml.bind.JAXBContext createJaxbContext(java.util.Set,java.lang.Class[],java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.ClassReader:byte[] getBytes(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.version.Version:void loadProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.version.Version:java.lang.String getCurrentVersion()",
            "org.apache.cxf.version.Version:java.lang.String getName()",
            "org.apache.cxf.version.Version:java.lang.String getCompleteVersionString()"
        ]
    },
    "org.apache.cxf.attachment.DelegatingInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.ExtendedURIResolver:void close()",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:org.springframework.context.ApplicationContext createSpringContext(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.util.ClassReader:byte[] getBytes(java.lang.Class)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.version.Version:void loadProperties()",
            "org.apache.cxf.attachment.DelegatingInputStream:void close()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void closeInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()",
            "org.apache.cxf.ws.addressing.ContextUtils$1$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.bus.spring.BusApplicationContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.lang.String getStringFromFile(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void copyInputToOutput(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void handleRangeRequest(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.HttpHeaders,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.DataSourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void copyStream(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.CXFAuthenticator:void addAuthenticator()",
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void closeInput(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:void close()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:boolean hasNext()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:org.apache.xmlbeans.XmlObject readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:byte[] loadClientCredential(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:byte[] loadCACert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils$1$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,long)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)"
        ]
    },
    "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()"
        ]
    },
    "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusApplicationContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getBaseInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:void loadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void markClosed(org.apache.cxf.attachment.DelegatingInputStream)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractTransportFactory:void register()",
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination checkRestfulRequest(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:void <init>(java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:boolean matches(javax.security.auth.x500.X500Principal)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:boolean matchPath(java.util.List,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:boolean isPrivate(org.apache.cxf.service.model.EndpointInfo,java.util.List)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transports.http.QueryHandler findQueryHandler(org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:void adjustConcreteNames(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean buildMessageParts(org.apache.ws.commons.schema.XmlSchemaSequence,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuilder)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.spring.SpringBus:void loadAdditionalFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:boolean isLanguageMatched(java.util.List,java.util.Locale)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedResources()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void handleFields(java.util.List,java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Set getAllowedMethods()",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.List)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String encodeLiteralCharacters()",
            "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.Map getClassParameters(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean compareOperations(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ParameterType,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.'annotation'.Annotation[] getBodyAnnotations(org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.Parameter getRequestBodyParam(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormRequest(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo getCreatedFromModel(java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery orderBy(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:java.util.List toSelectionsList(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$SubExpression:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition conditionsList(java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List checkPathSegment(java.util.List,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String convertTypesToString(java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map fromListToMap(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getResourcesFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void verifySingletons(java.util.Set)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setAllHeaders(javax.ws.rs.core.MultivaluedMap,java.net.HttpURLConnection)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper doCreateExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ParameterHandler createParameterHandler(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper:java.lang.Object getCollectionOrArray(java.lang.Class,java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverProxy:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils:javax.xml.stream.XMLStreamWriter createStreamWriter(java.io.OutputStream,javax.xml.namespace.QName,boolean,org.codehaus.jettison.mapped.Configuration,boolean,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:java.lang.Object getAttachmentObject(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.Parameter,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object handleResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object doRead(java.lang.Class,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void onFirstWrite()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:void hold(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void serveStaticContent(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void renderStyleSheet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.FormUtils:java.lang.String readBody(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void unBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleWriteException(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Throwable,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleWriteException(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Throwable,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.form.Form:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.FormUtils:void logRequestParametersIfNeeded(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl$BodyWriter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void writeTo(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void writeTo(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection access$400(org.apache.cxf.transport.http.HTTPConduit,java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:void scanPackages(java.util.Set)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:javax.xml.bind.JAXBContext createJaxbContext(java.util.Set,java.lang.Class[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.version.Version:java.lang.String getCurrentVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.version.Version:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.version.Version:java.lang.String getCompleteVersionString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void copyInputToOutput(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void handleRangeRequest(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.HttpHeaders,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void copyInputToOutput(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.DataSourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void copyStream(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String getMessage()"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setSchemaLocations(java.util.List)"
        ]
    },
    "org.apache.cxf.transport.http.CXFAuthenticator:void addAuthenticator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:void close()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:org.apache.xmlbeans.XmlObject readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.lang.String transformSchema(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToWriter(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.stream.XMLStreamWriter,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:void setBuffering()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.XmlExtensionFragmentParser:java.util.List getExtensions(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class,javax.xml.namespace.QName,org.w3c.dom.Element,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.interceptor.StaxInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller,java.lang.Class,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader$2:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.FragmentStreamReader:boolean hasNext()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:org.apache.xmlbeans.XmlObject readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class,java.util.List)",
            "org.apache.cxf.resource.DefaultResourceManager:java.io.InputStream getResourceAsStream(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void registerExistingBundles(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void bundleChanged(org.osgi.framework.BundleEvent)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:int size()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedFromCollection(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type,boolean)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void markClosed(org.apache.cxf.attachment.DelegatingInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.DelegatingInputStream:void close()"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:void <init>(java.util.List)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()"
        ]
    },
    "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void <init>(org.apache.cxf.Bus,java.util.List)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.AbstractTransportFactory:void register()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractTransportFactory:void <init>(java.util.List,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.AbstractTransportFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.AbstractTransportFactory:void setTransportIds(java.util.List)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)"
        ]
    },
    "org.apache.cxf.transport.AbstractTransportFactory:void unregister()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractTransportFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.AbstractTransportFactory:void setTransportIds(java.util.List)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:boolean access$100(org.apache.cxf.transport.TransportFinder,java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:void access$000(org.apache.cxf.transport.TransportFinder,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination checkRestfulRequest(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()"
        ]
    },
    "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Cookies:void writeToMessageHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Headers:void setProtocolHeadersInConnection(java.net.HttpURLConnection)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Headers:void setProtocolHeadersInConnection(java.net.HttpURLConnection)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:void <init>(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()"
        ]
    },
    "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraints$DNConstraints:void <init>(java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraints:void <init>(java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator,java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator)"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraints$DNConstraints:boolean matches(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraints:boolean matches(java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$3:void check(java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$4:void check(java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$1:void check(java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$2:void check(java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:boolean matchPath(java.util.List,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void handleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:boolean isPrivate(org.apache.cxf.service.model.EndpointInfo,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:org.apache.cxf.transport.AbstractDestination[] getSOAPEndpoints(org.apache.cxf.transport.AbstractDestination[],java.util.List)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:org.apache.cxf.transport.AbstractDestination[] getRestEndpoints(org.apache.cxf.transport.AbstractDestination[],java.util.List)"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeSOAPEndpoints(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[])"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void addAtomLinkIfNeeded(java.lang.String,java.util.Map,java.io.PrintWriter)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transports.http.QueryHandler findQueryHandler(org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:java.lang.Object getJaxbObject(org.w3c.dom.Element,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map createThreadingParametersMap(java.lang.String,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map createTLSServerParametersMap(java.lang.String,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.String,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBContext createContextForEPR()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:javax.xml.bind.JAXBContext getContext()",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.ws.addressing.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set keySet()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.util.Set getOperationResourceInfos()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:java.util.Set getKeySet()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:java.util.Set getGettersNames()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:java.util.Set getSettersNames()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo getAccessorTypeInfo(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperties(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeMap(java.lang.Object,java.lang.Object,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getClassNameAndProperties(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractTransportFactory:void register()",
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination checkRestfulRequest(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:void <init>(java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:boolean matches(javax.security.auth.x500.X500Principal)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:boolean matchPath(java.util.List,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:boolean isPrivate(org.apache.cxf.service.model.EndpointInfo,java.util.List)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transports.http.QueryHandler findQueryHandler(org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:void adjustConcreteNames(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean buildMessageParts(org.apache.ws.commons.schema.XmlSchemaSequence,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuilder)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.spring.SpringBus:void loadAdditionalFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:boolean isLanguageMatched(java.util.List,java.util.Locale)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedResources()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void handleFields(java.util.List,java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Set getAllowedMethods()",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.List)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String encodeLiteralCharacters()",
            "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.Map getClassParameters(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean compareOperations(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ParameterType,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.'annotation'.Annotation[] getBodyAnnotations(org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.Parameter getRequestBodyParam(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormRequest(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo getCreatedFromModel(java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery orderBy(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:java.util.List toSelectionsList(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$SubExpression:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition conditionsList(java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List checkPathSegment(java.util.List,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String convertTypesToString(java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map fromListToMap(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getResourcesFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void verifySingletons(java.util.Set)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setAllHeaders(javax.ws.rs.core.MultivaluedMap,java.net.HttpURLConnection)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper doCreateExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ParameterHandler createParameterHandler(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper:java.lang.Object getCollectionOrArray(java.lang.Class,java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverProxy:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils:javax.xml.stream.XMLStreamWriter createStreamWriter(java.io.OutputStream,javax.xml.namespace.QName,boolean,org.codehaus.jettison.mapped.Configuration,boolean,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getOperationName(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void setBefore(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void setAfter(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void addBefore(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void addAfter(java.util.Collection)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()",
            "org.apache.cxf.bus.CXFBusImpl:void setFeatures(java.util.Collection)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeCollectionsOrArrays(java.lang.Object,java.lang.Object,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports()"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)"
        ]
    },
    "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyTlsClientParameters(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyProxyAuthorization(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyAuthorization(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyClientPolicies(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void configure(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine,java.util.Dictionary)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.util.Dictionary)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:org.apache.cxf.configuration.jsse.TLSServerParameters createTlsServerParameters(java.util.Dictionary)",
            "org.apache.cxf.common.classloader.ClassLoaderUtils:java.util.List getResources(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.JarResource:java.util.List load(java.io.File)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Collection getPropertyNames(java.util.Properties,java.lang.String)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Handler[] getHandlers()",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,javax.mail.internet.InternetHeaders)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean checkGroup(java.security.acl.Group,java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalogs(java.lang.ClassLoader,java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)",
            "org.apache.cxf.bus.osgi.WorkQueueSingleConfig:void updateQueue(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean isEmpty()",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractTransportFactory:void register()",
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination checkRestfulRequest(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:void <init>(java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:boolean matches(javax.security.auth.x500.X500Principal)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:boolean matchPath(java.util.List,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:boolean isPrivate(org.apache.cxf.service.model.EndpointInfo,java.util.List)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transports.http.QueryHandler findQueryHandler(org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:void adjustConcreteNames(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean buildMessageParts(org.apache.ws.commons.schema.XmlSchemaSequence,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuilder)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.spring.SpringBus:void loadAdditionalFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:boolean isLanguageMatched(java.util.List,java.util.Locale)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedResources()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void handleFields(java.util.List,java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Set getAllowedMethods()",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.List)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String encodeLiteralCharacters()",
            "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.Map getClassParameters(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean compareOperations(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ParameterType,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.'annotation'.Annotation[] getBodyAnnotations(org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.Parameter getRequestBodyParam(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormRequest(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo getCreatedFromModel(java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery orderBy(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:java.util.List toSelectionsList(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$SubExpression:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition conditionsList(java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List checkPathSegment(java.util.List,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String convertTypesToString(java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map fromListToMap(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getResourcesFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void verifySingletons(java.util.Set)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setAllHeaders(javax.ws.rs.core.MultivaluedMap,java.net.HttpURLConnection)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper doCreateExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ParameterHandler createParameterHandler(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper:java.lang.Object getCollectionOrArray(java.lang.Class,java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverProxy:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils:javax.xml.stream.XMLStreamWriter createStreamWriter(java.io.OutputStream,javax.xml.namespace.QName,boolean,org.codehaus.jettison.mapped.Configuration,boolean,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()",
            "org.apache.cxf.attachment.LazyDataSource:javax.activation.DataSource getDataSource()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractTransportFactory:void register()",
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination checkRestfulRequest(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:void <init>(java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:boolean matches(javax.security.auth.x500.X500Principal)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:boolean matchPath(java.util.List,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:boolean isPrivate(org.apache.cxf.service.model.EndpointInfo,java.util.List)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transports.http.QueryHandler findQueryHandler(org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:void adjustConcreteNames(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean buildMessageParts(org.apache.ws.commons.schema.XmlSchemaSequence,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuilder)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.spring.SpringBus:void loadAdditionalFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:boolean isLanguageMatched(java.util.List,java.util.Locale)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedResources()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void handleFields(java.util.List,java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Set getAllowedMethods()",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.List)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String encodeLiteralCharacters()",
            "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.Map getClassParameters(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean compareOperations(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ParameterType,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.'annotation'.Annotation[] getBodyAnnotations(org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.Parameter getRequestBodyParam(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormRequest(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo getCreatedFromModel(java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery orderBy(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:java.util.List toSelectionsList(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$SubExpression:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition conditionsList(java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List checkPathSegment(java.util.List,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String convertTypesToString(java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map fromListToMap(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getResourcesFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void verifySingletons(java.util.Set)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setAllHeaders(javax.ws.rs.core.MultivaluedMap,java.net.HttpURLConnection)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper doCreateExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ParameterHandler createParameterHandler(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper:java.lang.Object getCollectionOrArray(java.lang.Class,java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverProxy:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils:javax.xml.stream.XMLStreamWriter createStreamWriter(java.io.OutputStream,javax.xml.namespace.QName,boolean,org.codehaus.jettison.mapped.Configuration,boolean,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractTransportFactory:void register()",
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination checkRestfulRequest(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void cacheInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:void <init>(java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator)",
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:boolean matches(javax.security.auth.x500.X500Principal)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:boolean matchPath(java.util.List,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:boolean isPrivate(org.apache.cxf.service.model.EndpointInfo,java.util.List)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transports.http.QueryHandler findQueryHandler(org.apache.cxf.transports.http.QueryHandlerRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:void adjustConcreteNames(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean buildMessageParts(org.apache.ws.commons.schema.XmlSchemaSequence,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuilder)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.spring.SpringBus:void loadAdditionalFeatures()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:boolean isLanguageMatched(java.util.List,java.util.Locale)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedResources()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void handleFields(java.util.List,java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Set getAllowedMethods()",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.List)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String encodeLiteralCharacters()",
            "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.Map getClassParameters(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean compareOperations(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ParameterType,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.'annotation'.Annotation[] getBodyAnnotations(org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.Parameter getRequestBodyParam(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormRequest(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo getCreatedFromModel(java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery orderBy(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:java.util.List toSelectionsList(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$SubExpression:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition conditionsList(java.lang.String,java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List checkPathSegment(java.util.List,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String convertTypesToString(java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map fromListToMap(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getResourcesFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void verifySingletons(java.util.Set)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setAllHeaders(javax.ws.rs.core.MultivaluedMap,java.net.HttpURLConnection)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper doCreateExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ParameterHandler createParameterHandler(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper:java.lang.Object getCollectionOrArray(java.lang.Class,java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverProxy:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils:javax.xml.stream.XMLStreamWriter createStreamWriter(java.io.OutputStream,javax.xml.namespace.QName,boolean,org.codehaus.jettison.mapped.Configuration,boolean,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Headers:java.lang.String getAuthorization()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.String getRealPropertyName(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:javax.ws.rs.core.MediaType checkFinalContentType(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean inTemplatesAvailable(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean outTemplatesAvailable(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XPathProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperties(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeMap(java.lang.Object,java.lang.Object,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getClassNameAndProperties(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String findUniquePrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String findUniquePrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getPrefix()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttributeAsElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setHighWaterMark(int)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setLowWaterMark(int)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setInitialSize(int)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setQueueSize(int)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setDequeueTimeout(long)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:java.util.Set convertStringsToQNames(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.binding.AbstractBaseBindingFactory:void registerWithBindingManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void <init>(org.apache.cxf.Bus,java.util.Collection)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void setActivationNamespaces(java.util.Collection)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBaseBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBindingFactory:void adjustConcreteNames(org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean isValid()"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getInFaultInterceptors()",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getInInterceptors()",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getOutFaultInterceptors()",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getOutInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.impl.SecurityContextImpl:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setUserRolesMap(java.util.Map)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:void <init>(javax.security.auth.Subject)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.impl.SecurityContextImpl:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void destroy()"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.EndpointInfo getEndpointInfo()"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.OperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.model.OperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void <init>(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:void addBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void addEndpoint(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:java.util.Map getMessages()",
            "org.apache.cxf.service.model.ServiceInfo:void refresh()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()"
        ]
    },
    "org.apache.cxf.service.ServiceModelVisitor:void walk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName(boolean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName(boolean)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getEndpointName()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeFaults(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isFromWsdl()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isWrapped(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo getCreatedFromModel(java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void initializeServiceModel()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set entrySet()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object getValue()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSBPNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void respondUsingQueryHandler(org.apache.cxf.transports.http.QueryHandler,javax.servlet.http.HttpServletResponse,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:java.io.InputStream getInputStream()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean buildMessageParts(org.apache.ws.commons.schema.XmlSchemaSequence,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean isWrappableSequence(org.apache.ws.commons.schema.XmlSchemaComplexType,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build()"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:javax.wsdl.Definition build(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <init>(org.osgi.service.blueprint.container.BlueprintContainer)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:void loadAll()",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()"
        ]
    },
    "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void destroy()"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl$WQLifecycleListener:void preShutdown()"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void registerLifeCycleListener(org.apache.cxf.buslifecycle.BusLifeCycleListener)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.spring.SpringBus:void onApplicationEvent(org.springframework.context.ApplicationEvent)",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void start()"
        ]
    },
    "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void stop()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void loadAdditionalFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:void loadAll()",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void initComplete()"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void stop(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)",
            "org.apache.cxf.bus.osgi.CXFActivator:void stop(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void doInitializeInternal()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator,org.osgi.service.blueprint.container.BlueprintContainer,org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:void loadAll()",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void destroyBeans()"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.ChainInitiationObserver:void <init>(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractTransportFactory:void register()",
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()",
            "org.apache.cxf.transport.TransportFinder:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Set,java.lang.Class)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()",
            "org.apache.cxf.transport.http.HTTPConduit:void updateClientPolicy()",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void assertMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPWSDLExtensionLoader:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:void configure(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void assertMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:org.apache.cxf.transport.http.DestinationRegistry getDestinationRegistryFromBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.JettyDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:javax.management.MBeanServer getMBeanServer()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void setupBus(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.ManagedEndpoint:void start()",
            "org.apache.cxf.endpoint.ManagedEndpoint:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.invoker.SpringBeanFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.cxf.ws.addressing.WSAddressingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.ContextUtils$1:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuilder)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBus:void loadAdditionalFeatures()",
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBus:void onApplicationEvent(org.springframework.context.ApplicationEvent)",
            "org.apache.cxf.bus.spring.SpringBus:java.lang.String getId()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:org.apache.cxf.resource.ResourceManager getResourceManager(java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.OldSpringSupport:java.lang.Object getObject()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void initComplete()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerServerLifecycleListeners()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerClientLifeCycleListeners()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerBusAsService()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkBindingFactory(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object getResource(java.lang.String,java.lang.Class,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void <init>(org.apache.cxf.jaxrs.client.ClientConfiguration)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.phase.PhaseInterceptorChain setupOutInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.phase.PhaseInterceptorChain setupInInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.CXFBusImpl:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBus:void onApplicationEvent(org.springframework.context.ApplicationEvent)",
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void doInitializeInternal()",
            "org.apache.cxf.bus.CXFBusImpl:void setFeatures(java.util.Collection)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuild(boolean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuild(boolean,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuildFromMap(java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery(boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void buildMatrix(java.lang.StringBuilder,javax.ws.rs.core.MultivaluedMap,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getProtocolHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void handleRangeRequest(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.HttpHeaders,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:boolean isPayloadEmpty(javax.ws.rs.core.HttpHeaders)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleMethod(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNotModifiedSince(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()",
            "org.apache.cxf.jaxrs.impl.SecurityContextImpl:java.lang.String getAuthenticationScheme()",
            "org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder add()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleLanguages(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void addVariants()",
            "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:void handleMediaTypes()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:void <init>(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response build()",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,javax.activation.DataHandler,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:javax.ws.rs.core.MultivaluedMap getHeaders()",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:javax.ws.rs.core.MultivaluedMap getHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:javax.ws.rs.core.MultivaluedMap getWriteHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void <init>(org.apache.cxf.jaxrs.impl.ResponseBuilderImpl)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:javax.ws.rs.core.MultivaluedMap getTemplateValues(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getHeaders()",
            "org.apache.cxf.jaxrs.client.LocalClientState:void setTemplates(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.LocalClientState:org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Variant selectVariant(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:boolean isLanguageMatched(java.util.List,java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedResources()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void handleFields(java.util.List,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBaseBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.lang.String getTargetNamespace(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser$SpringJAXRSServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Set getAllowedMethods()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteMapped(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String encodeLiteralCharacters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.Map getClassParameters(org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean compareOperations(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handlePathAndMatrixClassParams(java.lang.StringBuilder,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ParameterType,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handlePathAndMatrixParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.'annotation'.Annotation[] getBodyAnnotations(org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void writeParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParameter(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.Parameter,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleFormRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.Parameter getRequestBodyParam(org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingWadl(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingSchema(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter createSchemaWriter(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName getQNameFromParts(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormRequest(org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter createSchemaWriter(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void write(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearThreadLocalProxies()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.List getResourceClasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:java.util.List getResourceClasses()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.lang.Class[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelBeans(java.util.List)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRef(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBeans(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo getCreatedFromModel(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:java.lang.Object getAttachmentObject(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery orderBy(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.TypedQuery getOrderedTypedQuery(java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:java.util.List toSelectionsList(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.TypedQuery getArrayTypedQuery(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery selectArray(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery selectConstruct(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.TypedQuery getConstructTypedQuery(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery selectTuple(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.TypedQuery getTupleTypedQuery(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.JPALanguageVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$SubExpression:org.apache.cxf.jaxrs.ext.search.SearchCondition build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$SubExpression:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.SearchCondition parse(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.util.List findAll(java.util.Collection)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.util.List findAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void <init>(java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void <init>(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition conditionsList(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition and(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition or(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List findAll(java.util.Collection)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List findAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.util.List findAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoCollectionOrArray(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List checkPathSegment(java.util.List,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoCollectionOrArray(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextValues(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextValues(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void setSchemaLocations(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String convertTypesToString(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void logNoMatchMessage(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MediaType,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:boolean isRedirectPossible(javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:javax.ws.rs.core.MediaType checkFinalContentType(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.form.Form:org.apache.cxf.jaxrs.ext.form.Form set(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map fromListToMap(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map getChildAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map getAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getResourcesFromElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getResourcesFromElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void createServerFromApplication(java.lang.String,javax.servlet.ServletConfig,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:void verifySingletons(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInterceptors(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInvoker(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.Object createSingletonInstance(java.lang.Class,java.util.Map,javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object handleResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient query(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient matrix(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void setAllHeaders(javax.ws.rs.core.MultivaluedMap,java.net.HttpURLConnection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:java.lang.Object create(java.lang.Class,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client create()"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void initClient(org.apache.cxf.jaxrs.client.AbstractClient,org.apache.cxf.endpoint.Endpoint,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.lang.Class findClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.ProxyClassLoader:java.net.URL findResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.ContextResolver getContextResolver(java.lang.Class,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper doCreateExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ParameterHandler createParameterHandler(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:org.apache.cxf.jaxrs.client.ResponseExceptionMapper findExceptionMapper(java.lang.reflect.Method,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initJaxbProviders()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setProviders(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader createMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter createMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearThreadLocalProxies()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void setSchemaLocations(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper:java.lang.Object getCollectionOrArray(java.lang.Class,java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverProxy:java.lang.Object getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalContextResolver:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverProxy:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getAegisContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils:javax.xml.stream.XMLStreamWriter createStreamWriter(java.io.OutputStream,javax.xml.namespace.QName,boolean,org.codehaus.jettison.mapped.Configuration,boolean,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Class,java.lang.reflect.Type,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisJSONProvider:javax.xml.stream.XMLStreamWriter createStreamWriter(javax.xml.namespace.QName,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AtomElementWriter getAtomWriter(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AtomElementReader getAtomReader(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AbstractAtomElementBuilder getAtomBuilder(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedFromCollection(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Entry createEntryFromObject(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:java.lang.Object getAttachmentObject(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.Parameter,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object doRead(java.lang.Class,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void onFirstWrite()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void serveStaticContent(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void renderStyleSheet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getPackageNameByNameSpaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:boolean isCredDelegationRequired(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isMtomEnabled(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageUtils:boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:boolean isHttpVerbSupported(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison parseComparison(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:boolean checkBufferingMode(org.apache.cxf.message.Message,javax.ws.rs.ext.MessageBodyWriter,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:boolean isResponseHeadersCopied(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object instantiateFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void createServerFromApplication(java.lang.String,javax.servlet.ServletConfig,java.lang.String)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:org.ietf.jgss.GSSContext createGSSContext()",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:boolean isRangeSupported()",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.xml.wsdl11.HttpAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)"
        ]
    },
    "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.ServiceUtils:boolean isSchemaValidationEnabled(org.apache.cxf.annotations.SchemaValidation$SchemaValidationType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:org.apache.cxf.databinding.DataBinding getDataBinding(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI getCurrentURI()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder matrixParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrixParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQueryParam(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response getFaultResponse()",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder language(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder contentLocation(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder lastModified(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cacheControl(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder expires(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cookie(javax.ws.rs.core.NewCookie[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void handleVaryValue(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String[] getTokens(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getChildAttachments(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.util.Collection getAttachments(boolean)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:org.ietf.jgss.GSSContext createGSSContext()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:org.apache.cxf.staxutils.DocumentDepthProperties getDepthProperties()",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.String getPreferredSource()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.String getValue(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate buildPredicate(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate buildPredicate(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition after(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition before(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notAfter(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notBefore(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition condition(java.lang.String,java.lang.Object,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:javax.ws.rs.core.MultivaluedMap extractValuesFromBean(java.lang.Object,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getBaseUri()",
            "org.apache.cxf.jaxrs.impl.SecurityContextImpl:boolean isSecure()",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getBaseAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient header(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replacePath(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl$BodyWriter:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void writeTo(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.ExtendedURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection access$400(org.apache.cxf.transport.http.HTTPConduit,java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:void scanPackages(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String createName(java.lang.reflect.Method,int,int,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:java.lang.String buildErrorMessage(javax.ws.rs.core.Response,javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setSchemaLocations(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.lang.String transformSchema(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller,java.lang.Class,java.io.InputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToWriter(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.stream.XMLStreamWriter,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:void setBuffering()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.provider.XPathProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.bus.extension.XmlExtensionFragmentParser:java.util.List getExtensions(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class,javax.xml.namespace.QName,org.w3c.dom.Element,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.StaxInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParametersConfig createTLSServerParametersConfig(java.lang.String,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:java.lang.String createTLSServerParametersConfigRef(java.lang.String,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.lang.String,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:java.lang.String createThreadingParametersRef(java.lang.String,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller,java.lang.Class,java.io.InputStream,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller,java.lang.Class,java.io.InputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:void writeTo(org.apache.xmlbeans.XmlObject,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeToWriter(javax.xml.stream.XMLStreamWriter,java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxSource:void parse(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.FragmentStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.FragmentStreamReader:int next()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.FragmentStreamReader:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.FragmentStreamReader:boolean hasNext()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:boolean hasNext()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeToWriter(javax.xml.stream.XMLStreamWriter,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object getResource(java.lang.String,java.lang.Class,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.Object resolveResource(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void registerExistingBundles(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void bundleChanged(org.osgi.framework.BundleEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache$1:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache$2:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:javax.xml.bind.JAXBContext createJaxbContext(java.util.Set,java.lang.Class[],java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache$1:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache$2:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:javax.xml.bind.JAXBContext createJaxbContext(java.util.Set,java.lang.Class[],java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Cookies:void writeToMessageHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)",
            "org.apache.cxf.message.MessageImpl$1:void putAll(java.util.Map)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteMapped(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int size()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedFromCollection(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Feed createFeedFromCollectionWrapper(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void destroy()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory$JettyBusLifeCycleListener:void postShutdown()"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void <init>(org.apache.cxf.Bus,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractTransportFactory:void <init>(java.util.List,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)"
        ]
    },
    "org.apache.cxf.transport.AbstractTransportFactory:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void setBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.AbstractTransportFactory:void setTransportIds(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void setActivationNamespaces(java.util.Collection)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:boolean access$100(org.apache.cxf.transport.TransportFinder,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.TransportFinder$URIBeanLoaderListener:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:void access$000(org.apache.cxf.transport.TransportFinder,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$URIBeanLoaderListener:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$1:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils$1:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.Cookies:void writeToMessageHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void setProtocolHeadersInConnection(java.net.HttpURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()"
        ]
    },
    "org.apache.cxf.transport.http.auth.HttpAuthHeader:void <init>(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier$DigestInfo:java.lang.String generateAuth(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:boolean verify(java.lang.String,javax.net.ssl.SSLSession)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],javax.net.ssl.SSLSocket)"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraints:void <init>(java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator,java.util.List,org.apache.cxf.transport.https.CertConstraints$Combinator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraintsJaxBUtils:org.apache.cxf.transport.https.CertConstraints createCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraints:boolean matches(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraintsInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.https.HttpsMessageTrustDecider:void establishTrust(java.lang.String,org.apache.cxf.transport.http.URLConnectionInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$3:void check(java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$4:void check(java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$1:void check(java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$2:void check(java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void handleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:org.apache.cxf.transport.AbstractDestination[] getSOAPEndpoints(org.apache.cxf.transport.AbstractDestination[],java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:org.apache.cxf.transport.AbstractDestination[] getRestEndpoints(org.apache.cxf.transport.AbstractDestination[],java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeSOAPEndpoints(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeServiceList(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[],org.apache.cxf.transport.AbstractDestination[])"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void addAtomLinkIfNeeded(java.lang.String,java.util.Map,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeRESTfulEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:java.lang.Object getJaxbObject(org.w3c.dom.Element,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map createThreadingParametersMap(java.lang.String,javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map createTLSServerParametersMap(java.lang.String,javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.xml.bind.JAXBContext getContext()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.String,java.util.Map,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBContext createContextForEPR()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBContext getJAXBContextForEPR()"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:javax.xml.bind.JAXBContext getContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setAllHeaders(javax.ws.rs.core.MultivaluedMap,java.net.HttpURLConnection)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.ws.addressing.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set keySet()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.util.Set getOperationResourceInfos()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:java.util.Set getKeySet()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:java.util.Set getGettersNames()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:java.util.Set getSettersNames()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo getAccessorTypeInfo(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.NSManager:java.util.Set getNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:java.util.Set getOperationResourceInfos()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Set getAllowedMethods()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchBean:java.util.Set getKeySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:java.util.Set getGettersNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:java.util.Set getSettersNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo getAccessorTypeInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$TypeInfoObject parseType(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Headers:java.lang.String getAuthorization()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.String getRealPropertyName(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:javax.ws.rs.core.MediaType checkFinalContentType(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean inTemplatesAvailable(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean outTemplatesAvailable(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XPathProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination getDestinationForPath(java.lang.String,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:boolean isResponseBodyAvailable()",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.Headers:java.lang.String getAuthorization()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String getRealm()",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.util.Enumeration getHeaders(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void serveStaticContent(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.util.Locale,java.util.Locale)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getContextMethods()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.List getList(java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getProxy(java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison parseComparison(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.String getRealPropertyName(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:java.lang.String get(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo getAccessorTypeInfo(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:java.lang.Object getValue(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toFiqlPrimitiveCondition(org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.text.SimpleDateFormat getDateFormat(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:boolean isTimeZoneSupported(java.util.Map,java.lang.Boolean)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEncoding(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread:void run()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.util.Map getRequestContext(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.String getCollectionWrapperName(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.validation.Schema getSchema(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getInTemplates(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getOutTemplates(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XPathProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.String getRootName(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandlerSuperClass(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean isFeedRequested(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Cookies:void writeToMessageHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)",
            "org.apache.cxf.message.MessageImpl$1:void putAll(java.util.Map)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteMapped(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int size()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.CacheMap:java.lang.String toString()",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.String toString()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperties(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeMap(java.lang.Object,java.lang.Object,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getClassNameAndProperties(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.AttributedURI convert(org.apache.cxf.ws.addressing.AttributedURIType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.AttributedURI convertTo200403(org.apache.cxf.ws.addressing.AttributedURIType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.Relationship convert(org.apache.cxf.ws.addressing.RelatesToType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.Relationship convertTo200403(org.apache.cxf.ws.addressing.RelatesToType)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void setProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setProperties(java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeMap(java.lang.Object,java.lang.Object,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getClassNameAndProperties(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInterceptors(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInvoker(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getServiceClasses(javax.servlet.ServletConfig,boolean,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.List getProviders(javax.servlet.ServletConfig,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void createServerFromApplication(java.lang.String,javax.servlet.ServletConfig,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getOperationName(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void setBefore(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void setAfter(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void addBefore(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)",
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void addAfter(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List)",
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void setFeatures(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setFeatures(java.util.Collection)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeCollectionsOrArrays(java.lang.Object,java.lang.Object,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)",
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyTlsClientParameters(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void apply(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyProxyAuthorization(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void apply(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyAuthorization(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void apply(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyClientPolicies(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void apply(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination$1:void cacheInput()"
        ]
    },
    "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.lang.String getHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void configure(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine,java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void updated(java.lang.String,java.util.Dictionary)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void configure(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine,java.util.Dictionary)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:org.apache.cxf.configuration.jsse.TLSServerParameters createTlsServerParameters(java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void updated(java.lang.String,java.util.Dictionary)"
        ]
    },
    "org.apache.cxf.common.classloader.ClassLoaderUtils:java.util.List getResources(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.classloader.ClassLoaderUtils:java.util.List getResources(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.JarResource:java.util.List load(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.JarResource:java.util.List getJarContents(java.io.File)"
        ]
    },
    "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Collection getPropertyNames(java.util.Properties,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Handler[] getHandlers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,javax.mail.internet.InternetHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.message.Attachment createAttachment(javax.mail.internet.InternetHeaders)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean checkGroup(java.security.acl.Group,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean checkGroup(java.security.acl.Group,java.lang.String)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalogs(java.lang.ClassLoader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.WorkQueueSingleConfig:void updateQueue(java.lang.String,java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.WorkQueueSingleConfig:void updated(java.util.Dictionary)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue getPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()",
            "org.apache.cxf.jaxrs.provider.DataSourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getContent(javax.activation.DataSource)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.DataSourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:javax.activation.DataSource getDataSource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void removeContentType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:java.lang.String getAuthorization()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Headers:java.lang.String getAuthorization()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.String getRealPropertyName(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:javax.ws.rs.core.MediaType checkFinalContentType(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean inTemplatesAvailable(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean outTemplatesAvailable(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XPathProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean classResourceSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)"
        ]
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttachmentPartHeader(org.apache.cxf.message.Attachment)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean loadBean(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.WorkQueueSingleConfig:void updateQueue(java.lang.String,java.util.Dictionary)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasBeanOfName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.String getRealPropertyName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate buildPredicate(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:javax.ws.rs.core.MediaType checkFinalContentType(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean inTemplatesAvailable(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean outTemplatesAvailable(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XPathProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination getDestinationForPath(java.lang.String,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:boolean isResponseBodyAvailable()",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.Headers:java.lang.String getAuthorization()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String getRealm()",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.util.Enumeration getHeaders(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void serveStaticContent(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.util.Locale,java.util.Locale)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getContextMethods()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.List getList(java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getProxy(java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison parseComparison(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.String getRealPropertyName(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:java.lang.String get(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo getAccessorTypeInfo(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:java.lang.Object getValue(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toFiqlPrimitiveCondition(org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.text.SimpleDateFormat getDateFormat(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:boolean isTimeZoneSupported(java.util.Map,java.lang.Boolean)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEncoding(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread:void run()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.util.Map getRequestContext(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.String getCollectionWrapperName(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.validation.Schema getSchema(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getInTemplates(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getOutTemplates(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XPathProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.String getRootName(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandlerSuperClass(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean isFeedRequested(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void deleted(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void removeAuthorizationHeaders()",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void removeThreadLocalState(java.lang.Thread)"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String findUniquePrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxSource:java.lang.String getQualifiedName()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getPrefix()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeEndElement()",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreContentJettisonWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttributeAsElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setHighWaterMark(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:void setHighWaterMark(int)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setLowWaterMark(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:void setLowWaterMark(int)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setInitialSize(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setQueueSize(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setDequeueTimeout(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractEndpointSelectionInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void destroyBus()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroyBus()",
            "org.apache.cxf.bus.ManagedBus:void shutdown(boolean)",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown()"
        ]
    },
    "org.apache.cxf.binding.AbstractBaseBindingFactory:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.JAXRSBindingFactory:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.binding.AbstractBaseBindingFactory:void <init>(org.apache.cxf.Bus,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void <init>(org.apache.cxf.Bus,java.util.Collection)"
        ]
    },
    "org.apache.cxf.binding.AbstractBaseBindingFactory:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBaseBindingFactory:void setActivationNamespaces(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.binding.AbstractBaseBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)"
        ]
    },
    "org.apache.cxf.interceptor.BareOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getInFaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getInInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getOutFaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getOutInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.SecurityContextImpl:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:org.apache.cxf.security.SecurityContext createSecurityContext(javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setUserRolesMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:void <init>(javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:org.apache.cxf.security.SecurityContext createSecurityContext(javax.security.auth.Subject)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.EndpointInfo getEndpointInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:void createMessagePartInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class,javax.xml.namespace.QName,java.lang.reflect.Method,boolean)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:void createMessagePartInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class,javax.xml.namespace.QName,java.lang.reflect.Method,boolean)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:void <init>(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:void createMessagePartInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class,javax.xml.namespace.QName,java.lang.reflect.Method,boolean)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:void createMessagePartInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class,javax.xml.namespace.QName,java.lang.reflect.Method,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void addBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void addEndpoint(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:java.util.Map getMessages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void refresh()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void updateUnwrappedOperation()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.EndpointInfo getEndpointInfo()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName()"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInterfaceName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getEndpointName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeFaults(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isFromWsdl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isWrapped(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:java.lang.Object createEndpoint(javax.ws.rs.core.Application,java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void init()",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void createServerFromApplication(java.lang.String,javax.servlet.ServletConfig,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void initializeServiceModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.FactoryBeanListenerManager:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void configure(java.lang.Object,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <init>(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapTLSClientParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void mapTLSServerParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.Cookies:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void redirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getExtensionEndpointAddress(java.lang.String,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(javax.ws.rs.core.CacheControl)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setAllHeaders(javax.ws.rs.core.MultivaluedMap,java.net.HttpURLConnection)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomClassElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination getDestinationForPath(java.lang.String,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:boolean isResponseBodyAvailable()",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.Headers:java.lang.String getAuthorization()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String getRealm()",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.util.Enumeration getHeaders(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void serveStaticContent(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine getOrCreate(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.ws.addressing.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.util.Locale,java.util.Locale)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:org.apache.cxf.jaxrs.model.ClassResourceInfo findResource(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingSchema(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getContextMethods()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.List getList(java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getProxy(java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison parseComparison(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.String getRealPropertyName(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:java.lang.String get(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo getAccessorTypeInfo(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:java.lang.Object getValue(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toFiqlPrimitiveCondition(org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.text.SimpleDateFormat getDateFormat(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:boolean isTimeZoneSupported(java.util.Map,java.lang.Boolean)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEncoding(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread:void run()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.util.Map getRequestContext(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.String getCollectionWrapperName(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.validation.Schema getSchema(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getInTemplates(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getOutTemplates(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XPathProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.String getRootName(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandlerSuperClass(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean isFeedRequested(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Collection getSubResources()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(org.apache.cxf.configuration.jsse.TLSClientParameters,java.net.HttpURLConnection)",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLContext createSSLContext()"
        ]
    },
    "org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSBPNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.JAXRSBPNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.blueprint.HttpConduitBPBeanDefinitionParser:void mapTLSClientParameters(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,javax.xml.namespace.QName,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void respondUsingQueryHandler(org.apache.cxf.transports.http.QueryHandler,javax.servlet.http.HttpServletResponse,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.servlet.ServletController:void respondUsingQueryHandler(org.apache.cxf.transports.http.QueryHandler,javax.servlet.http.HttpServletResponse,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToWriter(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.stream.XMLStreamWriter,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean isWrappableSequence(org.apache.ws.commons.schema.XmlSchemaComplexType,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean isWrappableSequence(org.apache.ws.commons.schema.XmlSchemaComplexType,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:javax.wsdl.Definition build(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.lang.Object build(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>()"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <init>(org.osgi.service.blueprint.container.BlueprintContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.TransportFinder:void loadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:void loadAll()",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl$WQLifecycleListener:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void registerLifeCycleListener(org.apache.cxf.buslifecycle.BusLifeCycleListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void onApplicationEvent(org.springframework.context.ApplicationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus$1:void onApplicationEvent(org.springframework.context.ApplicationEvent)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:void start()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:void stop()",
            "org.apache.cxf.endpoint.ServerImpl:void destroy()"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addDefaultBus(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void initComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void registerLifeCycleListener(org.apache.cxf.buslifecycle.BusLifeCycleListener)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFActivator:void stop(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void bundleChanged(org.osgi.framework.BundleEvent)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void shutdown()"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String,java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBus:void <init>()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void doInitializeInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void initialize()"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator,org.osgi.service.blueprint.container.BlueprintContainer,org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void destroyBeans()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void destroyBeans()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void <init>(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Set,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit:void updateClientPolicy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection createConnection(org.apache.cxf.message.Message,java.net.URL)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:int getMaxRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void assertMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPWSDLExtensionLoader:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void configure(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void configure(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void assertMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:org.apache.cxf.transport.http.DestinationRegistry getDestinationRegistryFromBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:javax.management.MBeanServer getMBeanServer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.eclipse.jetty.util.component.Container$Listener getMBeanContainer()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void setupBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.binding.BindingFactory)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SpringBeanFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)"
        ]
    },
    "org.apache.cxf.ws.addressing.WSAddressingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils$1:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServerRegistryImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus getBusForName(java.lang.String,org.springframework.context.ApplicationContext,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.ManagedBus:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerBusAsService()"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:org.apache.cxf.resource.ResourceManager getResourceManager(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.springframework.context.ConfigurableApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.spring.OldSpringSupport:java.lang.Object getObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerServerLifecycleListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerClientLifeCycleListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerBusAsService()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void initComplete()"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkBindingFactory(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object getResource(java.lang.String,java.lang.Class,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.io.InputStream getClasspathResourceStream(java.lang.String,java.lang.Class,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.net.URL getClasspathResourceURL(java.lang.String,java.lang.Class,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientMessageObserver:void <init>(org.apache.cxf.jaxrs.client.ClientConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientConfiguration:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Exchange createExchange(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.phase.PhaseInterceptorChain setupOutInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.phase.PhaseInterceptorChain setupInInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void doInitializeInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void doInitializeInternal()",
            "org.apache.cxf.bus.CXFBusImpl:void initialize()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuild(boolean,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI build(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuildFromMap(java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildQuery(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuild(boolean,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuildFromMap(java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void buildMatrix(java.lang.StringBuilder,javax.ws.rs.core.MultivaluedMap,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.PathSegment replacePathSegment(javax.ws.rs.core.PathSegment)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Map getCookies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Map getCookies()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void handleRangeRequest(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.HttpHeaders,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:boolean isPayloadEmpty(javax.ws.rs.core.HttpHeaders)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl:javax.ws.rs.core.MultivaluedMap getRequestHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getProtocolHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getPathToMatch(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:boolean isPayloadEmpty(javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void checkContentLength()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableLanguages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getRequestHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleMethod(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNotModifiedSince(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleMethod(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNotModifiedSince(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.SecurityContextImpl:java.lang.String getAuthenticationScheme()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:java.lang.String getAuthenticationScheme()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl:java.util.List getRequestHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl:java.lang.String getRequestHeaderValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.VariantListBuilderImpl:javax.ws.rs.core.Variant$VariantListBuilder add()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:void <init>(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.SecurityContextImpl:java.lang.String getAuthenticationScheme()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl:void <init>(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpHeaders(org.apache.cxf.message.Message,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getProtocolHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void copyInputToOutput(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder clone()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.client.LocalClientState:void <init>(org.apache.cxf.jaxrs.client.LocalClientState)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,javax.activation.DataHandler,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,java.io.InputStream,org.apache.cxf.jaxrs.ext.multipart.ContentDisposition)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(javax.ws.rs.core.MultivaluedMap,javax.activation.DataHandler,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:void <init>()",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getHeaders()",
            "org.apache.cxf.jaxrs.client.LocalClientState:void <init>()",
            "org.apache.cxf.jaxrs.client.LocalClientState:void <init>(java.net.URI)",
            "org.apache.cxf.jaxrs.client.LocalClientState:void <init>(org.apache.cxf.jaxrs.client.LocalClientState)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:java.lang.Object createInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingWadl(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingSchema(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void reportServerError(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void invokeLifeCycleMethod(java.lang.Object,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response getFaultResponse()",
            "org.apache.cxf.jaxrs.security.SimpleAuthorizingFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object handleResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleExceptionEnd(java.lang.Throwable,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void reportError(java.lang.String,java.lang.Exception,int)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,javax.activation.DataHandler,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,javax.activation.DataSource,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.io.InputStream,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:javax.ws.rs.core.MultivaluedMap getHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:javax.ws.rs.core.MultivaluedMap getHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:javax.ws.rs.core.MultivaluedMap access$500(org.apache.cxf.jaxrs.provider.JAXRSDataBinding,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:javax.ws.rs.core.MultivaluedMap getWriteHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:javax.ws.rs.core.MultivaluedMap access$200(org.apache.cxf.jaxrs.provider.JAXRSDataBinding,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putSingle(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void <init>(org.apache.cxf.jaxrs.impl.ResponseBuilderImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder clone()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:javax.ws.rs.core.MultivaluedMap getTemplateValues(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void initClient(org.apache.cxf.jaxrs.client.AbstractClient,org.apache.cxf.endpoint.Endpoint,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient headers(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.client.LocalClientState:void setTemplates(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setTemplates(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.LocalClientState:org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient 'to'(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.LocalClientState:org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.ClientState getActualState()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Variant selectVariant(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Variant selectVariant(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedResources()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedURIs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedURIs(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedURIs()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:java.lang.String getTargetNamespace(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.blueprint.HttpConduitBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http.blueprint.HttpDestinationBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.bus.blueprint.BusDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(org.apache.cxf.jaxrs.lifecycle.ResourceProvider)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser$SpringJAXRSServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteMapped(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuildFromMap(java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response checkMetadataRequest(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handlePathAndMatrixClassParams(java.lang.StringBuilder,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handlePathAndMatrixParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDynamicSubresource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void writeParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParameter(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.Parameter,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParams(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ParameterType,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleFormRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleParameter(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.Parameter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleFormRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingWadl(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingSchema(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter createSchemaWriter(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName getQNameFromParts(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName getJaxbQName(org.apache.cxf.common.jaxb.JAXBContextProxy,java.lang.Class,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName access$300(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.lang.String,java.lang.String,java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearThreadLocalProxies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearThreadLocalProxies()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearProxies(java.util.List[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:java.util.List getResourceClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceClasses(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceClasses(java.lang.Class[])"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelBeans(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelBeans(org.apache.cxf.jaxrs.model.UserResource[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelBeansWithServiceClass(java.util.List,java.lang.Class[])",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRefWithServiceClass(java.lang.String,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBeans(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBeanObjects(java.lang.Object[])",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBean(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setServiceClass(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.TypedQuery getOrderedTypedQuery(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.TypedQuery getArrayTypedQuery(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery selectArray(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery selectConstruct(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.TypedQuery getConstructTypedQuery(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.criteria.CriteriaQuery selectTuple(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPACriteriaQueryVisitor:javax.persistence.TypedQuery getTupleTypedQuery(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.Object getConvertedExpression(java.lang.String,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.lang.String toSQL(org.apache.cxf.jaxrs.ext.search.SearchCondition,java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.Object getConvertedExpression(java.lang.String,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.lang.String toSQL(org.apache.cxf.jaxrs.ext.search.SearchCondition,java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.Object getConvertedExpression(java.lang.String,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.lang.String toSQL(org.apache.cxf.jaxrs.ext.search.SearchCondition,java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.JPALanguageVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void accept(org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.SearchCondition parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <init>(java.lang.Class,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void <init>(java.lang.String,java.lang.Object,java.lang.reflect.Type,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition and(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition and(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition or(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition or(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$SubExpression:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.SearchCondition parse(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoCollectionOrArray(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextValues(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void handleMapper(java.util.List,org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,org.apache.cxf.message.Message,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void setSchemaLocations(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void setSchemas(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void setSchemaLocations(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void setSchemas(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:void logNoMatchMessage(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MediaType,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.Parameter,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setUriParts(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrix(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getMatrixParams(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchConsumeTypes(javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchProduceTypes(javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchMimeTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:boolean isRedirectPossible(javax.ws.rs.core.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.form.Form:org.apache.cxf.jaxrs.ext.form.Form set(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map getChildAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map getAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:java.lang.Object createEndpoint(javax.ws.rs.core.Application,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void createServerFromApplication(java.lang.String,javax.servlet.ServletConfig,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replacePath(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInterceptors(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInvoker(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.Object createSingletonInstance(java.lang.Class,java.util.Map,javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient query(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient matrix(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:java.lang.Object create(java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.ClassLoader)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.net.URI,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client create()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void initClient(org.apache.cxf.jaxrs.client.AbstractClient,org.apache.cxf.endpoint.Endpoint,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller,java.lang.Class,java.io.InputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToWriter(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.stream.XMLStreamWriter,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.ContextResolver getContextResolver(java.lang.Class,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.ContextResolver getContextResolver(java.lang.Class,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContext(java.lang.reflect.Type,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.Parameter,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createResourceValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.ExceptionMapper getExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object instantiateFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:org.apache.cxf.jaxrs.client.ResponseExceptionMapper findExceptionMapper(java.lang.reflect.Method,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void initJaxbProviders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void setProviders(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBusProviders()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setUserProviders(java.util.List)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader createMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader createMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter createMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter createMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearThreadLocalProxies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object handleResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearThreadLocalProxies()"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void initClient(org.apache.cxf.jaxrs.client.AbstractClient,org.apache.cxf.endpoint.Endpoint,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalContextResolver:java.lang.Object getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalContextResolver:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverProxy:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getAegisContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void createEntryContent(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromEntry(org.apache.abdera.model.Entry,java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getAegisContext(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Class,java.lang.reflect.Type,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.aegis.AegisJSONProvider:javax.xml.stream.XMLStreamWriter createStreamWriter(javax.xml.namespace.QName,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AtomElementWriter getAtomWriter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean buildFeed(org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean buildEntry(org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AtomElementReader getAtomReader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromEntry(org.apache.abdera.model.Entry,java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AbstractAtomElementBuilder getAtomBuilder(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setEntryProperties(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Entry createEntryFromObject(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedFromCollection(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String getPackageNameByNameSpaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String parsePackageName(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.SpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:boolean isCredDelegationRequired(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,java.lang.String,org.ietf.jgss.Oid,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:boolean isMtomEnabled(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.MessageUtils:boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:boolean doProcessResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Cookies:void writeToMessageHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void validatePart(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxInInterceptor:boolean isHttpVerbSupported(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <init>(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.UriInfo createUriInfo(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison parseComparison(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$ASTNode parseAndsOrsBrackets(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:boolean checkBufferingMode(org.apache.cxf.message.Message,javax.ws.rs.ext.MessageBodyWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:boolean isResponseHeadersCopied(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void setResponseStatus(org.apache.cxf.message.Message,int)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoCollectionOrArray(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object instantiateFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:org.ietf.jgss.GSSContext createGSSContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:boolean isRangeSupported()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void copyInputToOutput(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.xml.wsdl11.HttpAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.ServiceUtils:boolean isSchemaValidationEnabled(org.apache.cxf.annotations.SchemaValidation$SchemaValidationType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:org.apache.cxf.databinding.DataBinding getDataBinding(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:org.apache.cxf.databinding.DataBinding getDataBinding()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI getCurrentURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder matrixParam(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient matrix(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient query(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrixParam(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQueryParam(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceQueryParam(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:java.lang.String getMethod()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:java.lang.String getMethod()"
        ]
    },
    "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response getFaultResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:byte[] getServiceTicket(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleExceptionEnd(java.lang.Throwable,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void reportError(java.lang.String,java.lang.Exception,int)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder language(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder language(java.util.Locale)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder contentLocation(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder tag(javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNonMatch(javax.ws.rs.core.EntityTag)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder tag(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder lastModified(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cacheControl(javax.ws.rs.core.CacheControl)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder expires(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder cookie(javax.ws.rs.core.NewCookie[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void handleVaryValue(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String[] getTokens(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getChildAttachments(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.util.Collection getAttachments(boolean)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getChildAttachments(org.apache.cxf.jaxrs.ext.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map getChildAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map getAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller,java.lang.Class,java.io.InputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addProcessingInstructions(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addSchemaLocation(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.util.Collection getAttachments(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentUnmarshaller(javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getContextualProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:org.ietf.jgss.GSSContext createGSSContext()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:org.apache.cxf.staxutils.DocumentDepthProperties getDepthProperties()",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.String getPreferredSource()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:org.apache.cxf.staxutils.DocumentDepthProperties getDepthProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.stream.XMLStreamReader createDepthReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.String getPreferredSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.MultipartBody getMultipartBody(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.String getValue(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.net.URI getLink(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.String getValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate buildPredicate(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition after(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition before(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notAfter(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notBefore(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition condition(java.lang.String,java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition after(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition before(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Double)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Integer)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Long)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.xml.datatype.Duration)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.lang.Double,java.lang.Double[])",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.lang.Long,java.lang.Long[])",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.lang.Integer,java.lang.Integer[])",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.util.Date,java.util.Date[])",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(javax.xml.datatype.Duration,javax.xml.datatype.Duration[])",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterOrEqualTo(java.lang.Double)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterOrEqualTo(java.lang.Long)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterOrEqualTo(java.lang.Integer)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterThan(java.lang.Double)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterThan(java.lang.Long)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterThan(java.lang.Integer)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessOrEqualTo(java.lang.Double)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessOrEqualTo(java.lang.Long)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessOrEqualTo(java.lang.Integer)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessThan(java.lang.Double)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessThan(java.lang.Long)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessThan(java.lang.Integer)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lexicalAfter(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lexicalBefore(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lexicalNotAfter(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lexicalNotBefore(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notAfter(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notBefore(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.lang.Double)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.lang.Long)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.lang.Integer)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition after(javax.xml.datatype.Duration)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition before(javax.xml.datatype.Duration)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notAfter(javax.xml.datatype.Duration)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notBefore(javax.xml.datatype.Duration)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(javax.xml.datatype.Duration)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:javax.ws.rs.core.MultivaluedMap extractValuesFromBean(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getBaseUri()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getBaseUri()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getBaseUriBuilder()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getAbsolutePathAsString()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getBaseURI(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:java.lang.String getCompleteServicePrincipalName()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.SecurityContextImpl:boolean isSecure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:boolean isSecure()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getBaseAddress(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response checkMetadataRequest(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getPathToMatch(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:void updatePath(org.apache.cxf.message.Message,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient header(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replacePath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeToWriter(javax.xml.stream.XMLStreamWriter,java.lang.Object)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String createName(java.lang.reflect.Method,int,int,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:java.lang.String buildErrorMessage(javax.ws.rs.core.Response,javax.ws.rs.WebApplicationException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeToWriter(javax.xml.stream.XMLStreamWriter,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XPathProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParametersConfig createTLSServerParametersConfig(java.lang.String,javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:java.lang.String createTLSServerParametersConfigRef(java.lang.String,javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.lang.String,javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:java.lang.String createThreadingParametersRef(java.lang.String,javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:void writeTo(org.apache.xmlbeans.XmlObject,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeToWriter(javax.xml.stream.XMLStreamWriter,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:void writeToWriter(javax.xml.stream.XMLStreamWriter,java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.FragmentStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void copyReaderToWriter(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.Object resolveResource(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache$1:javax.xml.bind.JAXBContext run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache$1:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache$2:javax.xml.bind.JAXBContext run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache$2:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Cookies:void writeToMessageHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)",
            "org.apache.cxf.message.MessageImpl$1:void putAll(java.util.Map)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteMapped(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int size()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.message.MessageImpl$1:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.message.MessageImpl:void calcContextCache()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperties(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeMap(java.lang.Object,java.lang.Object,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getClassNameAndProperties(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Feed createFeedFromCollectionWrapper(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory$JettyBusLifeCycleListener:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void setActivationNamespaces(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.TransportFinder$3:boolean loadBean(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$URIBeanLoaderListener:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils$1:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$1:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http.auth.DigestAuthSupplier$DigestInfo:java.lang.String generateAuth(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:boolean verify(java.lang.String,javax.net.ssl.SSLSession)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],javax.net.ssl.SSLSocket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,javax.net.ssl.SSLSocket)"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraintsJaxBUtils:org.apache.cxf.transport.https.CertConstraints createCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraintsInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsMessageTrustDecider:void establishTrust(java.lang.String,org.apache.cxf.transport.http.URLConnectionInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.TrustDecisionUtil:void makeTrustDecision(org.apache.cxf.transport.http.MessageTrustDecider,org.apache.cxf.message.Message,java.net.HttpURLConnection,java.lang.String)",
            "org.apache.cxf.transport.https.HttpsMessageTrustDecider:void establishTrust(java.lang.String,org.apache.cxf.transport.http.URLConnectionInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeServiceList(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[],org.apache.cxf.transport.AbstractDestination[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeRESTfulEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeRESTfulEndpoints(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[])"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils$1:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.xml.bind.JAXBContext getContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class,javax.xml.namespace.QName,org.w3c.dom.Element,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBContext getJAXBContextForEPR()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType parseEndpointReference(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$TypeInfoObject parseType(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison parseComparison(java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination getDestinationForPath(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:boolean isResponseBodyAvailable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String getRealm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.util.Enumeration getHeaders(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void afterPropertiesSet()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine getOrCreate(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination getDestinationForPath(java.lang.String,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:boolean isResponseBodyAvailable()",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.Headers:java.lang.String getAuthorization()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String paramsToString()",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String getRealm()",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:java.util.Enumeration getHeaders(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void serveStaticContent(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List get(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.util.Locale,java.util.Locale)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getContextMethods()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.List getList(java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getProxy(java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison parseComparison(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.String getRealPropertyName(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:java.lang.String get(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo getAccessorTypeInfo(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:org.apache.cxf.jaxrs.ext.search.Beanspector setValue(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:java.lang.Object getValue(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toFiqlPrimitiveCondition(org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.text.SimpleDateFormat getDateFormat(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:boolean isTimeZoneSupported(java.util.Map,java.lang.Boolean)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.String removeMediaTypeParameter(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEncoding(javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread:void run()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.util.Map getRequestContext(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:java.lang.Object retryInvoke(java.net.URI,javax.ws.rs.core.MultivaluedMap,java.lang.Object,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.String getCollectionWrapperName(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.validation.Schema getSchema(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getInTemplates(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getOutTemplates(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XPathProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.String getRootName(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandlerSuperClass(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean isFeedRequested(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.common.util.ClassReader:void readAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClassReader:void readCode()",
            "org.apache.cxf.common.util.ParamReader:void <init>(byte[])",
            "org.apache.cxf.common.util.ParamReader:void readCode()"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Constructor)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void readLocalVariableTable()"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.configuration.security.AuthorizationPolicy getAuthorizationPolicyFromMessage(java.lang.String,java.security.Principal)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.List parseListSequence(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.Map parseMapSequence(java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setGlobalRoles(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.bus.osgi.WorkQueueSingleConfig:void updated(java.util.Dictionary)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getHeaderValues(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.util.List parseAcceptEnc(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CookieHeaderProvider:javax.ws.rs.core.Cookie fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.NewCookieHeaderProvider:javax.ws.rs.core.NewCookie fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String[] getTokens(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void addFields(java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:java.util.Map getParameters()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getPathSegments(java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setSchemasLocations(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInterceptors(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getServiceClasses(javax.servlet.ServletConfig,boolean,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.List getProviders(javax.servlet.ServletConfig,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map parseMapListSequence(java.lang.String)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void internalLog(java.util.logging.LogRecord)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:boolean isAsSevereAsThreshold(org.apache.log4j.Priority)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,java.lang.String,org.ietf.jgss.Oid,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:boolean isCredDelegationRequired(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.https.CertConstraintsInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isMtomEnabled(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentUtil:void setStreamedAttachmentProperties(org.apache.cxf.message.Message,org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.message.MessageUtils:boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:boolean isHttpVerbSupported(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:boolean setServiceLoaderAsContextLoader(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:boolean isServiceObjectRequestScope(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor getVisitor()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:boolean checkBufferingMode(org.apache.cxf.message.Message,javax.ws.rs.ext.MessageBodyWriter,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object instantiateFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void checkNumberOfParts(org.apache.cxf.message.Message,int)"
        ]
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.wsdl11.XmlIoPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.Class)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer(int)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder createDocumentBuilder()",
            "org.apache.cxf.helpers.DOMUtils:org.w3c.dom.Document createDocument()"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:java.lang.String getAbsoluteAddress(java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getAbsoluteAddress(java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void validatePart(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.'annotation'.Annotation[] getMethodAnnotations(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getBaseURI(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.reflect.Method getMethod(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:java.lang.reflect.Method getTargetMethod(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:java.lang.reflect.Method getTargetMethod(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.NSManager:java.lang.String getPrefixFromNS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)"
        ]
    },
    "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:org.apache.cxf.transport.http.DestinationRegistry getDestinationRegistryFromBus(org.apache.cxf.Bus)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkBindingFactory(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus$1:java.lang.Object resolve(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.io.CachedOutputStream:java.lang.String getBusProperty(org.apache.cxf.Bus,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getProxyMap(java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearAllMaps()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBusProviders()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void addBusExtension(java.util.List,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:javax.ws.rs.ext.RuntimeDelegate$HeaderDelegate createHeaderDelegate(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.util.Locale,java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:org.apache.cxf.jaxrs.model.OperationResourceInfo getOperationResourceInfo(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getContextMethods()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.List getList(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.List getContextFields()"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getProxy(java.util.Map,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource$NamespaceContextImpl:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchBean:java.lang.String get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.Object getValue(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.Beanspector:java.lang.Object getValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.lang.Object getValue(org.apache.cxf.jaxrs.ext.search.Beanspector,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.Object getValue(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toFiqlPrimitiveCondition(org.apache.cxf.jaxrs.ext.search.ConditionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Double)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Integer)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Long)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.util.Date)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.xml.datatype.Duration)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.text.SimpleDateFormat getDateFormat(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object convertToDate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:void <init>(java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchUtils:boolean isTimeZoneSupported(java.util.Map,java.lang.Boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object convertToDate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:void <init>(java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$1:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEncoding(javax.ws.rs.core.MediaType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setCurrentBuilder(javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.UriBuilder getCurrentBuilder()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setBaseURI(java.net.URI)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:java.net.URI getBaseURI()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setResponseBuilder(javax.ws.rs.core.Response$ResponseBuilder)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.Response$ResponseBuilder getResponseBuilder()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setRequestHeaders(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.MultivaluedMap getTemplates()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setTemplates(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:java.util.Map getRequestContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient$BodyWriter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.String getCollectionWrapperName(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getCollectionWrapperQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readNode(org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readNode(org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.validation.Schema getSchema(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Unmarshaller createUnmarshaller(java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void validateObjectIfNeeded(javax.xml.bind.Marshaller,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.validation.Schema getSchema()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getInTemplates(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates getOutTemplates(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.String getEncoding(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getBeanName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.String getRootName(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.io.InputStream getInputStream(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getAegisContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.util.Map,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandler(java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AtomElementWriter getAtomWriter(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AtomElementReader getAtomReader(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.cxf.jaxrs.provider.atom.AbstractAtomElementBuilder getAtomBuilder(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandlerSuperClass(java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandler(java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object getAtomElementHandlerSuperClass(java.util.Map,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean isFeedRequested(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getPrefix(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearProxies(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:void <init>(java.util.Map,java.util.Map,java.util.Map,java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:void adjustConcreteNames(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.BindingMessageInfo:void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoCollectionOrArray(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.AttributedURI convert(org.apache.cxf.ws.addressing.AttributedURIType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.AttributedURI convertTo200403(org.apache.cxf.ws.addressing.AttributedURIType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToNative(java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToNative(java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.Relationship convert(org.apache.cxf.ws.addressing.RelatesToType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.Relationship convertTo200403(org.apache.cxf.ws.addressing.RelatesToType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void setBusConfig(org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig)"
        ]
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getServiceClasses(javax.servlet.ServletConfig,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.List getProviders(javax.servlet.ServletConfig,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setFeatures(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)"
        ]
    },
    "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void apply(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void configure(java.lang.String,java.lang.String,org.apache.cxf.transport.http.HTTPConduit)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void updated(java.lang.String,java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.JarResource:java.util.List getJarContents(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.JarResource:java.util.List getJarContents(java.lang.String)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.message.Attachment createAttachment(javax.mail.internet.InternetHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs()"
        ]
    },
    "org.apache.cxf.bus.osgi.WorkQueueSingleConfig:void updated(java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.util.List,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void buildMatrix(java.lang.StringBuilder,javax.ws.rs.core.MultivaluedMap,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue getPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate buildPredicate(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue getPrimitiveFieldClass(java.lang.String,java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getContent(javax.activation.DataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor,javax.activation.DataSource)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttachmentPartHeader(org.apache.cxf.message.Attachment)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createFaultForException(java.lang.Class,org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean buildMessageParts(org.apache.ws.commons.schema.XmlSchemaSequence,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:void createMessagePartInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class,javax.xml.namespace.QName,java.lang.reflect.Method,boolean)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.CXFBusImpl:boolean hasExtensionByName(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaConverter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void setResourceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void checkContextMethod(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.DestinationRegistryImpl:void removeDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void deactivate()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void shutdown()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroy()"
        ]
    },
    "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void deleted(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.Headers:void removeAuthorizationHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void deleted(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void removeAuthorizationHeaders()",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void removeThreadLocalState(java.lang.Thread)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void deleted(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void removeAuthorizationHeaders()",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void removeThreadLocalState(java.lang.Thread)"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void deleted(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void removeAuthorizationHeaders()",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void removeThreadLocalState(java.lang.Thread)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void setClient(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createFaultForException(java.lang.Class,org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean buildMessageParts(org.apache.ws.commons.schema.XmlSchemaSequence,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractTransportFactory:void unregister()"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.Bus)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getProxyMap(java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBusProviders()"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void removeThreadLocalState(java.lang.Thread)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void reset()",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void access$200(org.apache.cxf.jaxrs.client.ThreadLocalClientState,java.lang.Thread)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreContentJettisonWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttributeAsElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.PartialXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void handleDeepDrop()",
            "org.apache.cxf.staxutils.DepthRestrictingStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.FragmentStreamReader:int next()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxSource:java.lang.String getQualifiedName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxSource:java.lang.String getQualifiedName()",
            "org.apache.cxf.staxutils.transform.InTransformReader:javax.xml.namespace.QName readCurrentElement()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getPrefix()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespacePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader:java.lang.String getAttributePrefix(int)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreContentJettisonWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreContentJettisonWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:void setHighWaterMark(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:void setLowWaterMark(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.phase.PhaseInterceptorChain setupOutInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.phase.PhaseInterceptorChain setupInInterceptorChain(org.apache.cxf.jaxrs.client.ClientConfiguration)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractEndpointSelectionInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void destroyBus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroyBus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.ManagedBus:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.CXFBusImpl:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSBindingFactory:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkBindingFactory(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void <init>(org.apache.cxf.Bus,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:org.apache.cxf.security.SecurityContext createSecurityContext(javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.SimpleAuthorizingFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServiceImpl:void createMessagePartInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class,javax.xml.namespace.QName,java.lang.reflect.Method,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void updateUnwrappedOperation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:java.lang.Object createEndpoint(javax.ws.rs.core.Application,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.net.URI)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void <init>(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapTLSClientParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapSpecificElements(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void mapTLSServerParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine getOrCreate(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(java.lang.String,int,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:org.apache.cxf.jaxrs.model.ClassResourceInfo findResource(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.namespace.QName getQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void deleted(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void removeAuthorizationHeaders()",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List remove(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void removeThreadLocalState(java.lang.Thread)"
        ]
    },
    "org.apache.cxf.transport.http.DestinationRegistryImpl:java.util.Collection getDestinations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.AbstractDestination[] getSortedDestinations()"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.Collection getSubResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyTlsClientParameters(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:org.apache.cxf.configuration.jsse.TLSServerParameters createTlsServerParameters(java.util.Dictionary)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(org.apache.cxf.configuration.jsse.TLSClientParameters,java.net.HttpURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.net.HttpURLConnection createConnection(org.apache.cxf.configuration.jsse.TLSClientParameters,java.net.Proxy,java.net.URL)"
        ]
    },
    "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLContext createSSLContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void doStart()"
        ]
    },
    "org.apache.cxf.transport.http.blueprint.HttpConduitBPBeanDefinitionParser:void mapTLSClientParameters(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.blueprint.HttpConduitBPBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,javax.xml.namespace.QName,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.blueprint.HttpConduitBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http.blueprint.HttpDestinationBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getContent(javax.activation.DataSource)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.DataSourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.lang.Object build(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void configure(java.lang.Object,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus$1:void onApplicationEvent(org.springframework.context.ApplicationEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerImpl:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:void destroy()",
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void preShutdown()"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addDefaultBus(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser$SpringJAXRSServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser$JAXRSSpringClientFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void stop(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String,java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.blueprint.BlueprintBus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void <init>()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.beans.factory.xml.NamespaceHandlerResolver tryFindNamespaceHandler(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void destroyBeans()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.binding.AbstractBaseBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void start()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection createConnection(org.apache.cxf.message.Message,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:int getMaxRetransmits()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void configure(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.eclipse.jetty.util.component.Container$Listener getMBeanContainer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void <init>(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,org.apache.cxf.Bus,java.lang.String,int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine getOrCreate(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.transport.MessageObserver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SingletonFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,javax.wsdl.Definition,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addLoggingSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.Logging)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addGZipSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.GZIP)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getBaseInputSource()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.ServerRegistryImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus getBusForName(java.lang.String,org.springframework.context.ApplicationContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addDefaultBus(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addBus(org.springframework.context.ApplicationContext,java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:javax.management.ObjectName getObjectName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper:javax.management.ObjectName getObjectName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:javax.management.ObjectName getObjectName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.ManagedBus:javax.management.ObjectName getObjectName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRef(java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRefWithServiceClass(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setApplication(javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void initClient(org.apache.cxf.jaxrs.client.AbstractClient,org.apache.cxf.endpoint.Endpoint,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser$SpringJAXRSServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser$JAXRSSpringClientFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void createServerFromApplication(java.lang.String,javax.servlet.ServletConfig,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.io.InputStream getClasspathResourceStream(java.lang.String,java.lang.Class,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDocs(java.lang.'annotation'.Annotation[],java.lang.StringBuilder,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.net.URL getClasspathResourceURL(java.lang.String,java.lang.Class,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.net.URL getResourceURL(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientConfiguration:org.apache.cxf.transport.Conduit getConduit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientConfiguration:long getSynchronousTimeout()",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:boolean isResponseExpectedForOneway()",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:org.apache.cxf.transport.http.HTTPConduit getHttpConduit()"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Exchange createExchange(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI build(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.PathSegment replacePathSegment(javax.ws.rs.core.PathSegment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:javax.ws.rs.core.MultivaluedMap getRequestHeaders()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getPathToMatch(org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String doGetPath(boolean,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:void checkContentLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:java.lang.String getAuthenticationScheme()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:java.lang.String getAuthenticationScheme()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:java.util.List getRequestHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:java.util.List getRequestHeader(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl:java.lang.String getRequestHeaderValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:java.lang.String getRequestHeaderValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.ProtocolHeadersImpl:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpHeaders(org.apache.cxf.message.Message,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpHeaders(org.apache.cxf.message.Message,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.Object clone()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI getCurrentURI()",
            "org.apache.cxf.jaxrs.client.LocalClientState:void <init>(org.apache.cxf.jaxrs.client.LocalClientState)"
        ]
    },
    "org.apache.cxf.jaxrs.client.LocalClientState:void <init>(org.apache.cxf.jaxrs.client.LocalClientState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,java.io.InputStream,org.apache.cxf.jaxrs.ext.multipart.ContentDisposition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(javax.ws.rs.core.MultivaluedMap,javax.activation.DataHandler,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.Attachment build()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.LocalClientState:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.LocalClientState:void <init>(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void <init>(java.lang.String)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void <init>(java.lang.String,long)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <init>(java.net.URI,java.lang.ClassLoader,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:void <init>(java.net.URI)",
            "org.apache.cxf.jaxrs.client.LocalClientState:org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:java.lang.Object createInstance(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:java.lang.Object getInstance(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void reportServerError(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectThroughMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object extractFromMethod(java.lang.Object,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoCollectionOrArray(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils$1:java.lang.Object run()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils$2:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void invokeLifeCycleMethod(java.lang.Object,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider:void <init>(java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:java.lang.Object createInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleWriteException(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Throwable,java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.security.SimpleAuthorizingFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response getResponse()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleExceptionEnd(java.lang.Throwable,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleJAXBException(javax.xml.bind.JAXBException,boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleXMLStreamException(javax.xml.stream.XMLStreamException,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void reportError(java.lang.String,java.lang.Exception,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void reportError(java.lang.String,java.lang.Exception)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromEntry(org.apache.abdera.model.Entry,java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,javax.activation.DataSource,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.io.InputStream,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:javax.ws.rs.core.MultivaluedMap access$500(org.apache.cxf.jaxrs.provider.JAXRSDataBinding,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:javax.ws.rs.core.MultivaluedMap access$200(org.apache.cxf.jaxrs.provider.JAXRSDataBinding,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:void possiblyAddHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setHeaders(java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceHeader(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getFirst(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleMethod(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.io.InputStream,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.String getContentId()",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:javax.ws.rs.core.MediaType getContentType()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getProtocolHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void handleRangeRequest(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.HttpHeaders,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:boolean isPayloadEmpty(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder matrixParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableMediaTypes()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getListValues(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void handleVaryValue(java.lang.String[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.util.List getHeaderAsList(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:int getBodyIndex(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getAccept(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:boolean isDuplicate(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void putSingle(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(org.apache.cxf.message.Attachment,javax.ws.rs.ext.Providers)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,javax.activation.DataHandler,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:void <init>(java.lang.String,java.io.InputStream,org.apache.cxf.jaxrs.ext.multipart.ContentDisposition)",
            "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder id(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder mediaType(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder header(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.Attachment build()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void setResponseDate(javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client type(java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client modified(java.util.Date,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client language(java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client match(javax.ws.rs.core.EntityTag,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client encoding(java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.DataSourceProvider:void setContentTypeIfNeeded(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder matrixParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrixParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQueryParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrixParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQueryParam(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variants(java.util.List)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void handleVaryValue(java.lang.String[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceHeader(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:java.lang.Object clone()",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response getResponse()",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.LocalClientState:void <init>(org.apache.cxf.jaxrs.client.LocalClientState)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient headers(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setTemplates(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setTemplates(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient 'to'(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.ClientState getActualState()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient 'to'(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.ClientState getActualState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getPathParameters()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedURIs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getMatchedURIs()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.transport.http.blueprint.HttpConduitBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.blueprint.HttpBPHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.transport.http.blueprint.HttpDestinationBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.blueprint.HttpBPHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BusDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.CXFCoreNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response checkMetadataRequest(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDynamicSubresource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName getJaxbQName(org.apache.cxf.common.jaxb.JAXBContextProxy,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void startResourceTag(java.lang.StringBuilder,java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName access$200(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,org.apache.cxf.common.jaxb.JAXBContextProxy,java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName access$300(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,java.lang.String,java.lang.String,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$XMLNameQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceClasses(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelBeans(org.apache.cxf.jaxrs.model.UserResource[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.util.List,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelBeansWithServiceClass(java.util.List,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRefWithServiceClass(java.lang.String,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBeanObjects(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setServiceBean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setServiceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setResourceClass(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.Object getConvertedExpression(java.lang.String,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.String getConvertedExpression(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.lang.String toSQL(org.apache.cxf.jaxrs.ext.search.SearchCondition,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.lang.String toSQL(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.lang.String toSQL(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.String toSQL(java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <init>(java.lang.Class,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <init>(java.lang.Class,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void <init>(java.lang.String,java.lang.Object,java.lang.reflect.Type,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckCondition:void <init>(java.lang.String,java.lang.Object,java.lang.reflect.Type,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void <init>(java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition and(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String convertPlainQueriesToFiqlExp(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition or(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void handleMapper(java.util.List,org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,org.apache.cxf.message.Message,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper doCreateExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ParameterHandler createParameterHandler(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void setSchemas(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void setSchemas(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:java.lang.Object createInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setUriParts(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void <init>(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder schemeSpecificPart(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder uri(java.net.URI)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceQuery(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getMatrixParams(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.PathSegmentImpl:javax.ws.rs.core.MultivaluedMap getMatrixParameters()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchConsumeTypes(javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchProduceTypes(javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchMimeTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRef(java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRefWithServiceClass(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.net.URI,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.net.URI,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.ContextResolver getContextResolver(java.lang.Class,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.ContextResolver getContextResolver(java.lang.Class,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContext(java.lang.reflect.Type,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getResolver(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createResourceValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.ExceptionMapper getExceptionMapper(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.ExceptionMapper getExceptionMapper(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBusProviders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void setUserProviders(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void registerUserProvider(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.ContextResolver getContextResolver(java.lang.Class,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.ExceptionMapper getExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:org.apache.cxf.jaxrs.client.ResponseExceptionMapper findExceptionMapper(java.lang.reflect.Method,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object handleResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response handleResponse(org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ExceptionMapperComparator:int compare(javax.ws.rs.ext.ExceptionMapper,javax.ws.rs.ext.ExceptionMapper)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initJaxbProviders()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:java.lang.Object createProvider(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getSharedInstance()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper createExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ExceptionMapper doCreateExceptionMapper(java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ParameterHandler createParameterHandler(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.client.ResponseExceptionMapper createResponseExceptionMapper(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void handleMapper(java.util.List,org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,org.apache.cxf.message.Message,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader createMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:java.util.List getRequestHandlers()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter createMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyReader chooseMessageReader(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.MessageBodyWriter chooseMessageWriter(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void clearThreadLocalProxies()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initProviders(java.util.List)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:int compareClasses(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:int access$500(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ProvidersImpl:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void createEntryContent(org.apache.abdera.factory.Factory,org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Entry createEntryFromObject(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromEntry(org.apache.abdera.model.Entry,java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.aegis.AegisJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean buildFeed(org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Feed createFeedFromCollectionWrapper(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:boolean buildEntry(org.apache.abdera.model.Entry,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Entry createEntryFromObject(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String parsePackageName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.auth.SpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,java.lang.String,org.ietf.jgss.Oid,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:boolean doProcessResponse(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()"
        ]
    },
    "org.apache.cxf.interceptor.transform.TransformInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void validatePart(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.UriInfo createUriInfo(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$ASTNode parseAndsOrsBrackets(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.SearchCondition parse(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$ASTNode parseAndsOrsBrackets(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void setResponseStatus(org.apache.cxf.message.Message,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleWriteException(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Throwable,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:org.apache.cxf.databinding.DataBinding getDataBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceQueryParam(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:byte[] getServiceTicket(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder type(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingWadl(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingSchema(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void reportServerError(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder language(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder variant(javax.ws.rs.core.Variant)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder tag(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addProcessingInstructions(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addSchemaLocation(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentUnmarshaller(javax.xml.bind.Unmarshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.stream.XMLStreamReader createDepthReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.io.InputStream,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.net.URI getLink(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.net.URI getLink(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.net.URI getBaseURI()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.String getValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition comparesTo(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.xml.datatype.Duration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.lang.Double,java.lang.Double[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.lang.Long,java.lang.Long[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.lang.Integer,java.lang.Integer[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(java.util.Date,java.util.Date[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition equalTo(javax.xml.datatype.Duration,javax.xml.datatype.Duration[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterOrEqualTo(java.lang.Double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterOrEqualTo(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterOrEqualTo(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterThan(java.lang.Double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterThan(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition greaterThan(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessOrEqualTo(java.lang.Double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessOrEqualTo(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessOrEqualTo(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessThan(java.lang.Double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessThan(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lessThan(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lexicalAfter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lexicalBefore(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lexicalNotAfter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition lexicalNotBefore(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.lang.Double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition after(javax.xml.datatype.Duration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition before(javax.xml.datatype.Duration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notAfter(javax.xml.datatype.Duration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notBefore(javax.xml.datatype.Duration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition notEqualTo(javax.xml.datatype.Duration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getBaseUri()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getBaseUri()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getBaseURI(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:java.lang.String getCompleteServicePrincipalName()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getBaseUriBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getBaseUriBuilder()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getAbsolutePathAsString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getAbsolutePath()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getRequestUri()"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.String getBaseURI(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingWadl(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:java.lang.String getCompleteServicePrincipalName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:org.ietf.jgss.GSSContext createGSSContext()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:boolean isSecure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalSecurityContext:boolean isSecure()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:void updatePath(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updatePath(org.apache.cxf.message.Message,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeansJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:void writeToWriter(javax.xml.stream.XMLStreamWriter,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.w3c.dom.Document copy(org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:void copyReaderToWriter(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void calcContextCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,javax.net.ssl.SSLSocket)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void configureConduitFromEndpointInfo(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyTlsClientParameters(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.transport.http.TrustDecisionUtil:void makeTrustDecision(org.apache.cxf.transport.http.MessageTrustDecider,org.apache.cxf.message.Message,java.net.HttpURLConnection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeRESTfulEndpoints(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeServiceList(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[],org.apache.cxf.transport.AbstractDestination[])"
        ]
    },
    "org.apache.cxf.endpoint.PreexistingConduitSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType parseEndpointReference(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo createResourceInfo(java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination getDestinationForPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.http.AbstractHTTPDestination checkRestfulRequest(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void destroy()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void afterPropertiesSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ClassReader:void readCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:void readCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Constructor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:void readLocalVariableTable()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.configuration.security.AuthorizationPolicy getAuthorizationPolicyFromMessage(java.lang.String,java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.List parseListSequence(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.Map parseMapSequence(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setExtensions(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setGlobalRoles(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getHeaderValues(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getHeaderValues(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl:java.util.List parseAcceptEnc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CookieHeaderProvider:javax.ws.rs.core.Cookie fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CookieHeaderProvider:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.NewCookieHeaderProvider:javax.ws.rs.core.NewCookie fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.NewCookieHeaderProvider:java.lang.Object fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void addFields(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)"
        ]
    },
    "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:org.apache.cxf.jaxrs.ext.multipart.ContentDisposition getContentDisposition()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment,org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:java.util.Map getParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getPathSegments(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setPathAndMatrix(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getPathSegments(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setSchemasLocations(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map parseMapListSequence(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getClassNameAndProperties(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void internalLog(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:boolean isAsSevereAsThreshold(org.apache.log4j.Priority)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:void setStreamedAttachmentProperties(org.apache.cxf.message.Message,org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.Headers:void transferProtocolHeadersToURLConnection(java.net.URLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,java.lang.String,org.ietf.jgss.Oid,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:boolean isCredDelegationRequired(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.https.CertConstraintsInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isMtomEnabled(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentUtil:void setStreamedAttachmentProperties(org.apache.cxf.message.Message,org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.message.MessageUtils:boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:boolean isHttpVerbSupported(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <init>(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:boolean setServiceLoaderAsContextLoader(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:boolean isServiceObjectRequestScope(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor getVisitor()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:boolean checkBufferingMode(org.apache.cxf.message.Message,javax.ws.rs.ext.MessageBodyWriter,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object instantiateFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.Response createResponse(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,int,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void checkNumberOfParts(org.apache.cxf.message.Message,int)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:boolean setServiceLoaderAsContextLoader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:boolean isServiceObjectRequestScope(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionVisitor getVisitor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.Object getConvertedExpression(java.lang.String,java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.FormUtils:void checkNumberOfParts(org.apache.cxf.message.Message,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.binding.xml.wsdl11.XmlIoPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)",
            "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaSerializer:void writeXml(org.w3c.dom.Node,java.io.PrintWriter)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()"
        ]
    },
    "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder createDocumentBuilder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.DOMUtils:org.w3c.dom.Document createDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.interceptor.Fault:org.w3c.dom.Element getOrCreateDetail()"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:java.lang.String getAbsoluteAddress(java.lang.String,org.apache.cxf.transport.AbstractDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void writeUnformattedSOAPEndpoints(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[])",
            "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void writeUnformattedRESTfulEndpoints(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[])"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:java.lang.String getAbsoluteAddress(java.lang.String,org.apache.cxf.transport.AbstractDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writerSoapEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.servlet.servicelist.FormattedServiceListWriter:void writeRESTfulEndpoint(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.Map getJaxbAnnoMap(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.'annotation'.Annotation[] getMethodAnnotations(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.reflect.Method getMethod(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:java.lang.reflect.Method getTargetMethod(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:java.lang.reflect.Method getTargetMethod(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus$1:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.lang.String getBusProperty(org.apache.cxf.Bus,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void readBusProperties()"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getProxyMap(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getFieldProxyMap()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getSetterProxyMap()"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearAllMaps()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void addBusExtension(java.util.List,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setBusProviders()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$AcceptLanguageComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.List getContextFields()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.Object getValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean isMet(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.lang.Object getValue(org.apache.cxf.jaxrs.ext.search.Beanspector,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object convertToDate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object parseType(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String,org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.Property is(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition and(org.apache.cxf.jaxrs.ext.search.client.CompleteCondition,org.apache.cxf.jaxrs.ext.search.client.CompleteCondition,org.apache.cxf.jaxrs.ext.search.client.CompleteCondition[])",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition and(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition or(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition or(org.apache.cxf.jaxrs.ext.search.client.CompleteCondition,org.apache.cxf.jaxrs.ext.search.client.CompleteCondition,org.apache.cxf.jaxrs.ext.search.client.CompleteCondition[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$1:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$1:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareSortedMediaTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils$1:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setCurrentBuilder(javax.ws.rs.core.UriBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setCurrentBuilder(javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void resetCurrentBuilder(java.net.URI)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.UriBuilder getCurrentBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.UriBuilder getCurrentBuilder()",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.UriBuilder getCurrentBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setBaseURI(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setBaseURI(java.net.URI)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void resetBaseAddress(java.net.URI)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:java.net.URI getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:java.net.URI getBaseURI()",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI getBaseURI()",
            "org.apache.cxf.jaxrs.client.AbstractClient:void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setResponseBuilder(javax.ws.rs.core.Response$ResponseBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setResponseBuilder(javax.ws.rs.core.Response$ResponseBuilder)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void resetResponse()",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.Response$ResponseBuilder getResponseBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.Response$ResponseBuilder getResponseBuilder()",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response getResponse()"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setRequestHeaders(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void setRequestHeaders(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.MultivaluedMap getRequestHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.MultivaluedMap getRequestHeaders()",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client type(java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client modified(java.util.Date,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client language(java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client match(javax.ws.rs.core.EntityTag,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client encoding(java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getHeaders()",
            "org.apache.cxf.jaxrs.client.AbstractClient:void possiblyAddHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:boolean isDuplicate(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceHeader(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.MultivaluedMap getTemplates()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:javax.ws.rs.core.MultivaluedMap getTemplates()",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getCollectionWrapperQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readNode(org.w3c.dom.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getNode(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object[] getNodes(java.lang.String,java.util.Map,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void validateObjectIfNeeded(javax.xml.bind.Marshaller,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.validation.Schema getSchema()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.io.InputStream getInputStream(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader$1:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Feed createFeedFromCollectionWrapper(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.service.model.BindingMessageInfo:void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToNative(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType parseEndpointReference(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void setBusConfig(org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.common.util.JarResource:java.util.List getJarContents(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder path(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder segment(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue getPrimitiveFieldClass(java.lang.String,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.Class getPrimitiveFieldClass(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor,javax.activation.DataSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createFaultForException(java.lang.Class,org.apache.cxf.service.model.FaultInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ProviderInfo:void <init>(java.lang.Object,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void setResourceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void checkContextMethod(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextSetterMethods(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void deactivate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void destroy()"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void clearCaches()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.CXFBusImpl:void setProperties(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void clear()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearAllMaps()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void clearContexts()",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:void clearContexts()"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void addDestination(org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processTypes(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.ws.addressing.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void addParameter(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:void set(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void doSetParameters(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:void setTransformerParameter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void setSchemaLocation(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void setContentType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:int hashCode()",
            "org.apache.cxf.jaxrs.model.ProviderInfo:int hashCode()",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:int hashCode()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setClient(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void configureConduitFromEndpointInfo(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyClientPolicies(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void propertyChange(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client reset()"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void access$200(org.apache.cxf.jaxrs.client.ThreadLocalClientState,java.lang.Thread)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState$CleanupThread:void run()"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreContentJettisonWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreContentJettisonWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.PartialXMLStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void handleDeepDrop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()"
        ]
    },
    "org.apache.cxf.staxutils.DepthRestrictingStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:javax.xml.namespace.QName readCurrentElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getPrefix()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$JettisonReader:java.lang.String getAttributePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreContentJettisonWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBindingFactory:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class)"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.CXFAuthenticator:java.net.PasswordAuthentication getPasswordAuthentication()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void destroy()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientConfiguration:void prepareConduitSelector(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientConfiguration:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapSpecificElements(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpDestinationBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void updated(java.lang.String,java.util.Dictionary)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(java.lang.String,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String setEncoding(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.namespace.QName getQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.String getRootName(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.http.DestinationRegistryImpl:org.apache.cxf.transport.AbstractDestination[] getSortedDestinations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.TLSServerParametersConfig createTLSServerParametersConfig(java.lang.String,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.net.HttpURLConnection createConnection(org.apache.cxf.configuration.jsse.TLSClientParameters,java.net.Proxy,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection createConnection(org.apache.cxf.message.Message,java.net.URL)"
        ]
    },
    "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void doStart()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.blueprint.HttpConduitBPBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServerRegistryImpl:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser$JAXRSSpringClientFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus getBusForName(java.lang.String,org.springframework.context.ApplicationContext,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.beans.factory.xml.NamespaceHandlerResolver tryFindNamespaceHandler(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:void <init>(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void <init>(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,org.apache.cxf.Bus,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SingletonFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,javax.wsdl.Definition,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyTlsClientParameters(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:org.apache.cxf.configuration.jsse.TLSServerParameters createTlsServerParameters(java.util.Dictionary)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void applyFeatures(org.apache.cxf.jaxrs.client.AbstractClient)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addLoggingSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.Logging)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addGZipSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.GZIP)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit access$000(org.apache.cxf.interceptor.MessageSenderInterceptor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addBus(org.springframework.context.ApplicationContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setApplication(javax.ws.rs.core.Application)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDocs(java.lang.'annotation'.Annotation[],java.lang.StringBuilder,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void addDocsAndCloseElement(java.lang.StringBuilder,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDocs(java.lang.'annotation'.Annotation[],java.lang.StringBuilder,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.net.URL getResourceURL(java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.io.InputStream getResourceStream(java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientConfiguration:long getSynchronousTimeout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void waitForResponseCode(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientConfiguration:boolean isResponseExpectedForOneway()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void checkClientException(org.apache.cxf.message.Message,java.lang.Exception)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientConfiguration:org.apache.cxf.transport.http.HTTPConduit getHttpConduit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String doGetPath(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getPath(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getAbsolutePathAsString()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalRequest:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date,javax.ws.rs.core.EntityTag)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:java.lang.String getRequestHeaderValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProtocolHeaders:java.lang.String getRequestHeaderValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType[] values()",
            "org.apache.cxf.transports.http.configuration.ProxyServerType:org.apache.cxf.transports.http.configuration.ProxyServerType[] values()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip[] values()",
            "org.apache.cxf.transport.https.CertConstraints$Combinator:org.apache.cxf.transport.https.CertConstraints$Combinator[] values()",
            "org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType:org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType[] values()",
            "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getFilters()",
            "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getNegativeFilters()",
            "org.apache.cxf.common.WSDLConstants$WSDLVersion:org.apache.cxf.common.WSDLConstants$WSDLVersion[] values()",
            "org.apache.cxf.common.security.TokenType:org.apache.cxf.common.security.TokenType[] values()",
            "org.apache.cxf.headers.Header$Direction:org.apache.cxf.headers.Header$Direction[] values()",
            "org.apache.cxf.message.FaultMode:org.apache.cxf.message.FaultMode[] values()",
            "org.apache.cxf.interceptor.InterceptorChain$State:org.apache.cxf.interceptor.InterceptorChain$State[] values()",
            "org.apache.cxf.annotations.FactoryType$Type:org.apache.cxf.annotations.FactoryType$Type[] values()",
            "org.apache.cxf.annotations.Policy$Placement:org.apache.cxf.annotations.Policy$Placement[] values()",
            "org.apache.cxf.annotations.SchemaValidation$SchemaValidationType:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType[] values()",
            "org.apache.cxf.annotations.WSDLDocumentation$Placement:org.apache.cxf.annotations.WSDLDocumentation$Placement[] values()",
            "org.apache.cxf.endpoint.ManagedEndpoint$State:org.apache.cxf.endpoint.ManagedEndpoint$State[] values()",
            "org.apache.cxf.security.claims.authorization.ClaimMode:org.apache.cxf.security.claims.authorization.ClaimMode[] values()",
            "org.apache.cxf.service.model.MessageInfo$Type:org.apache.cxf.service.model.MessageInfo$Type[] values()",
            "org.apache.cxf.service.factory.FactoryBeanListener$Event:org.apache.cxf.service.factory.FactoryBeanListener$Event[] values()",
            "org.apache.cxf.configuration.spring.BusWiringType:org.apache.cxf.configuration.spring.BusWiringType[] values()",
            "org.apache.cxf.configuration.security.CombinatorType:org.apache.cxf.configuration.security.CombinatorType[] values()",
            "org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses:org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses[] values()",
            "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType[] values()",
            "org.apache.cxf.bus.BusState:org.apache.cxf.bus.BusState[] values()",
            "org.apache.cxf.jaxrs.model.ParameterType:org.apache.cxf.jaxrs.model.ParameterType[] values()",
            "org.apache.cxf.jaxrs.ext.search.ConditionType:org.apache.cxf.jaxrs.ext.search.ConditionType[] values()",
            "org.apache.cxf.jaxrs.ext.search.collections.CollectionCheck:org.apache.cxf.jaxrs.ext.search.collections.CollectionCheck[] values()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.Attachment build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ThreadLocalClientState:void <init>(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.ClientState getActualState()"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <init>(java.net.URI,java.lang.ClassLoader,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void <init>(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:void <init>(java.net.URI)"
        ]
    },
    "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:java.lang.Object getInstance(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectThroughMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void tryInjectMessageContext(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object extractFromMethod(java.lang.Object,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object extractFieldValue(java.lang.reflect.Field,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider:void <init>(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider:void <init>(java.lang.Object)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.spring.SpringResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()"
        ]
    },
    "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleJAXBException(javax.xml.bind.JAXBException,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleXMLStreamException(javax.xml.stream.XMLStreamException,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void reportError(java.lang.String,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.model.Feed createFeedFromCollectionWrapper(org.apache.abdera.factory.Factory,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.String getCollectionMethod(java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List getAttachments(java.util.List,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void possiblyAddHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client accept(javax.ws.rs.core.MediaType[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client accept(java.lang.String[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client cookie(javax.ws.rs.core.Cookie)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client acceptLanguage(java.lang.String[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client acceptEncoding(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.String getContentId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment,org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map fromListToMap(java.util.List)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:javax.ws.rs.core.MediaType getContentType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:boolean isPayloadEmpty(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:boolean isPayloadEmpty(javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableMediaTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableMediaTypes()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:boolean isRedirectPossible(javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getListValues(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Locale getLanguage()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MediaType getMediaType()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.String getHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:org.apache.cxf.jaxrs.ext.multipart.ContentDisposition getContentDisposition()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.io.InputStream decodeIfNeeded(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.util.List getHeaderAsList(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:int getBodyIndex(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getParameters(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:boolean isDuplicate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void possiblyAddHeader(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder id(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder mediaType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder:org.apache.cxf.jaxrs.ext.multipart.AttachmentBuilder header(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void setResponseDate(javax.ws.rs.core.MultivaluedMap,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client type(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client type(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient type(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client modified(java.util.Date,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient modified(java.util.Date,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client language(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient language(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client match(javax.ws.rs.core.EntityTag,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient match(javax.ws.rs.core.EntityTag,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client encoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient encoding(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.DataSourceProvider:void setContentTypeIfNeeded(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataSourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType[] values()",
            "org.apache.cxf.transports.http.configuration.ProxyServerType:org.apache.cxf.transports.http.configuration.ProxyServerType[] values()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip[] values()",
            "org.apache.cxf.transport.https.CertConstraints$Combinator:org.apache.cxf.transport.https.CertConstraints$Combinator[] values()",
            "org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType:org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType[] values()",
            "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getFilters()",
            "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getNegativeFilters()",
            "org.apache.cxf.common.WSDLConstants$WSDLVersion:org.apache.cxf.common.WSDLConstants$WSDLVersion[] values()",
            "org.apache.cxf.common.security.TokenType:org.apache.cxf.common.security.TokenType[] values()",
            "org.apache.cxf.headers.Header$Direction:org.apache.cxf.headers.Header$Direction[] values()",
            "org.apache.cxf.message.FaultMode:org.apache.cxf.message.FaultMode[] values()",
            "org.apache.cxf.interceptor.InterceptorChain$State:org.apache.cxf.interceptor.InterceptorChain$State[] values()",
            "org.apache.cxf.annotations.FactoryType$Type:org.apache.cxf.annotations.FactoryType$Type[] values()",
            "org.apache.cxf.annotations.Policy$Placement:org.apache.cxf.annotations.Policy$Placement[] values()",
            "org.apache.cxf.annotations.SchemaValidation$SchemaValidationType:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType[] values()",
            "org.apache.cxf.annotations.WSDLDocumentation$Placement:org.apache.cxf.annotations.WSDLDocumentation$Placement[] values()",
            "org.apache.cxf.endpoint.ManagedEndpoint$State:org.apache.cxf.endpoint.ManagedEndpoint$State[] values()",
            "org.apache.cxf.security.claims.authorization.ClaimMode:org.apache.cxf.security.claims.authorization.ClaimMode[] values()",
            "org.apache.cxf.service.model.MessageInfo$Type:org.apache.cxf.service.model.MessageInfo$Type[] values()",
            "org.apache.cxf.service.factory.FactoryBeanListener$Event:org.apache.cxf.service.factory.FactoryBeanListener$Event[] values()",
            "org.apache.cxf.configuration.spring.BusWiringType:org.apache.cxf.configuration.spring.BusWiringType[] values()",
            "org.apache.cxf.configuration.security.CombinatorType:org.apache.cxf.configuration.security.CombinatorType[] values()",
            "org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses:org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses[] values()",
            "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType[] values()",
            "org.apache.cxf.bus.BusState:org.apache.cxf.bus.BusState[] values()",
            "org.apache.cxf.jaxrs.model.ParameterType:org.apache.cxf.jaxrs.model.ParameterType[] values()",
            "org.apache.cxf.jaxrs.ext.search.ConditionType:org.apache.cxf.jaxrs.ext.search.ConditionType[] values()",
            "org.apache.cxf.jaxrs.ext.search.collections.CollectionCheck:org.apache.cxf.jaxrs.ext.search.collections.CollectionCheck[] values()"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void initClient(org.apache.cxf.jaxrs.client.AbstractClient,org.apache.cxf.endpoint.Endpoint,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.blueprint.HttpBPHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void startResourceTag(java.lang.StringBuilder,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleResource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.ClassResourceInfo,java.util.Set,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDynamicSubresource(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName access$200(org.apache.cxf.jaxrs.model.wadl.WadlGenerator,org.apache.cxf.common.jaxb.JAXBContextProxy,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$JaxbContextQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$XMLNameQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.ClassLoader)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.net.URI,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void setResourceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.String getConvertedExpression(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.String getConvertedExpression(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.AbstractComplexCondition:java.lang.String toSQL(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.lang.String toSQL(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.String toSQL(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.Class,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.Class,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <init>(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckCondition:void <init>(java.lang.String,java.lang.Object,java.lang.reflect.Type,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.List createConditions(java.util.Map,java.util.Map,java.util.Map,org.apache.cxf.jaxrs.ext.search.ConditionType)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:void <init>(java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.MultivaluedMap getQueryParameters()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void <init>(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getBaseUriBuilder()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getRequestUriBuilder()",
            "org.apache.cxf.jaxrs.client.AbstractClient:void resetCurrentBuilder(java.net.URI)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder schemeSpecificPart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder uri(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replacePath(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient resetQuery()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.PathSegmentImpl:javax.ws.rs.core.MultivaluedMap getMatrixParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setPathAndMatrix(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String fromPathSegment(javax.ws.rs.core.PathSegment)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.net.URI,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.core.Request getRequest()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.core.HttpHeaders getHttpHeaders()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.ext.Providers getProviders()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.core.SecurityContext getSecurityContext()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.core.UriInfo getUriInfo()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.servlet.http.HttpServletRequest getHttpServletRequest()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.servlet.http.HttpServletResponse getHttpServletResponse()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.servlet.ServletConfig getServletConfig()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getResolver(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getResolver(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.ExceptionMapper getExceptionMapper(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.ExceptionMapper getExceptionMapper(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.jaxrs.provider.ProviderFactory setupFactory(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:void registerUserProvider(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$ExceptionMapperComparator:int compare(javax.ws.rs.ext.ExceptionMapper,javax.ws.rs.ext.ExceptionMapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ExceptionMapperComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:java.lang.Object createProvider(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initJaxbProviders()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getSharedInstance()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:java.util.List getRequestHandlers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response handleMetadataRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:int compareClasses(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:int access$500(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void handleMapper(java.util.List,org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,org.apache.cxf.message.Message,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:int compareClasses(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:java.lang.reflect.Type[] getGenericInterfaces(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory:int access$500(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ExceptionMapperComparator:int compare(javax.ws.rs.ext.ExceptionMapper,javax.ws.rs.ext.ExceptionMapper)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.MessageBodyReader getMessageBodyReader(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalProviders:javax.ws.rs.ext.MessageBodyWriter getMessageBodyWriter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.io.InputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.net.URI getLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.net.URI getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getBaseUriBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getBaseUriBuilder()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getAbsolutePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getAbsolutePath()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getRequestUri()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getRequestUri()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getRequestUriBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updatePath(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean addSchemaDocument(org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List,org.w3c.dom.Document,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String toString()",
            "org.apache.cxf.staxutils.W3CDOMStreamReader:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void configureConduitFromEndpointInfo(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo createResourceInfo(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doHandleClassParams(java.lang.StringBuilder,java.util.Map,boolean,org.apache.cxf.jaxrs.model.ParameterType[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void writeParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setExtensions(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getHeaderValues(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getListValues(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CookieHeaderProvider:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.NewCookieHeaderProvider:java.lang.Object fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.blueprint.HttpConduitBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http.blueprint.HttpDestinationBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.bus.blueprint.BusDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:org.apache.cxf.jaxrs.ext.multipart.ContentDisposition getContentDisposition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.MultipartBody:org.apache.cxf.jaxrs.ext.multipart.Attachment getAttachment(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment,org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:boolean matchAttachmentId(org.apache.cxf.jaxrs.ext.multipart.Attachment,org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setPathAndMatrix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setUriParts(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replacePath(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getPathSegments(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments(boolean)",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readPrimitiveValue(org.w3c.dom.Node,java.lang.Class)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer,int)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaSerializer:void writeXml(org.w3c.dom.Node,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaSerializer:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addDocumentation(javax.wsdl.WSDLElement,java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:org.w3c.dom.Document createDocument()"
        ]
    },
    "org.apache.cxf.interceptor.Fault:org.w3c.dom.Element getOrCreateDetail()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void writeUnformattedSOAPEndpoints(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void writeServiceList(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[],org.apache.cxf.transport.AbstractDestination[])"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void writeUnformattedRESTfulEndpoints(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void writeServiceList(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[],org.apache.cxf.transport.AbstractDestination[])"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.Map getJaxbAnnoMap(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void readBusProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <init>(java.io.PipedInputStream)",
            "org.apache.cxf.io.CachedOutputStream:void <init>(long)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getFieldProxyMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextFieldProxy(java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearThreadLocalProxies()"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map getSetterProxyMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy getContextSetterProxy(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearThreadLocalProxies()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean isMet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.OrSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.AndSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.util.List findAll(java.util.Collection)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object parseType(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String,org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$TypeInfoObject parseType(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object parseType(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String,org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.Property is(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.Property and(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.Property or(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition getOrCondition(org.apache.cxf.jaxrs.ext.search.client.SearchConditionBuilder,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition and(org.apache.cxf.jaxrs.ext.search.client.CompleteCondition,org.apache.cxf.jaxrs.ext.search.client.CompleteCondition,org.apache.cxf.jaxrs.ext.search.client.CompleteCondition[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder:org.apache.cxf.jaxrs.ext.search.client.CompleteCondition or(org.apache.cxf.jaxrs.ext.search.client.CompleteCondition,org.apache.cxf.jaxrs.ext.search.client.CompleteCondition,org.apache.cxf.jaxrs.ext.search.client.CompleteCondition[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$1:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator:int compare(javax.ws.rs.core.Variant,javax.ws.rs.core.Variant)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareSortedMediaTypes(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyWriterComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyReaderComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils$1:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils$1:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void resetCurrentBuilder(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void resetBaseAddress(java.net.URI)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient 'to'(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.UriBuilder getCurrentBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI getCurrentURI()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient query(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient matrix(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fragment(java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceQuery(java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient replaceQueryParam(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void resetBaseAddress(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient 'to'(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient 'to'(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void resetResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doInvoke(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getNode(java.lang.String,java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getNode(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.XPathProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object[] getNodes(java.lang.String,java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object[] getNodes(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.String[] getValues(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder path(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder path(java.lang.Class)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder path(java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder path(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void addNonEmptyPath(javax.ws.rs.core.UriBuilder,java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.net.URI,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder segment(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:java.lang.Class getPrimitiveFieldClass(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.ProviderInfo:void <init>(java.lang.Object,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setApplication(javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void initJaxbProviders()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void setProviders(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextSetterMethods(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void setResourceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextSetterMethods(java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:void clearCaches()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CacheMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void clearCaches()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.CXFBusImpl:void setProperties(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void clear()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearAllMaps()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void clearContexts()",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:void clearContexts()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setPathAndMatrix(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void clearPathAndMatrix()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void reset()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.client.LocalClientState:void reset()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void clearContexts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:void clearContexts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.DestinationRegistryImpl:void addDestination(org.apache.cxf.transport.http.AbstractHTTPDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void activate()"
        ]
    },
    "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void updated(java.lang.String,java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void serveStaticContent(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setExtensions(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInterceptors(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInvoker(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getClassNameAndProperties(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String normalizePackageNamePart(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void splitWord(java.util.List,int)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()",
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBContext createRIContext(java.lang.Class[],java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$BridgeWrapper createBridge(java.util.Set,javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompiler()",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompilerWithDefaultAllocator(java.util.Set)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void scanPackages(java.util.Set)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException,java.util.Set)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.xml.namespace.QName getJaxbQName(org.apache.cxf.common.jaxb.JAXBContextProxy,java.lang.Class,java.util.Map)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:javax.xml.bind.JAXBContext createJaxbContext(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.String getPackageNamespace(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void addDestination(org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processTypes(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.ws.addressing.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void addParameter(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:void set(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void doSetParameters(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:void setTransformerParameter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void setSchemaLocation(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void setContentType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void initializeMap()"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.configuration.security.AuthorizationPolicy getAuthorizationPolicyFromMessage(java.lang.String,java.security.Principal)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getBasePath(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.ProxyFactory:org.apache.cxf.transports.http.configuration.HTTPClientPolicy createSystemProxyConfiguration()",
            "org.apache.cxf.transport.http.ProxyFactory:java.net.Proxy createProxy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,java.net.URL)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,org.ietf.jgss.GSSContext)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:javax.security.auth.callback.CallbackHandler getUsernamePasswordHandler(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.List parseListSequence(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.Map parseMapSequence(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void handleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletController:void init()",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:boolean checkObjectFactoryNamespaces(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.StringUtils:boolean isFileAbsolute(java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:boolean isEmpty(java.util.List)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getFound(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstFound(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.Compiler:void setClassPath(java.lang.String)",
            "org.apache.cxf.common.util.Compiler:void addArgs(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.logging.JDKBugHacks:boolean skipHack(java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,javax.mail.internet.InternetHeaders)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createMtomAttachmentFromDH(boolean,javax.activation.DataHandler,java.lang.String,int)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void printPhase(int,java.lang.StringBuilder)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.DOMUtils:java.lang.String getAttribute(org.w3c.dom.Element,javax.xml.namespace.QName)",
            "org.apache.cxf.helpers.DOMUtils:java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getRest(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getOperationName(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setGlobalRoles(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.endpoint.ManagedEndpoint:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.MethodNameSoapActionServiceConfiguration:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document,boolean)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapToProperty(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapToProperty(org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.bus.blueprint.BusDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.bus.osgi.WorkQueueSingleConfig:void updated(java.util.Dictionary)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String getName()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getHeaderValues(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.util.List parseAcceptEnc(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CookieHeaderProvider:javax.ws.rs.core.Cookie fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.NewCookieHeaderProvider:javax.ws.rs.core.NewCookie fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String[] getTokens(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:void addFields(java.util.List,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean addSchemaDocument(org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List,org.w3c.dom.Document,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document)",
            "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.multipart.ContentDisposition:java.util.Map getParameters()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getPathSegments(java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getParameterSplitChar(javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setSchemasLocations(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInterceptors(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getServiceClasses(javax.servlet.ServletConfig,boolean,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.List getProviders(javax.servlet.ServletConfig,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map parseMapListSequence(java.lang.String)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.security.auth.Subject loginAndGetSubject()",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()",
            "org.apache.cxf.jaxrs.client.LocalClientState:void <init>(java.net.URI)",
            "org.apache.cxf.jaxrs.provider.DataSourceProvider:void setContentTypeIfNeeded(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeEndElement()",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor:java.lang.String getCallbackValue(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:void tryClass(java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class getASMClass()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ClassWriter createClassWriter()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ASMType getType(java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$Label createLabel()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class access$000()",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level fromL4J(org.apache.log4j.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void access$100(java.util.logging.LogRecord,java.lang.String)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.Map access$200()",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,javax.mail.internet.InternetHeaders)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createMtomAttachmentFromDH(boolean,javax.activation.DataHandler,java.lang.String,int)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String findUniquePrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void setPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageImpl:void setAttachments(java.util.Collection)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String setEncoding(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttachmentPartHeader(org.apache.cxf.message.Attachment)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus createThreadBus()",
            "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processTypes(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processParameterizedTypes()"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.ws.addressing.NSManager:void resolveConstants(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.NSManager:void <init>()"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractTransportFactory:void register()"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractTransportFactory:void register()"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBaseBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkBindingFactory(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.internal.QueryHandlerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBundleContext(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusExtensionPostProcessor:void registerExt(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void loadOSGIContext(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.CXFBusImpl:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleTypeQuery(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response checkMetadataRequest(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void addParameter(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison parseComparison(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.util.Map access$100()",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toFiqlPrimitiveCondition(org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchBean:void set(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <init>(org.apache.cxf.jaxrs.client.ClientState,java.lang.ClassLoader,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void doSetParameters(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void setParameter(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void setParameters(java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:void setTransformerParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setTransformParameters(org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void setSchemaLocation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void setContentType(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MetadataMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ProviderInfo:int hashCode()",
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:int hashCode()"
        ]
    },
    "org.apache.cxf.jaxrs.model.ProviderInfo:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ProviderInfo:int hashCode()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchBean:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ProviderInfo:int hashCode()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient reset()"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreContentJettisonWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.transform.TransformOutInterceptor:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.transform.TransformInInterceptor:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.transport.http.CXFAuthenticator:java.net.PasswordAuthentication getPasswordAuthentication()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.spring.HttpDestinationBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String setEncoding(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void addDestination(org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.Map getJaxbAnnoMap(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processTypes(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.ws.addressing.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void addParameter(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleSchemaRefs(java.util.List,java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:void set(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void doSetParameters(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:void setTransformerParameter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void setSchemaLocation(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void setContentType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void <init>(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.ServletDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit access$000(org.apache.cxf.interceptor.MessageSenderInterceptor,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void addDocsAndCloseElement(java.lang.StringBuilder,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.io.InputStream getResourceStream(java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingWadl(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingSchema(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler$1:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void waitForResponseCode(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void checkClientException(org.apache.cxf.message.Message,java.lang.Exception)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void checkClientException(org.apache.cxf.message.Message,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] preProcessResult(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus createThreadBus()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getPath(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath(boolean)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getPath()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments(boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType fromValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.transports.http.configuration.ProxyServerType:org.apache.cxf.transports.http.configuration.ProxyServerType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.CertConstraints$Combinator:org.apache.cxf.transport.https.CertConstraints$Combinator[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraints$1:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType:org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getFilters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.classloader.FireWallClassLoader:java.lang.String[] getNegativeFilters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.WSDLConstants$WSDLVersion:org.apache.cxf.common.WSDLConstants$WSDLVersion[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.security.TokenType:org.apache.cxf.common.security.TokenType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.headers.Header$Direction:org.apache.cxf.headers.Header$Direction[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.FaultMode:org.apache.cxf.message.FaultMode[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.InterceptorChain$State:org.apache.cxf.interceptor.InterceptorChain$State[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.annotations.FactoryType$Type:org.apache.cxf.annotations.FactoryType$Type[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener$1:void <clinit>()"
        ]
    },
    "org.apache.cxf.annotations.Policy$Placement:org.apache.cxf.annotations.Policy$Placement[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.annotations.SchemaValidation$SchemaValidationType:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.annotations.WSDLDocumentation$Placement:org.apache.cxf.annotations.WSDLDocumentation$Placement[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener$1:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint$State:org.apache.cxf.endpoint.ManagedEndpoint$State[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.security.claims.authorization.ClaimMode:org.apache.cxf.security.claims.authorization.ClaimMode[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.MessageInfo$Type:org.apache.cxf.service.model.MessageInfo$Type[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.FactoryBeanListener$Event:org.apache.cxf.service.factory.FactoryBeanListener$Event[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener$1:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.spring.BusWiringType:org.apache.cxf.configuration.spring.BusWiringType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.security.CombinatorType:org.apache.cxf.configuration.security.CombinatorType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses:org.apache.cxf.ws.addressing.WSAddressingFeature$AddressingResponses[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType fromValue(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.BusState:org.apache.cxf.bus.BusState[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.ParameterType:org.apache.cxf.jaxrs.model.ParameterType[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.ConditionType:org.apache.cxf.jaxrs.ext.search.ConditionType[] values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor$1:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition$1:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor$1:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils$1:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.collections.CollectionCheck:org.apache.cxf.jaxrs.ext.search.collections.CollectionCheck[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:void <init>(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:void <init>(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void tryInjectMessageContext(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setMessageContext(org.apache.cxf.jaxrs.ext.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object extractFieldValue(java.lang.reflect.Field,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List getAttachments(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client accept(javax.ws.rs.core.MediaType[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient accept(javax.ws.rs.core.MediaType[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client accept(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient accept(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client cookie(javax.ws.rs.core.Cookie)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient cookie(javax.ws.rs.core.Cookie)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client acceptLanguage(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient acceptLanguage(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client acceptEncoding(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient acceptEncoding(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableMediaTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.List getAcceptableMediaTypes()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:boolean isRedirectPossible(javax.ws.rs.core.HttpHeaders)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Locale getLanguage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Locale getLanguage()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:javax.ws.rs.core.MediaType getMediaType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MediaType getMediaType()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.io.InputStream decodeIfNeeded(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client type(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient type(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient type(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response form(java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response form(org.apache.cxf.jaxrs.ext.form.Form)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client type(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient modified(java.util.Date,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client modified(java.util.Date,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient language(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client language(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient match(javax.ws.rs.core.EntityTag,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client match(javax.ws.rs.core.EntityTag,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient encoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client encoding(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$JaxbContextQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.String getConvertedExpression(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:java.lang.Object getConvertedExpression(java.lang.String,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.UriBuilder getRequestUriBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getRequestUriBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replacePath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient resetQuery()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactory:java.lang.Object create(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getContext(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.core.Request getRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.Request getRequest()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.core.HttpHeaders getHttpHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.HttpHeaders getHttpHeaders()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void checkContentLength()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.ext.Providers getProviders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.ext.Providers getProviders()",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.core.SecurityContext getSecurityContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.SecurityContext getSecurityContext()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.ws.rs.core.UriInfo getUriInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.UriInfo getUriInfo()",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:java.lang.String getCompleteServicePrincipalName()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.servlet.http.HttpServletRequest getHttpServletRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.http.HttpServletRequest getHttpServletRequest()",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.servlet.http.HttpServletResponse getHttpServletResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.http.HttpServletResponse getHttpServletResponse()",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.servlet.ServletConfig getServletConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.ServletConfig getServletConfig()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.ServletContext getServletContext()",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getResolver(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:java.lang.Object getResolver(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getJAXBContext(java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$ExceptionMapperComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getAbsolutePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getAbsolutePath()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getRequestUri()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.net.URI getRequestUri()"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean addSchemaDocument(org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List,org.w3c.dom.Document,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean addSchemaDocument(org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List,org.w3c.dom.Document,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamReader:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String toString()",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void doLog(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void log(java.util.logging.Logger,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void logConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectAuthorizationLoop(java.lang.String,org.apache.cxf.message.Message,java.net.URL,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectRedirectLoop(java.lang.String,java.net.URL,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.TrustDecisionUtil:void makeTrustDecision(org.apache.cxf.transport.http.MessageTrustDecider,org.apache.cxf.message.Message,java.net.HttpURLConnection,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String setEncoding(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:javax.servlet.http.HttpServletResponse getHttpResponseFromMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()",
            "org.apache.cxf.common.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void logRedirection(java.lang.String,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkServiceClassAnnotations(java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.bus.spring.OldSpringSupport:java.lang.String logWarning(java.lang.String)",
            "org.apache.cxf.bus.spring.OldSpringSupport:java.lang.Object getObject()",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.eclipse.jetty.server.Connector)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(java.lang.String,int,java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.TrustDecisionUtil:void makeTrustDecision(org.apache.cxf.transport.http.MessageTrustDecider,org.apache.cxf.message.Message,java.net.HttpURLConnection,java.lang.String)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,org.ietf.jgss.GSSContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getPropertyOrNull(java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void setOutputLocation(java.lang.String)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void destroy()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.reflect.Method findSetExecutionContextMethod(java.lang.ClassLoader)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void tryOSGI(java.util.Collection,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getOSGiServices(java.lang.Class)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,java.lang.String,javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaObject)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void reportSecurityException(java.lang.String)",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void reportServerError(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object evaluateFactoryMethod(java.lang.String,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void reportMessageHandlerProblem(java.lang.String,java.lang.Class,javax.ws.rs.core.MediaType,java.lang.Throwable,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:javax.servlet.ServletContext getServletContext()",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:javax.servlet.RequestDispatcher getRequestDispatcher(javax.servlet.ServletContext,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(org.apache.cxf.configuration.jsse.TLSClientParameters,java.net.HttpURLConnection)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void respondUsingQueryHandler(org.apache.cxf.transports.http.QueryHandler,javax.servlet.http.HttpServletResponse,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:java.lang.Object getJaxbObject(org.w3c.dom.Element,java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()",
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String,java.lang.String)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.net.URL getResourceURL(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInterceptors(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInvoker(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void checkContentLength()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.io.InputStream decodeIfNeeded(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void reportEmptyContentLength()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.StringBuilder handleExceptionStart(java.lang.Exception)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void tryInjectMessageContext(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void reportError(java.lang.String,java.lang.Exception,int)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:org.osgi.service.blueprint.reflect.ComponentMetadata decorate(org.w3c.dom.Node,org.osgi.service.blueprint.reflect.ComponentMetadata,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.eclipse.jetty.util.component.Container$Listener getMBeanContainer()",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeansFromOsgiService(java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object checkResultObject(java.lang.Object,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void logRequestParametersIfNeeded(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidResourceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getCompleteServicePrincipalName(java.net.URL)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(java.lang.String,int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void handleAppendMode(javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.staxutils.transform.ElementProperty)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class[])",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.endpoint.ServerImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedResources()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void logNoMatchMessage(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.Parameter,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.util.Set initContextClasses()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:javax.xml.bind.JAXBContext createJaxbContext(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.security.auth.Subject loginAndGetSubject()",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:java.lang.Object createProvider(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:org.apache.abdera.writer.Writer createWriter(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readPrimitiveValue(org.w3c.dom.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getNode(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object[] getNodes(java.lang.String,java.util.Map,java.lang.Class)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void destroy()"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaSerializer:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addDocumentation(javax.wsdl.WSDLElement,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:org.w3c.dom.Document createDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.UnformattedServiceListWriter:void writeServiceList(java.io.PrintWriter,java.lang.String,org.apache.cxf.transport.AbstractDestination[],org.apache.cxf.transport.AbstractDestination[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void <init>(java.io.PipedInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:void <init>(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <init>()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.Property and(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:org.apache.cxf.jaxrs.ext.search.client.Property or(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator:int compare(javax.ws.rs.core.Variant,javax.ws.rs.core.Variant)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyWriterComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyWriterComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyReaderComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyReaderComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils$1:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fragment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getNode(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object[] getNodes(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.String[] getValues(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.net.URI[] getLinks(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.String[] getValues(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder path(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder path(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder path(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void addNonEmptyPath(javax.ws.rs.core.UriBuilder,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,boolean,boolean,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void clearPathAndMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replacePath(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response build()"
        ]
    },
    "org.apache.cxf.jaxrs.client.LocalClientState:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client reset()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void activate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setExtensions(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInterceptors(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void setInvoker(org.apache.cxf.jaxrs.JAXRSServerFactoryBean,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getClassNameAndProperties(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException,java.util.Set)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String normalizePackageNamePart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void splitWord(java.util.List,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBContext createRIContext(java.lang.Class[],java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$BridgeWrapper createBridge(java.util.Set,javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompiler()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBContext createRIContext(java.lang.Class[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$BridgeWrapper createBridge(java.util.Set,javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompiler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompilerWithDefaultAllocator(java.util.Set)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompilerWithDefaultAllocator(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.String getPackageNamespace(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getJaxbQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getQNameFromNamespaceAndName(java.lang.String,java.lang.String,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void initializeMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getBasePath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory)"
        ]
    },
    "org.apache.cxf.transport.http.ProxyFactory:org.apache.cxf.transports.http.configuration.HTTPClientPolicy createSystemProxyConfiguration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.ProxyFactory:void <init>()"
        ]
    },
    "org.apache.cxf.transport.http.ProxyFactory:java.net.Proxy createProxy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection createConnection(org.apache.cxf.message.Message,java.net.URL)"
        ]
    },
    "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,org.ietf.jgss.GSSContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,java.lang.String,org.ietf.jgss.Oid,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:javax.security.auth.callback.CallbackHandler getUsernamePasswordHandler(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,org.ietf.jgss.GSSContext)"
        ]
    },
    "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void init()"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void <init>(org.apache.cxf.transport.http.DestinationRegistry,javax.servlet.ServletConfig,javax.servlet.http.HttpServlet)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.blueprint.JettyServerEngineFactoryParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:boolean checkObjectFactoryNamespaces(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.String,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:javax.xml.bind.JAXBContext getContext()",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:boolean isFileAbsolute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.StringUtils:boolean isEmpty(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstFound(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.util.List getFound(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstFound(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstFound(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.Compiler:void setClassPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Compiler:void addArgs(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])",
            "org.apache.cxf.common.util.Compiler:boolean useJava6Compiler(java.lang.String[])"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.io.File[])",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)"
        ]
    },
    "org.apache.cxf.common.logging.JDKBugHacks:boolean skipHack(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.JDKBugHacks:void doHacks()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.http.TrustDecisionUtil:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http.Headers:void <clinit>()",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:void <clinit>()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()",
            "org.apache.cxf.transport.https.CertConstraintsInterceptor:void <clinit>()",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.util.SystemPropertyAction:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:void <clinit>()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()",
            "org.apache.cxf.common.logging.LogUtils:void setLoggerClass(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger createLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.StringBuilder)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void <clinit>()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.OldSpringSupport:void <clinit>()",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void <clinit>()",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void <clinit>()",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.extension.Extension:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.FormUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.HttpUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void <clinit>()",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:void <clinit>()",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:void <clinit>()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.client.AbstractClient:void <clinit>()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createMtomAttachmentFromDH(boolean,javax.activation.DataHandler,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentMarshaller:java.lang.String addMtomAttachment(javax.activation.DataHandler,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void printPhase(int,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:java.lang.String toString(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.helpers.DOMUtils:java.lang.String getAttribute(org.w3c.dom.Element,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.DOMUtils:java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.DOMUtils:java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.namespace.QName parseQName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.namespace.QName parseQName(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getRest(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getOperationName(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.MethodNameSoapActionServiceConfiguration:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean processBusAttribute(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapToProperty(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapToProperty(org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.String getParameterSplitChar(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.security.auth.Subject loginAndGetSubject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeCharacters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeSpaces()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeCharacters(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor:java.lang.String getCallbackValue(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter)",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:void tryClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class getASMClass()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class getASMClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ClassWriter createClassWriter()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class access$000()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ClassWriter createClassWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ASMType getType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$Label createLabel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level fromL4J(org.apache.log4j.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level getLevel()",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level access$000(org.apache.cxf.common.logging.Log4jLogger,org.apache.log4j.Level)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void access$100(java.util.logging.LogRecord,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.Map access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void setAttachments(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()",
            "org.apache.cxf.message.AbstractWrappedMessage:void setAttachments(java.util.Collection)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL setupURL(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectAuthorizationLoop(java.lang.String,org.apache.cxf.message.Message,java.net.URL,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectRedirectLoop(java.lang.String,java.net.URL,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void addDestination(org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$1:void cacheInput()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyKnownRequestParameters(javax.servlet.http.HttpServletRequest,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String setEncoding(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupContinuation(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:java.util.Map getSetProtocolHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.util.Map parseHeader()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier$DigestInfo:java.lang.String generateAuth(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.Map parseMapSequence(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void setupContinuation(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBContext createRIContext(java.lang.Class[],java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:java.util.Map findAttributeReaders(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:java.util.Map parseQueryString(java.lang.String)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.StringMapImpl:void put(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()",
            "org.apache.cxf.binding.xml.XMLBinding:org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:java.lang.String getEncoding(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void copyJaxwsProperties(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processTypes(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultName(java.lang.String,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultReason(java.lang.String,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storePartialResponseSent(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.WSAContextUtils:void storeUsingAddressing(boolean,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.WSAContextUtils:void storeTo(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleMethod(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void addParameter(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:void set(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void setResponseStatus(org.apache.cxf.message.Message,int)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getPathToMatch(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:void updatePath(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getServiceClasses(javax.servlet.ServletConfig,boolean,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map parseMapListSequence(java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setEmptyRequestProperty(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void persistParamsOnMessage(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void doSetParameters(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:void setTransformerParameter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void setSchemaLocation(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void setContentType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void setContextualProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void readBusProperties()",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearAllMaps()"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus createThreadBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void <init>(java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void addDestination(org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.util.Map parseHeader()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier$DigestInfo:java.lang.String generateAuth(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.Map parseMapSequence(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBContext createRIContext(java.lang.Class[],java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:java.util.Map findAttributeReaders(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:java.util.Map parseQueryString(java.lang.String)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processTypes(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.ws.addressing.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void addParameter(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:void set(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getServiceClasses(javax.servlet.ServletConfig,boolean,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map parseMapListSequence(java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void doSetParameters(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:void setTransformerParameter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void setSchemaLocation(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void setContentType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processParameterizedTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.JAXRSDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.NSManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.resource.ResourceManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBus:void setBundleContext(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.HeaderManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void <init>(java.util.Map,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void <init>(org.apache.cxf.configuration.spring.MapProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void <init>(java.util.Map,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void <init>(java.util.Map,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.spring.BusExtensionPostProcessor:void registerExt(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusExtensionPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void loadOSGIContext(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.util.Map access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:org.apache.cxf.jaxrs.ext.search.SearchCondition build()"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <init>(org.apache.cxf.jaxrs.client.ClientState,java.lang.ClassLoader,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <init>(java.net.URI,java.lang.ClassLoader,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void setParameter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void setParameters(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void doSetRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.multipart.Attachment:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ProviderInfo:int hashCode()"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client reset()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler$1:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDocs(java.lang.'annotation'.Annotation[],java.lang.StringBuilder,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath(boolean)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.transports.http.configuration.ConnectionType:org.apache.cxf.transports.http.configuration.ConnectionType fromValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transports.http.configuration.HTTPClientPolicy:org.apache.cxf.transports.http.configuration.ConnectionType getConnection()"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraints$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraints$DNConstraints:boolean matches(javax.security.auth.x500.X500Principal)",
            "org.apache.cxf.transport.https.CertConstraints$1:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener$1:void <clinit>()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setScope(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.endpoint.Server,java.lang.Class)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])"
        ]
    },
    "org.apache.cxf.ws.addressing.wsdl.AnonymousType:org.apache.cxf.ws.addressing.wsdl.AnonymousType fromValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor$1:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition$1:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean compare(java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:java.lang.String conditionTypeToLdapOperator(org.apache.cxf.jaxrs.ext.search.ConditionType)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor$1:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchUtils$1:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.lang.String conditionTypeToSqlOperator(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.SearchUtils$1:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient accept(javax.ws.rs.core.MediaType[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client accept(javax.ws.rs.core.MediaType[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient accept(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client accept(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient cookie(javax.ws.rs.core.Cookie)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client cookie(javax.ws.rs.core.Cookie)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient acceptLanguage(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client acceptLanguage(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient acceptEncoding(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client acceptEncoding(java.lang.String[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Locale getLanguage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:java.util.Locale getLanguage()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MediaType getMediaType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalHttpHeaders:javax.ws.rs.core.MediaType getMediaType()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient type(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client type(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client type(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client type(javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client modified(java.util.Date,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client language(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client match(javax.ws.rs.core.EntityTag,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client encoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getRequestUriBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:javax.ws.rs.core.UriBuilder getRequestUriBuilder()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.Request getRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.Request getRequest()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.HttpHeaders getHttpHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.HttpHeaders getHttpHeaders()",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void checkContentLength()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.ext.Providers getProviders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.ext.Providers getProviders()",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.SecurityContext getSecurityContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.SecurityContext getSecurityContext()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.UriInfo getUriInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.ws.rs.core.UriInfo getUriInfo()",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:java.lang.String getCompleteServicePrincipalName()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.String buildAbsoluteXMLResourceURI(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.http.HttpServletRequest getHttpServletRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.http.HttpServletRequest getHttpServletRequest()",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.http.HttpServletResponse getHttpServletResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.http.HttpServletResponse getHttpServletResponse()",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.ServletConfig getServletConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.ServletConfig getServletConfig()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalMessageContext:javax.servlet.ServletContext getServletContext()",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String toString()",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void doLog(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void log(java.util.logging.Logger,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void logConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void detectAuthorizationLoop(java.lang.String,org.apache.cxf.message.Message,java.net.URL,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void detectRedirectLoop(java.lang.String,java.net.URL,java.net.URL,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:javax.servlet.http.HttpServletResponse getHttpResponseFromMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void logRedirection(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkServiceClassAnnotations(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setServiceClass(java.lang.Class)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.OldSpringSupport:java.lang.String logWarning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.OldSpringSupport:void <init>(java.lang.String)",
            "org.apache.cxf.bus.spring.OldSpringSupport:void <init>(org.apache.cxf.Bus,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.eclipse.jetty.server.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.ProxyFactory:org.apache.cxf.transports.http.configuration.HTTPClientPolicy createSystemProxyConfiguration()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidate()",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultThreshold(int)"
        ]
    },
    "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getPropertyOrNull(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.ProxyFactory:org.apache.cxf.transports.http.configuration.HTTPClientPolicy createSystemProxyConfiguration()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:boolean shouldDestroyPort()",
            "org.apache.cxf.common.util.SystemUtils$1:java.lang.String run()",
            "org.apache.cxf.helpers.FileUtils:java.io.File getDefaultTempDir()",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void setOutputLocation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.reflect.Method findSetExecutionContextMethod(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void tryOSGI(java.util.Collection,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getOSGiServices(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void loadAdditionalFeatures()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.beans.factory.xml.NamespaceHandlerResolver tryFindNamespaceHandler(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void propertyChange(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,java.lang.String,javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaType getElementType(org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAnnotated getObjectAnnotated(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaParticle getObjectParticle(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getContentSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaChoice getChoice(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAll getAll(org.apache.ws.commons.schema.XmlSchemaComplexType)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void reportSecurityException(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object evaluateFactoryMethod(java.lang.String,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:int getBodyIndex(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void reportMessageHandlerProblem(java.lang.String,java.lang.Class,javax.ws.rs.core.MediaType,java.lang.Throwable,javax.ws.rs.core.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:javax.servlet.RequestDispatcher getRequestDispatcher(javax.servlet.ServletContext,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.configuration.security.AuthorizationPolicy getAuthorizationPolicyFromMessage(java.lang.String,java.security.Principal)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:byte[] getServiceTicket(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String urlDecode(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void reportEmptyContentLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.StringBuilder handleExceptionStart(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleJAXBException(javax.xml.bind.JAXBException,boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleXMLStreamException(javax.xml.stream.XMLStreamException,boolean)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:org.osgi.service.blueprint.reflect.ComponentMetadata decorate(org.w3c.dom.Node,org.osgi.service.blueprint.reflect.ComponentMetadata,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.commands.ForkedCommand:int execute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.commands.ForkedCommand:int execute()"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeansFromOsgiService(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object checkResultObject(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidResourceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getCompleteServicePrincipalName(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void handleAppendMode(javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.staxutils.transform.ElementProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void updateIterator()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void insertInterceptor(int,org.apache.cxf.phase.PhaseInterceptor,boolean)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.TunedDocumentLoader:boolean hasFastInfoSet()",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()",
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)",
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.util.Set initContextClasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:org.apache.abdera.writer.Writer createWriter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:void writeTo(org.apache.abdera.model.Element,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.Writer)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void <init>(java.io.OutputStream)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void <init>(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:boolean checkBufferingMode(org.apache.cxf.message.Message,javax.ws.rs.ext.MessageBodyWriter,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToWriter(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.stream.XMLStreamWriter,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyWriterComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyReaderComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.net.URI[] getLinks(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.String[] getValues(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,boolean,boolean,java.lang.String,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getJaxbQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getCollectionWrapperQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:javax.xml.namespace.QName getQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getQNameFromNamespaceAndName(java.lang.String,java.lang.String,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getJaxbQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void initializeMap()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.ProxyFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void <init>(org.apache.cxf.transport.http.DestinationRegistry,javax.servlet.ServletConfig,javax.servlet.http.HttpServlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:org.apache.cxf.transport.servlet.ServletController createServletController(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean useJava6Compiler(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.JDKBugHacks:void doHacks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.ExtendedURIResolver:void <init>()",
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)",
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:java.util.logging.Logger access$000()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http.HTTPConduit:void logConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectAuthorizationLoop(java.lang.String,org.apache.cxf.message.Message,java.net.URL,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectRedirectLoop(java.lang.String,java.net.URL,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger access$000()",
            "org.apache.cxf.transport.http.HTTPConduit:boolean access$500()",
            "org.apache.cxf.transport.http.HTTPConduit:boolean access$502(boolean)",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)"
        ]
    },
    "org.apache.cxf.transport.http.TrustDecisionUtil:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.TrustDecisionUtil:void makeTrustDecision(org.apache.cxf.transport.http.MessageTrustDecider,org.apache.cxf.message.Message,java.net.HttpURLConnection,java.lang.String)",
            "org.apache.cxf.transport.http.TrustDecisionUtil:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.transport.http.DestinationRegistry)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:java.util.Set getUriPrefixes()",
            "org.apache.cxf.transport.http.HTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String setEncoding(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:javax.servlet.http.HttpServletResponse getHttpResponseFromMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)",
            "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.Headers:void <init>(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void logProtocolHeaders(java.util.logging.Level)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.Headers:void removeContentType()",
            "org.apache.cxf.transport.http.Headers:void <clinit>()",
            "org.apache.cxf.transport.http.Cookies:void writeToMessageHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:byte[] getToken(org.apache.cxf.configuration.security.AuthorizationPolicy,org.ietf.jgss.GSSContext)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getCompleteServicePrincipalName(java.net.URL)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(org.apache.cxf.configuration.jsse.TLSClientParameters,java.net.HttpURLConnection)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void addLogHandler(java.util.logging.Handler)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.https.CertConstraintsInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.https.CertConstraintsInterceptor:void <clinit>()",
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket()",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(org.apache.cxf.configuration.jsse.TLSClientParameters,java.net.HttpURLConnection)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void addLogHandler(java.util.logging.Handler)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.servlet.ServletController:void respondUsingQueryHandler(org.apache.cxf.transports.http.QueryHandler,javax.servlet.http.HttpServletResponse,org.apache.cxf.service.model.EndpointInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:org.apache.cxf.transport.servlet.ServletController createServletController(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)",
            "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https_jetty.JettySslConnectorFactory:org.eclipse.jetty.server.AbstractConnector createConnector(java.lang.String,int)",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLContext createSSLContext()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:org.osgi.service.blueprint.reflect.ComponentMetadata decorate(org.w3c.dom.Node,org.osgi.service.blueprint.reflect.ComponentMetadata,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:java.lang.Object getJaxbObject(org.w3c.dom.Element,java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setupThreadPool()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.eclipse.jetty.server.Connector)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1:org.eclipse.jetty.server.AbstractConnector createConnector(java.lang.String,int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine getOrCreate(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine getOrCreate(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(java.lang.String,int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.eclipse.jetty.util.component.Container$Listener getMBeanContainer()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyDestinationFactory:org.apache.cxf.transport.http.AbstractHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.configuration.security.AuthorizationPolicy getAuthorizationPolicyFromMessage(java.lang.String,java.security.Principal)",
            "org.apache.cxf.transport.http.auth.DefaultBasicAuthSupplier:java.lang.String getBasicAuthHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])",
            "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)",
            "org.apache.cxf.common.util.Base64Utility:int processEncodeme(char[],byte[],int)",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:byte[] getServiceTicket(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.SystemPropertyAction:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.ProxyFactory:org.apache.cxf.transports.http.configuration.HTTPClientPolicy createSystemProxyConfiguration()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:boolean shouldDestroyPort()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()",
            "org.apache.cxf.common.util.SystemUtils$1:java.lang.String run()",
            "org.apache.cxf.common.util.Compiler:void addArgs(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])",
            "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getPropertyOrNull(java.lang.String)",
            "org.apache.cxf.common.util.SystemPropertyAction:void <clinit>()",
            "org.apache.cxf.common.commands.JavaHelper:java.lang.String getJavaCommand()",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.helpers.FileUtils:java.io.File getDefaultTempDir()",
            "org.apache.cxf.helpers.FileUtils:boolean isWindows()",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidate()",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultThreshold(int)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String)",
            "org.apache.cxf.common.util.UrlUtils:java.lang.String pathDecode(java.lang.String)",
            "org.apache.cxf.common.util.UrlUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String urlDecode(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String urlDecode(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String pathDecode(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <init>(java.lang.Object)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager,java.util.List)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:boolean processable(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field findFieldForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getResourceName(javax.'annotation'.Resource,java.lang.reflect.Method)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.Class getResourceType(javax.'annotation'.Resource,java.lang.reflect.Field)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getFieldNameForResource(javax.'annotation'.Resource,java.lang.reflect.Field)",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:boolean injectable(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaElement findElementByRefName(org.apache.cxf.common.xmlschema.SchemaCollection,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getContentSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaType getElementType(org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAnnotated getObjectAnnotated(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaParticle getObjectParticle(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaChoice getChoice(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAll getAll(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementQualified(org.apache.ws.commons.schema.XmlSchemaElement,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,java.lang.String,javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaObject)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.SchemaInfo,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void setLoggerClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.http.TrustDecisionUtil:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http.Headers:void <clinit>()",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:void <clinit>()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()",
            "org.apache.cxf.transport.https.CertConstraintsInterceptor:void <clinit>()",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.util.SystemPropertyAction:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:void <clinit>()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void <clinit>()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.OldSpringSupport:void <clinit>()",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void <clinit>()",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void <clinit>()",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.extension.Extension:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.FormUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.HttpUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void <clinit>()",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:void <clinit>()",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:void <clinit>()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.client.AbstractClient:void <clinit>()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger createLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.StringBuilder)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.StringBuilder)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.commands.JavaHelper:java.lang.String getJavaCommand()",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void handleAppendMode(javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.staxutils.transform.ElementProperty)",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createNewWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String toString()",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void setInnerElementLevelThreshold(int)",
            "org.apache.cxf.staxutils.StaxUtils:void setInnerElementCountThreshold(int)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:void returnXMLInputFactory(javax.xml.stream.XMLInputFactory)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLOutputFactory getXMLOutputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:void returnXMLOutputFactory(javax.xml.stream.XMLOutputFactory)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element)",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.staxutils.W3CDOMStreamReader:java.lang.String toString()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class,javax.xml.namespace.QName,org.w3c.dom.Element,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.bus.extension.XmlExtensionFragmentParser:java.util.List getExtensions(java.io.InputStream)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.lang.String transformSchema(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:void setBuffering()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Class,java.lang.reflect.Type,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToWriter(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.stream.XMLStreamWriter,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:javax.xml.stream.XMLStreamReader getReader(java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object doUnmarshal(javax.xml.bind.Unmarshaller,java.lang.Class,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void copyReaderToWriter(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:javax.xml.stream.XMLStreamReader createStreamReader(org.apache.cxf.aegis.type.AegisType,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:javax.xml.stream.XMLStreamWriter createStreamWriter(javax.xml.namespace.QName,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisJSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.logging.Logger access$000()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()",
            "org.apache.cxf.transport.http.CXFAuthenticator:java.net.PasswordAuthentication getPasswordAuthentication()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.message.Message getCurrentMessage()",
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.StringBuilder)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:org.apache.cxf.message.Message getCurrentMessage()",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void logRequestParametersIfNeeded(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void persistParamsOnMessage(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object getStreamHandlerFromCurrentMessage(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void copyInputToOutput(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:boolean isRangeSupported()",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getRequestPath()"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPWSDLExtensionLoader:void createExtensor(org.apache.cxf.wsdl.WSDLManager,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void createExtensor(org.apache.cxf.wsdl.WSDLManager,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBContext createContextForEPR()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBContext getJAXBContextForEPR()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.util.logging.Logger access$000()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer(int)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.Writer)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.Writer,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Node,javax.xml.namespace.QName)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Document,javax.xml.namespace.QName)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Text createTextNode(org.w3c.dom.Node,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName convertStringToQName(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addDocumentation(javax.wsdl.WSDLElement,java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:org.w3c.dom.Document createDocument()",
            "org.apache.cxf.wsdl11.SchemaSerializer:void writeXml(org.w3c.dom.Node,java.io.PrintWriter)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$XMLNameQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readPrimitiveValue(org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.xml.namespace.QName convertStringToQName(java.lang.String)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()"
        ]
    },
    "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)"
        ]
    },
    "org.apache.cxf.BusFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()",
            "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus createThreadBus()",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void readBusProperties()",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <init>(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDocs(java.lang.'annotation'.Annotation[],java.lang.StringBuilder,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void clearAllMaps()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String)",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance()",
            "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:org.apache.cxf.Bus getBus()"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:java.util.logging.Logger getLogger()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:java.util.logging.Logger getLogger()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:java.util.List getSupportedTypes()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.AttachmentInputInterceptor:void <init>()",
            "org.apache.cxf.jaxrs.interceptor.AttachmentInputInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void validatePart(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeFaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.StringTokenizer,java.lang.String)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void reportSecurityException(java.lang.String)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:javax.security.auth.callback.CallbackHandler getUsernamePasswordHandler(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getCallbackHandler(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.security.auth.callback.CallbackHandler getCallbackHandler(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.DeferredConduitSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.UpfrontConduitSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void setConduitSelector(org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class[])",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void <clinit>()",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.endpoint.ServerImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.reflect.Method matchMethod(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object checkResultObject(java.lang.Object,java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBaseBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.InterfaceInfo createInterface(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateSchemas(org.apache.cxf.common.xmlschema.XmlSchemaValidationManager,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getClass(java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkServiceClassAnnotations(java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.logging.Logger access$000()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateSchemas(org.apache.cxf.common.xmlschema.XmlSchemaValidationManager,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getClass(java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkServiceClassAnnotations(java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.logging.Logger access$000()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void setFactoriesAreAbstract(boolean)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)",
            "org.apache.cxf.bus.spring.NamespaceHandler:void init()",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void applyTlsClientParameters(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http_jetty.osgi.HTTPJettyTransportActivator:org.apache.cxf.configuration.jsse.TLSServerParameters createTlsServerParameters(java.util.Dictionary)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicies(java.lang.Object,boolean,java.lang.String[],java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata createValue(org.apache.aries.blueprint.ParserContext,javax.xml.namespace.QName)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void setFirstChildAsProperty(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapToProperty(org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:org.apache.aries.blueprint.mutable.MutableBeanMetadata getBus(org.apache.aries.blueprint.ParserContext,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.RefMetadata getBusRef(org.apache.aries.blueprint.ParserContext,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.ReferenceParametersType convert(org.apache.cxf.ws.addressing.v200408.ReferenceParametersType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAttributedURI(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.RelatesToType getRelatesTo(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:void setJAXBContext(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getNoneEndpointReference()",
            "org.apache.cxf.ws.addressing.ContextUtils:void applyReferenceParam(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean,boolean,java.util.logging.Level)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean isWrappableSequence(org.apache.ws.commons.schema.XmlSchemaComplexType,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactoryImpl:org.apache.cxf.service.Service create(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.xml.sax.EntityResolver getResolver()",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.reflect.Method findSetExecutionContextMethod(java.lang.ClassLoader)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:void <init>(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.beans.factory.xml.NamespaceHandlerResolver tryFindNamespaceHandler(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void tryOSGI(java.util.Collection,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getOSGiServices(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createAppContext(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.OldSpringSupport:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.OldSpringSupport:void <init>(java.lang.String)",
            "org.apache.cxf.bus.spring.OldSpringSupport:void <init>(org.apache.cxf.Bus,java.lang.Class,java.lang.String)",
            "org.apache.cxf.bus.spring.OldSpringSupport:java.lang.String logWarning(java.lang.String)",
            "org.apache.cxf.bus.spring.OldSpringSupport:java.lang.Object getObject()",
            "org.apache.cxf.bus.spring.OldSpringSupport:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void setEntityResolvers(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void <clinit>()",
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeansFromOsgiService(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void <clinit>()",
            "org.apache.cxf.bus.osgi.CXFActivator:void <init>()"
        ]
    },
    "org.apache.cxf.bus.extension.TextExtensionFragmentParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:org.apache.cxf.bus.extension.Extension getExtensionFromTextLine(java.lang.String)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:org.apache.cxf.bus.extension.Extension createOsgiBusListenerExtension(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:org.apache.cxf.bus.extension.Extension getExtensionFromTextLine(java.lang.String)",
            "org.apache.cxf.bus.extension.XmlExtensionFragmentParser:java.util.List deserialiseExtensions(org.w3c.dom.Document)",
            "org.apache.cxf.bus.extension.Extension:org.apache.cxf.bus.extension.Extension cloneNoObject()",
            "org.apache.cxf.bus.extension.Extension:java.lang.Class tryClass(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.Extension:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedResources()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.UriInfo createUriInfo(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object checkResultObject(java.lang.Object,java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void <clinit>()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()"
        ]
    },
    "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$JaxbContextQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void <init>()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:org.apache.cxf.common.xmlschema.SchemaCollection getSchemaCollection(org.apache.cxf.jaxrs.model.ResourceTypes,javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void setExternalLinks(java.util.List)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.logging.Logger access$100()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void <clinit>()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$XMLNameQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:void <init>(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextProvider:org.apache.cxf.jaxrs.ext.search.SearchContext createContext(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseErrorMessage(java.io.OutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:void createMessagePartInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class,javax.xml.namespace.QName,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider:void <init>(java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:java.lang.Object createInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void checkResources(boolean)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void injectContexts()",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormParameter(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClasses(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object[] getNodes(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readPrimitiveValue(org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object parseType(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String,org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.collections.CollectionCheck getCollectionCheck(java.lang.String,boolean,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchCondition getCondition(java.lang.String,java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.Object getPrimitiveValue(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.reflect.Type getSuperType(java.lang.Class,java.lang.reflect.TypeVariable)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Class getActualType(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Class getActualType(java.lang.reflect.Type,int)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectThroughMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object extractFromMethod(java.lang.Object,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object instantiateFromParameterHandler(java.lang.String,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void reportServerError(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object evaluateFactoryMethod(java.lang.String,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoMap(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:boolean isSupportedMap(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeCollectionsOrArrays(java.lang.Object,java.lang.Object,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoCollectionOrArray(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object createParameterObject(java.util.List,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy createThreadLocalProxy(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxiesAndApplication(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object,javax.ws.rs.core.Application)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextProxies(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextField(org.apache.cxf.jaxrs.model.AbstractResourceInfo,java.lang.reflect.Field,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:javax.ws.rs.core.MultivaluedMap extractValuesFromBean(java.lang.Object,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.Map getParametersFromBeanClass(java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void invokeLifeCycleMethod(java.lang.Object,java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Class getTypeFromAdapter(javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Object useAdapter(java.lang.Object,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,boolean,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processHeaderParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processCookieParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromUriParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readQueryString(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils$1:java.lang.Object run()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.InjectionUtils$2:java.lang.Object run()",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap setRequestHeaders(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Class getActualType(java.lang.reflect.Type,int)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:boolean isSupported(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean objectFactoryForType(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void handleMapper(java.util.List,org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,org.apache.cxf.message.Message,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextValues(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void injectContextProxies(java.util.List[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:int compareClasses(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Class,java.lang.reflect.Type,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void tryInjectMessageContext(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedFromCollection(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void setSchemaLocations(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.PathSegmentImpl:javax.ws.rs.core.MultivaluedMap getMatrixParameters()",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setUriParts(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:void setPathAndMatrix(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceMatrix(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder replaceQuery(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableMediaTypes()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Variant selectVariant(java.util.List)",
            "org.apache.cxf.jaxrs.impl.RequestImpl$VariantComparator:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getPathSegments(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getQueryParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl$1:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:java.util.List getServiceInfos()",
            "org.apache.cxf.jaxrs.JAXRSServiceImpl:void createMessagePartInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class,javax.xml.namespace.QName,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getProduceMime()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getConsumeMime()",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.OperationResourceInfoComparator:int compare(org.apache.cxf.jaxrs.model.OperationResourceInfo,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContext(java.lang.reflect.Type,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:java.lang.String getSearchExpression()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void handleWriteException(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Throwable,java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:javax.ws.rs.core.MediaType checkFinalContentType(javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextMethods(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void injectContextFields(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getPathSegments(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProviderConsumeTypes(javax.ws.rs.ext.MessageBodyReader)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProviderProduceTypes(javax.ws.rs.ext.MessageBodyWriter)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void logNoMatchMessage(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchHttpMethod(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getConsumeTypes(javax.ws.rs.Consumes)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProduceTypes(javax.ws.rs.Produces)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareSortedMediaTypes(java.util.List,java.util.List)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:int compareMediaTypesQualityFactors(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processParameter(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.Parameter,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createHttpParameterValue(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processMatrixParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getMatrixParams(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createResourceValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.ws.rs.core.MultivaluedMap getStructuredParams(java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchConsumeTypes(javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchProduceTypes(javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchMimeTypes(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List parseMediaTypes(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List sortMediaTypes(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils$1:int compare(javax.ws.rs.core.MediaType,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:boolean isRedirectPossible(javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getCollectionWrapperQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyWriterComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyReaderComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)",
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.namespace.QName getQName(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.FormUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.form.Form:org.apache.cxf.jaxrs.ext.form.Form set(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.form.Form:java.lang.String toString()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void logRequestParametersIfNeeded(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext,boolean)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map getChildAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.Map getAttachmentsMap(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAttachments(org.apache.cxf.jaxrs.ext.MessageContext,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:org.apache.cxf.jaxrs.ext.multipart.Attachment getMultipart(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:java.util.List getAllMultiparts(org.apache.cxf.jaxrs.ext.multipart.Multipart,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext,boolean)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkOneway()",
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkEncoded()",
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkDefaultParameterValue()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void setParamField(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void setParamMethods(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getProduceMime()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getConsumeMime()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:javax.ws.rs.Path getPath()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isDocAvailable(java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormRequest(org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormParameter(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$XMLNameQNameResolver:javax.xml.namespace.QName resolve(java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Map)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXBUtils:javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter getAdapter(java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.util.Set initContextClasses()",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isContextClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isParamAnnotationClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isValidParamAnnotationClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isValidParamAnnotations(java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isMethodAnnotation(java.lang.'annotation'.Annotation)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.reflect.Method getAnnotatedMethod(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.reflect.Method doGetAnnotatedMethod(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.String getDefaultParameterValue(java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Constructor findResourceConstructor(java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.Parameter getParameter(int,java.lang.'annotation'.Annotation[],java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:org.apache.cxf.jaxrs.ext.multipart.Multipart getMultipart(org.apache.cxf.jaxrs.model.OperationResourceInfo,int)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getContentId(java.lang.'annotation'.Annotation[],int)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getRootMediaType(java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:boolean keepEncoded(java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addProcessingInstructions(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addSchemaLocation(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:java.lang.Object createEndpoint(javax.ws.rs.core.Application,java.lang.Class)",
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void init()",
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider:void <init>(java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:void <init>(java.lang.Class)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:java.lang.Object createInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRef(java.lang.String)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setModelRefWithServiceClass(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void init()",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:java.lang.Object getInstance(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:org.apache.cxf.jaxrs.model.ClassResourceInfo getSubResource(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.Map getClassParameters(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingWadl(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response getExistingSchema(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo,java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleDocs(java.lang.'annotation'.Annotation[],java.lang.StringBuilder,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo createResourceInfo(java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:javax.xml.validation.Schema createSchema(java.util.List,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler$1:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Method findPostConstructMethod(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Method findPreDestroyMethod(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getParameters(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean checkMethodDispatcher(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.io.InputStream getResourceStream(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.net.URL getResourceURL(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.io.InputStream getClasspathResourceStream(java.lang.String,java.lang.Class,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.net.URL getClasspathResourceURL(java.lang.String,java.lang.Class,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.io.InputStream)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getResourcesFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ResourceTypes getAllRequestResponseTypes(java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.UserResource getResourceFromElement(org.w3c.dom.Element)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidResourceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:boolean isValidApplicationClass(java.lang.Class,java.util.Set)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:javax.xml.bind.JAXBContext createJaxbContext(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.Object createSingletonInstance(java.lang.Class,java.util.Map,javax.servlet.ServletConfig)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void createServerFromApplication(java.lang.String,javax.servlet.ServletConfig,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.PathSegmentImpl:void <init>(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildURI(boolean,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getRequestHeader(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getListValues(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updatePath(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:javax.ws.rs.core.Response checkMetadataRequest(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluatePreconditions(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:javax.ws.rs.core.Response$ResponseBuilder evaluateIfNotModifiedSince(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:java.lang.String toHttpDate(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.net.URI getBaseUri()",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String doGetPath(boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.SecurityContextImpl:boolean isSecure()",
            "org.apache.cxf.jaxrs.model.URITemplate:void <init>(java.lang.String)",
            "org.apache.cxf.jaxrs.model.URITemplate:boolean match(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String encodeLiteralCharacters()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void setResponseDate(javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object evaluateFactoryMethod(java.lang.String,java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.String decodeValue(java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void writeMapToOutputStream(java.util.Map,java.io.OutputStream,java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String componentEncode(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String queryEncode(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String urlEncode(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String pathEncode(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:boolean isPartiallyEncoded(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String encodePartiallyEncoded(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getPathToMatch(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getBaseAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:void updatePath(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getSetEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:void <clinit>()",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client modified(java.util.Date,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient back(boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.security.auth.Subject loginAndGetSubject()",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:byte[] getServiceTicket(java.lang.String)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientConfiguration:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientConfiguration:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:void <clinit>()",
            "org.apache.cxf.jaxrs.client.AbstractClient:void <init>(java.net.URI)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void <init>(org.apache.cxf.jaxrs.client.ClientState)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:int getBodyIndex(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:int getBodyIndex(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List getPathParamValues(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleQueries(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleMatrixes(javax.ws.rs.core.MultivaluedMap,java.lang.Object[],javax.ws.rs.core.UriBuilder)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap handleForm(javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void reportInvalidResourceMethod(java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <clinit>()",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.Response$ResponseBuilder setResponseBuilder(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:void checkClientException(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void waitForResponseCode(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addParametersToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void reportMessageHandlerProblem(java.lang.String,java.lang.Class,javax.ws.rs.core.MediaType,java.lang.Throwable,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void <clinit>()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.Client createWithValues(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient create(java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void checkContentLength()",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.io.InputStream decodeIfNeeded(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:javax.activation.DataHandler getHandlerForObject(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,int)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readNode(org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void setNamespaceMapper(javax.xml.bind.Marshaller,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void reportEmptyContentLength()",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.StringBuilder handleExceptionStart(java.lang.Exception)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleJAXBException(javax.xml.bind.JAXBException,boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void handleXMLStreamException(javax.xml.stream.XMLStreamException,boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addProcessingInstructions(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void <init>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBAttachmentUnmarshaller:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentUnmarshaller(javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void logRedirection(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:javax.servlet.ServletContext getServletContext()",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:javax.servlet.RequestDispatcher getRequestDispatcher(javax.servlet.ServletContext,java.lang.Class,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void tryInjectMessageContext(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.writer.Writer createWriter(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void reportError(java.lang.String,java.lang.Exception,int)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:org.apache.abdera.writer.Writer createWriter(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:org.apache.abdera.model.Element readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBAttachmentMarshaller:java.lang.String addMtomAttachment(javax.activation.DataHandler,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:java.lang.String toString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:java.lang.String toString()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPWSDLExtensionLoader:void createExtensor(org.apache.cxf.wsdl.WSDLManager,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void createExtensor(org.apache.cxf.wsdl.WSDLManager,java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.namespace.QName parseQName(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.namespace.QName parseQName(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean processBusAttribute(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.spring.JAXRSClientFactoryBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeCharacters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeSpaces()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.JSONUtils$IgnoreMixedContentWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void indentWithSpaces()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeCharacters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeSpaces()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeCharacters(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeCharacters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeSpaces()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeCharacters(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level getLevel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:boolean isLoggable(java.util.logging.Level)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level access$000(org.apache.cxf.common.logging.Log4jLogger,org.apache.log4j.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void setAttachments(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()",
            "org.apache.cxf.message.AbstractWrappedMessage:void setAttachments(java.util.Collection)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.URL setupURL(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyKnownRequestParameters(javax.servlet.http.HttpServletRequest,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupContinuation(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:java.util.Map getSetProtocolHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Headers:void <init>(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.util.Map parseHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:void <init>(java.lang.String)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.lang.String getRealm()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void setupContinuation(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.common.util.ClassReader:java.util.Map findAttributeReaders(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void <init>(byte[])"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:java.util.Map parseQueryString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.StringMapImpl:void put(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void propogateSecureSession(javax.servlet.http.HttpServletRequest,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.https.CertConstraintsInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void setDestination(org.apache.cxf.transport.Destination)",
            "org.apache.cxf.message.AbstractWrappedMessage:void put(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.message.ExchangeImpl:void put(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBinding:org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.XMLBinding:org.apache.cxf.message.Message createMessage()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.message.Message getOutMessage()",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:java.lang.String getEncoding(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void copyJaxwsProperties(org.apache.cxf.message.Message,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void access$100(org.apache.cxf.interceptor.ServiceInvokerInterceptor,org.apache.cxf.message.Message,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultName(java.lang.String,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultReason(java.lang.String,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storePartialResponseSent(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.WSAContextUtils:void storeUsingAddressing(boolean,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.WSAContextUtils:void storeTo(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void setEmptyRequestProperty(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void persistParamsOnMessage(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void addDestination(org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.auth.HttpAuthHeader:java.util.Map parseHeader()",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier$DigestInfo:java.lang.String generateAuth(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:java.util.Map parseMapSequence(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBContext createRIContext(java.lang.Class[],java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ClassReader:java.util.Map findAttributeReaders(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:java.util.Map parseQueryString(java.lang.String)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.StringMapImpl:void put(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:org.apache.cxf.interceptor.LoggingMessage setupBuffer(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processTypes(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeDeferUncorrelatedMessageAbort(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeDeferredUncorrelatedMessageAbort(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ServletOutputStreamFilter:void write(int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.Map getCookies()",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableLanguages()",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void addParameter(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:javax.ws.rs.core.CacheControl fromString(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.HttpServletResponseFilter:void setStatus(int)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void persistRoots(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:void setDataBindingProvider(org.apache.cxf.jaxrs.provider.ProviderFactory,org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.UserResource:java.util.Map getOperationsAsMap()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleGrammars(java.lang.StringBuilder,java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.WadlGenerator$SchemaWriter,java.util.Map)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.util.Map getLocationsMap(org.apache.cxf.jaxrs.ext.xml.XMLSource,java.lang.String,java.util.List,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:java.util.Map userResourcesAsMap(java.util.List)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:void set(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.ext.search.SimpleSearchCondition:java.util.Map getGettersAndValues()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getServiceClasses(javax.servlet.ServletConfig,boolean,java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map parseMapListSequence(java.lang.String)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:void injectProperties(java.lang.Object,java.util.Map)",
            "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void completeExchange(java.lang.Object,org.apache.cxf.message.Exchange,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Exchange createExchange(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setPlainOperationNameProperty(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void doSetParameters(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:void setTransformerParameter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void setSchemaLocation(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void setContentType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.jaxrs.utils.schemas.SchemaHandler:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getUserResources(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.provider.ProviderFactory getInstance()",
            "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:org.apache.cxf.Bus getBus()"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:void <init>()"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.ServiceInfo[])"
        ]
    },
    "org.apache.cxf.bus.resource.ResourceManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.HeaderManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void <init>(java.util.Map,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void <init>(org.apache.cxf.configuration.spring.MapProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void <init>(java.util.Map,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void <init>(java.util.Map,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusExtensionPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutTemplate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInTemplate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.lang.String getPath()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.transports.http.configuration.HTTPClientPolicy:org.apache.cxf.transports.http.configuration.ConnectionType getConnection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:boolean equals(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setScope(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.endpoint.Server,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean compare(java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean isMet(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:java.lang.String conditionTypeToLdapOperator(org.apache.cxf.jaxrs.ext.search.ConditionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchUtils:java.lang.String conditionTypeToSqlOperator(org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client accept(javax.ws.rs.core.MediaType[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client accept(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client cookie(javax.ws.rs.core.Cookie)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client acceptLanguage(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client acceptEncoding(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.Client type(javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.tl.ThreadLocalUriInfo:java.util.List getPathSegments()",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void setRequestParameters(org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setServiceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.OldSpringSupport:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.OldSpringSupport:void <init>(org.apache.cxf.Bus,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void setDefaultThreshold(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:boolean shouldDestroyPort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()"
        ]
    },
    "org.apache.cxf.common.util.SystemUtils$1:java.lang.String run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.SystemUtils$1:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.io.File getDefaultTempDir()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File,boolean)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void setDefaultCipherTransformation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.io.CachedOutputStream$1:void close()",
            "org.apache.cxf.io.CachedOutputStream:void <init>(java.io.PipedInputStream)",
            "org.apache.cxf.io.CachedOutputStream:void <init>()",
            "org.apache.cxf.io.CachedOutputStream:void <init>(long)",
            "org.apache.cxf.io.CachedOutputStream:void readBusProperties()",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultMaxSize(long)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultThreshold(int)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:boolean checkBufferingMode(org.apache.cxf.message.Message,javax.ws.rs.ext.MessageBodyWriter,boolean)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void marshalToWriter(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.stream.XMLStreamWriter,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.io.InputStream getStreamFromReader(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)"
        ]
    },
    "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaType getElementType(org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAnnotated getObjectAnnotated(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaParticle getObjectParticle(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getContentSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaChoice getChoice(org.apache.ws.commons.schema.XmlSchemaComplexType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAll getAll(org.apache.ws.commons.schema.XmlSchemaComplexType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine getOrCreate(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.blueprint.JettyHTTPServerEngineFactoryHolder:void init()",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine getOrCreate(org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory,java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(java.lang.String,int,org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.UrlUtils:java.lang.String pathDecode(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String urlDecode(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String urlDecode(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.common.commands.ForkedCommand:int execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void updateIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void reset()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void insertInterceptor(int,org.apache.cxf.phase.PhaseInterceptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:boolean hasFastInfoSet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:void writeTo(org.apache.abdera.model.Element,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.WriteOnCloseOutputStream:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:org.apache.cxf.transport.servlet.ServletController createServletController(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void init(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.catalog.OASISCatalogManager)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void <clinit>()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addGZipSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.GZIP)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:boolean access$500()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:boolean access$502(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>(org.apache.cxf.transport.http.DestinationRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:java.util.Set getUriPrefixes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.util.Set getPrefixes(java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.Headers:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.Cookies:void writeToMessageHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void addLogHandler(java.util.logging.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.CertConstraintsFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket()"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void addLogHandler(java.util.logging.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https_jetty.JettySslConnectorFactory:org.eclipse.jetty.server.AbstractConnector createConnector(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https_jetty.JettySslConnectorFactory:org.eclipse.jetty.server.AbstractConnector createConnector(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setupThreadPool()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1:org.eclipse.jetty.server.AbstractConnector createConnector(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1:org.eclipse.jetty.server.AbstractConnector createConnector(int)"
        ]
    },
    "org.apache.cxf.transport.http.auth.DefaultBasicAuthSupplier:java.lang.String getBasicAuthHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.auth.DefaultBasicAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.auth.DefaultBasicAuthSupplier:java.lang.String getBasicAuthHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:int processEncodeme(char[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])"
        ]
    },
    "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()",
            "org.apache.cxf.common.util.Compiler:void addArgs(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])",
            "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)",
            "org.apache.cxf.common.commands.JavaHelper:java.lang.String getJavaCommand()",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.helpers.FileUtils:java.io.File getDefaultTempDir()",
            "org.apache.cxf.helpers.FileUtils:boolean isWindows()",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.common.commands.JavaHelper:java.lang.String getJavaCommand()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.FileUtils:boolean isWindows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void delete(java.io.File,boolean)"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String pathDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String pathDecode(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String urlDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.String decodeValue(java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromString(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message,java.lang.String,java.lang.String,boolean,javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void populateMapFromMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.ext.multipart.MultipartBody,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String pathDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.PathSegmentImpl:void <init>(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:javax.ws.rs.core.MultivaluedMap getPathParameters(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.util.List getMatchedURIs(boolean)",
            "org.apache.cxf.jaxrs.impl.UriInfoImpl:java.lang.String doGetPath(boolean,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.String decodeValue(java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void getStructuredParams(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:boolean processable(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:boolean processable(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:boolean injectable(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field findFieldForResource(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getResourceName(javax.'annotation'.Resource,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.Class getResourceType(javax.'annotation'.Resource,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getFieldNameForResource(javax.'annotation'.Resource,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:boolean injectable(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaElement findElementByRefName(org.apache.cxf.common.xmlschema.SchemaCollection,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementQualified(org.apache.ws.commons.schema.XmlSchemaElement,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.stream.XMLStreamReader createDepthReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createNewWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void setInnerElementLevelThreshold(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void setInnerElementCountThreshold(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void returnXMLInputFactory(javax.xml.stream.XMLInputFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLOutputFactory getXMLOutputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void returnXMLOutputFactory(javax.xml.stream.XMLOutputFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createNewWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$StringSchemaWriter:java.lang.String transformSchema(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void checkCachedStream(org.apache.cxf.message.Message,java.io.OutputStream,boolean)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Class,java.lang.reflect.Type,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromReader(javax.xml.bind.Unmarshaller,javax.xml.stream.XMLStreamReader,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:javax.xml.stream.XMLStreamWriter createStreamWriter(javax.xml.namespace.QName,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(org.xml.sax.InputSource)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:javax.xml.stream.XMLStreamReader getReader(java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:javax.xml.stream.XMLStreamReader createStreamReader(org.apache.cxf.aegis.type.AegisType,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(org.xml.sax.InputSource)",
            "org.apache.cxf.jaxrs.provider.SourceProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.DataBindingProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.DataBindingProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Class,java.lang.reflect.Type,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.SourceProvider:javax.xml.stream.XMLStreamReader getReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.SourceProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:javax.xml.stream.XMLStreamReader createStreamReader(org.apache.cxf.aegis.type.AegisType,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:javax.xml.stream.XMLStreamWriter createStreamWriter(javax.xml.namespace.QName,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.aegis.AegisElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.message.Message getCurrentMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.CXFAuthenticator:java.net.PasswordAuthentication getPasswordAuthentication()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder location(java.net.URI)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:javax.ws.rs.core.MediaType handleMediaTypeWithoutSubtype(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:org.apache.cxf.message.Message getCurrentMessage()",
            "org.apache.cxf.jaxrs.impl.WebApplicationExceptionMapper:javax.ws.rs.core.Response toResponse(javax.ws.rs.WebApplicationException)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void logRequestParametersIfNeeded(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.multipart.AttachmentUtils:javax.ws.rs.core.MultivaluedMap populateFormMap(org.apache.cxf.jaxrs.ext.MessageContext,boolean)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void persistParamsOnMessage(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void populateMap(javax.ws.rs.core.MultivaluedMap,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,boolean)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object getStreamHandlerFromCurrentMessage(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:void copyInputToOutput(java.io.InputStream,java.io.OutputStream,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.BinaryDataProvider:boolean isRangeSupported()",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getRequestPath()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])"
        ]
    },
    "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:org.apache.cxf.message.Message getCurrentMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object getStreamHandlerFromCurrentMessage(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamReader getStreamReader(java.io.InputStream,java.lang.Class,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getRequestPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPWSDLExtensionLoader:void createExtensor(org.apache.cxf.wsdl.WSDLManager,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPWSDLExtensionLoader:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void createExtensor(org.apache.cxf.wsdl.WSDLManager,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void registerExtensors(org.apache.cxf.wsdl.WSDLManager)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Node,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Document,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Text createTextNode(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName convertStringToQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.helpers.XMLUtils:java.util.Set convertStringsToQNames(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:javax.xml.namespace.QName convertStringToQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object convertToJaxbElementIfNeeded(java.lang.Object,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.namespace.QName getCollectionWrapperQName(java.lang.Class,java.lang.reflect.Type,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.Bus getBus()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResources(java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setUserResourcesWithServiceClass(java.util.List,java.lang.Class[])",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.jaxrs.model.ClassResourceInfo createResourceInfo(java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClassesFromBeans(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void setSchemaLocations(java.util.List)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.feature.LoggingFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addLoggingSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.Logging)",
            "org.apache.cxf.bus.CXFBusImpl:void <init>(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setFeatures(java.util.Collection)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void setOutputLocation(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeDefaultInterceptors()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void setOutputLocation(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:java.util.List getSupportedTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.AttachmentInputInterceptor:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.interceptor.AttachmentInputInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.AttachmentInputInterceptor:void <init>()",
            "org.apache.cxf.jaxrs.interceptor.AttachmentInputInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeFaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.StringTokenizer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.StringTokenizer,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getCallbackHandler(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.security.auth.callback.CallbackHandler getCallbackHandler(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter$1:javax.security.auth.callback.CallbackHandler getCallbackHandler(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setConduitSelector(org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.ConduitSelector)"
        ]
    },
    "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:void initClient(org.apache.cxf.jaxrs.client.AbstractClient,org.apache.cxf.endpoint.Endpoint,boolean)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.reflect.Method matchMethod(java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getRealOperation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.jaxrs.model.ProviderInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean compare(java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.AbstractBaseBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBaseBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.InterfaceInfo createInterface(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateSchemas(org.apache.cxf.common.xmlschema.XmlSchemaValidationManager,org.apache.cxf.common.xmlschema.SchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getClass(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getClass(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)"
        ]
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:void writeToWriter(javax.xml.stream.XMLStreamWriter,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void setFactoriesAreAbstract(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void setFactoriesAreAbstract(boolean)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.NamespaceHandler:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.NamespaceHandler:void init()",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicies(java.lang.Object,boolean,java.lang.String[],java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata createValue(org.apache.aries.blueprint.ParserContext,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void setFirstChildAsProperty(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.JAXRSClientFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.jaxrs.blueprint.JAXRSServerFactoryBeanDefinitionParser:void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:org.apache.aries.blueprint.mutable.MutableBeanMetadata getBus(org.apache.aries.blueprint.ParserContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.RefMetadata getBusRef(org.apache.aries.blueprint.ParserContext,java.lang.String)",
            "org.apache.cxf.bus.blueprint.BusDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.RefMetadata getBusRef(org.apache.aries.blueprint.ParserContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void processBusAttribute(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.ReferenceParametersType convert(org.apache.cxf.ws.addressing.v200408.ReferenceParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAttributedURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.RelatesToType getRelatesTo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void setJAXBContext(javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getNoneEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void applyReferenceParam(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.xml.sax.EntityResolver getResolver()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createAppContext(java.net.URL[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void setEntityResolvers(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFActivator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.TextExtensionFragmentParser:org.apache.cxf.bus.extension.Extension getExtensionFromTextLine(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFActivator:org.apache.cxf.bus.extension.Extension createOsgiBusListenerExtension(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.extension.XmlExtensionFragmentParser:java.util.List deserialiseExtensions(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.XmlExtensionFragmentParser:java.util.List getExtensions(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:org.apache.cxf.bus.extension.Extension cloneNoObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.Class tryClass(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.Extension:java.lang.Class getClassObject(java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.Extension:java.lang.Class loadInterface(java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.logging.Logger access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator$ExternalSchemaWriter:void write(java.lang.StringBuilder)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.QueryContextProvider$QueryContextImpl:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider:org.apache.cxf.jaxrs.ext.search.QueryContext createContext(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextProvider:org.apache.cxf.jaxrs.ext.search.SearchContext createContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.SearchContextProvider:java.lang.Object createContext(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isFormParameter(org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleFormRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.Class getFormClass(org.apache.cxf.jaxrs.model.OperationResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:org.apache.cxf.jaxrs.ext.search.collections.CollectionCheck getCollectionCheck(java.lang.String,boolean,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object parseType(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String,org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.Object getPrimitiveValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean isMet(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.Object getValue(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:java.lang.Object getPrimitiveValue(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.reflect.Type getSuperType(java.lang.Class,java.lang.reflect.TypeVariable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List processParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Class getActualType(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteParam(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.Parameter,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.lang.'annotation'.Annotation[],boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:java.lang.Object parseType(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String,org.apache.cxf.jaxrs.ext.search.Beanspector$TypeInfo,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor:org.apache.cxf.jaxrs.ext.search.visitor.AbstractSearchConditionVisitor$ClassValue doGetPrimitiveFieldClass(org.apache.cxf.jaxrs.ext.search.PrimitiveStatement,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.util.Set)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.List processValues(java.lang.Class,java.lang.reflect.Type,javax.ws.rs.core.MultivaluedMap,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object mergeCollectionsOrArrays(java.lang.Object,java.lang.Object,java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object injectIntoCollectionOrArray(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,boolean,boolean,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Class getTypeFromAdapter(javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,java.lang.Class,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean objectFactoryForType(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:org.apache.cxf.jaxrs.ext.ContextProvider createContextProvider(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:int compareClasses(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Class,java.lang.reflect.Type,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void setFeedFromCollection(org.apache.abdera.factory.Factory,org.apache.abdera.model.Feed,java.lang.Object,java.lang.Class,java.lang.Object,java.lang.Class,java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Class getActualType(java.lang.reflect.Type,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.reflect.Type getSuperType(java.lang.Class,java.lang.reflect.TypeVariable)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Class getActualType(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Class getActualType(java.lang.reflect.Type,int)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Class getActualType(java.lang.reflect.Type,int)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:boolean isSupportedMap(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:org.apache.cxf.jaxrs.impl.tl.ThreadLocalProxy createThreadLocalProxy(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addContextMethod(java.lang.Class,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.util.Map getParametersFromBeanClass(java.lang.Class,org.apache.cxf.jaxrs.model.ParameterType,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void doWriteBeanParam(java.lang.StringBuilder,java.lang.Class,org.apache.cxf.jaxrs.model.Parameter,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Class getTypeFromAdapter(javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Class getValueTypeFromAdapter(java.lang.Class,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Object useAdapter(java.lang.Object,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,boolean,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Object convertWithAdapter(java.lang.Object,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Object useAdapter(java.lang.Object,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Class getActualType(java.lang.reflect.Type,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object getAttachmentCollection(java.lang.reflect.Type,java.util.List,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:boolean isSupported(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean objectFactoryForType(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.DataBindingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.URITemplate,java.lang.String,java.lang.String,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getProduceMime()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getConsumeMime()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProviderConsumeTypes(javax.ws.rs.ext.MessageBodyReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyReaderComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProviderProduceTypes(javax.ws.rs.ext.MessageBodyWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory$MessageBodyWriterComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean matchHttpMethod(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getConsumeTypes(javax.ws.rs.Consumes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getConsumeMime()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProviderConsumeTypes(javax.ws.rs.ext.MessageBodyReader)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProduceTypes(javax.ws.rs.Produces)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getProduceMime()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getProviderProduceTypes(javax.ws.rs.ext.MessageBodyWriter)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory$ContextResolverComparator:int compare(org.apache.cxf.jaxrs.model.ProviderInfo,org.apache.cxf.jaxrs.model.ProviderInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List parseMediaTypes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.util.List getAcceptableMediaTypes()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getProduceMime()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getConsumeMime()",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List sortMediaTypes(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List sortMediaTypes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkMediaTypes(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.namespace.QName getQName(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamWriter createWriter(java.lang.Class,java.lang.reflect.Type,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.DataBindingJSONProvider:javax.xml.stream.XMLStreamReader createReader(java.lang.Class,java.lang.reflect.Type,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkOneway()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkDefaultParameterValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void setParamField(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void setParamField(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:void setParamMethods(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void <init>(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void setParamMethods(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ClassResourceInfo:javax.ws.rs.Path getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean isDocAvailable(java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void addDocsAndCloseElement(java.lang.StringBuilder,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void handleRepresentation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXBUtils:javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter getAdapter(java.lang.Class,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Object convertWithAdapter(java.lang.Object,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Class getValueTypeFromAdapter(java.lang.Class,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:boolean isSupported(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Class getActualType(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object checkAdapter(java.lang.Object,java.lang.Class,java.lang.'annotation'.Annotation[],boolean)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isContextClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void findContextFields(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isParamAnnotationClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void setParamField(java.lang.Class)",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:void setParamMethods(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isValidParamAnnotationClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isValidParamAnnotations(java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isValidParamAnnotations(java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.reflect.Method doGetAnnotatedMethod(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Constructor findResourceConstructor(java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:boolean isMethodAnnotation(java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.reflect.Method doGetAnnotatedMethod(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.reflect.Method getAnnotatedMethod(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.reflect.Method doGetAnnotatedMethod(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.reflect.Method getAnnotatedMethod(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.reflect.Method doGetAnnotatedMethod(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkEncoded()",
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void checkDefaultParameterValue()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getProduceMime()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:java.util.List getConsumeMime()",
            "org.apache.cxf.jaxrs.model.ClassResourceInfo:javax.ws.rs.Path getPath()",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.JAXRSServiceFactoryBean:void setResourceClass(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.'annotation'.Annotation getClassAnnotation(java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.AnnotationUtils:java.lang.String getDefaultParameterValue(java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.Parameter getParameter(int,java.lang.'annotation'.Annotation[],java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Constructor findResourceConstructor(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void init()",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:void <init>(java.lang.Class)",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void init()",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.lang.Object createSingletonInstance(java.lang.Class,java.util.Map,javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.Parameter getParameter(int,java.lang.'annotation'.Annotation[],java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.util.Map getClassParameters(org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void injectParameters(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getParameters(java.lang.reflect.Method)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.Object[] createConstructorArguments(java.lang.reflect.Constructor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.client.ClientProxyImpl:org.apache.cxf.jaxrs.ext.multipart.Multipart getMultipart(org.apache.cxf.jaxrs.model.OperationResourceInfo,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:javax.ws.rs.core.MultivaluedMap getParametersInfo(java.lang.Object[],org.apache.cxf.jaxrs.model.OperationResourceInfo)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.util.List handleMultipart(javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.String getContentId(java.lang.'annotation'.Annotation[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.MultipartProvider:org.apache.cxf.jaxrs.ext.multipart.Attachment createDataHandler(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.FormEncodingProvider:boolean keepEncoded(java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)"
        ]
    },
    "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void updateClassResourceProviders()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.JAXRSServerFactoryBean createApplication(javax.ws.rs.core.Application,boolean,boolean)",
            "org.apache.cxf.jaxrs.servlet.CXFNonSpringJaxrsServlet:java.util.Map getResourceProviders(javax.servlet.ServletConfig,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo createOperationInfo(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,javax.ws.rs.Path,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Method findPostConstructMethod(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void init()",
            "org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider:void <init>(java.lang.Object,boolean)",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:void <init>(java.lang.Class)",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void init()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Method findPostConstructMethod(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Method findPreDestroyMethod(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void init()",
            "org.apache.cxf.jaxrs.lifecycle.PerRequestResourceProvider:void <init>(java.lang.Class)",
            "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void init()",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:java.lang.reflect.Method findPreDestroyMethod(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:java.util.List getParameters(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.PathSegmentImpl:void <init>(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.PathSegmentImpl:void <init>(java.lang.String)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.UriBuilder doPath(java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List getPathSegments(java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildURI(boolean,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuild(boolean,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuildFromMap(java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:java.lang.String toHttpDate(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder lastModified(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder expires(java.util.Date)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.model.URITemplate:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI doBuild(boolean,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteMapped(java.lang.String,java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildPath(boolean)",
            "org.apache.cxf.jaxrs.model.URITemplate:org.apache.cxf.jaxrs.model.URITemplate createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.String decodeValue(java.lang.String,boolean,org.apache.cxf.jaxrs.model.ParameterType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String componentEncode(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String queryEncode(java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String pathEncode(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String queryEncode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String encodePartiallyEncoded(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String urlEncode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String componentEncode(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String pathEncode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String encodePartiallyEncoded(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:boolean isPartiallyEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildURI(boolean,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String encodePartiallyEncoded(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String buildParams(javax.ws.rs.core.MultivaluedMap,char,boolean)",
            "org.apache.cxf.jaxrs.model.URITemplate:void <init>(java.lang.String)",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String encodeLiteralCharacters()"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void <init>(org.apache.cxf.jaxrs.client.ClientState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void <init>(org.apache.cxf.jaxrs.client.ClientState,java.lang.ClassLoader,org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean,boolean,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.WebClient:void <init>(org.apache.cxf.jaxrs.client.ClientState)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void setNamespaceMapper(javax.xml.bind.Marshaller,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object readNode(org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void trySettingProperties(java.lang.Object,org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(javax.xml.transform.Templates,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:javax.xml.transform.Templates createTemplates(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object unmarshalFromInputStream(javax.xml.bind.Unmarshaller,java.io.InputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollectionMember(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addProcessingInstructions(javax.xml.bind.Marshaller,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshal(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalToOutputStream(javax.xml.bind.Marshaller,java.lang.Object,java.io.OutputStream,javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void <clinit>()",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void <init>()"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:org.apache.abdera.writer.Writer createWriter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeAtomElement(org.apache.abdera.model.Element,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:org.apache.abdera.model.Element readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:java.lang.Object readFromFeed(java.lang.Class,javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeEmptyElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:int determineReceiveTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPConduit:int determineConnectionTimeout(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.HTTPSession:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.transport.http.HTTPSession:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.transport.http.Headers:void copyToResponse(javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.servicelist.ServiceListGeneratorServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:boolean shouldWrapParameters(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.lang.String substituteVarargs(org.apache.cxf.jaxrs.model.URITemplate,java.lang.Object[],int)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncoded(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.net.URI buildFromEncodedMap(java.util.Map)",
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:java.util.List toStringList(java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.HttpHeadersImpl:java.lang.String getCookieSeparator()",
            "org.apache.cxf.jaxrs.impl.MetadataMap$KeyComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleLanguageMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.lang.Object getMatchingKey(java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RequestImpl:java.lang.String getMethod()",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder setHeader(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:javax.ws.rs.core.Response$ResponseBuilder addHeader(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.impl.ResponseBuilderImpl:boolean valueExists(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.CacheControlHeaderProvider:java.lang.String getSeparator()",
            "org.apache.cxf.jaxrs.model.URITemplate:java.lang.String substitute(java.util.Map)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:java.lang.Object getContextualProperty(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.xml.XMLSource:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Class)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.jpa.AbstractJPATypedQueryVisitor:javax.persistence.criteria.Predicate doBuildCollectionPredicate(org.apache.cxf.jaxrs.ext.search.ConditionType,javax.persistence.criteria.Path,org.apache.cxf.jaxrs.ext.search.collections.CollectionCheckInfo)",
            "org.apache.cxf.jaxrs.ext.search.sql.SQLPrinterVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser$Comparison:java.lang.Object createTemplate(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.ldap.LdapQueryVisitor:void visit(org.apache.cxf.jaxrs.ext.search.SearchCondition)",
            "org.apache.cxf.jaxrs.ext.search.client.FiqlSearchConditionBuilder$Builder:java.lang.String toString(java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:java.util.List computeAvailableContentTypes(org.apache.cxf.message.Message,javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeResponseToStream(java.io.OutputStream,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:void fillInValuesFromBean(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:boolean propogateException(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void addPropertyToForm(javax.ws.rs.core.MultivaluedMap,java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.utils.FormUtils:void logRequestParametersIfNeeded(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getEndpointAddress(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter:javax.ws.rs.core.Response handleAuthenticationException(java.lang.SecurityException,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.String readErrorMessage()",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleHeaders(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void handleCookies(javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.jaxrs.client.Client header(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MultivaluedMap getTemplateParametersMap(org.apache.cxf.jaxrs.model.URITemplate,java.util.List)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.net.URI calculateNewRequestURI(java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void addToBuilder(javax.ws.rs.core.UriBuilder,java.lang.String,java.lang.Object,org.apache.cxf.jaxrs.model.ParameterType)",
            "org.apache.cxf.jaxrs.client.AbstractClient:javax.ws.rs.core.MediaType getResponseContentType(javax.ws.rs.core.Response)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.ResponseReader:javax.ws.rs.core.Response readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient path(java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.util.List convertToDataHandlers(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)",
            "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.ProviderFactory:javax.ws.rs.ext.ContextResolver createContextResolver(java.lang.reflect.Type,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void addAttachmentMarshaller(javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:java.lang.String getResourcePath(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeCharacters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttributeAsElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeSpaces()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeCharacters(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.jaxrs.provider.xmlbeans.XMLBeanStreamSerializer:void serialize(org.apache.xmlbeans.XmlObject,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void writeCharacters(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void indentWithSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:boolean isLoggable(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void logConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectAuthorizationLoop(java.lang.String,org.apache.cxf.message.Message,java.net.URL,java.lang.String)",
            "org.apache.cxf.transport.http.TrustDecisionUtil:void makeTrustDecision(org.apache.cxf.transport.http.MessageTrustDecider,org.apache.cxf.message.Message,java.net.HttpURLConnection,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void logResponseInfo(int)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.auth.AbstractSpnegoAuthSupplier:java.lang.String getCompleteServicePrincipalName(java.net.URL)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http_jetty.blueprint.HTTPJettyTransportNamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(java.lang.String,int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void handleAppendMode(javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.staxutils.transform.ElementProperty)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.StringBuilder)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void log(java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger,boolean)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialXmlExtensions(java.lang.String)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo selectResourceClass(java.util.List,java.lang.String,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo findTargetMethod(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.message.Message,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.String,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:void logNoMatchMessage(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.String,java.lang.String,javax.ws.rs.core.MediaType,java.util.List)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider:void logRedirection(java.lang.String,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.http.auth.HttpAuthHeader:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void propogateSecureSession(javax.servlet.http.HttpServletRequest,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void setDestination(org.apache.cxf.transport.Destination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void put(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void propogateSecureSession(javax.servlet.http.HttpServletRequest,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.https.CertConstraintsInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void put(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:void pushOntoStack(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Class,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.security.KerberosAuthenticationFilter:javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:void put(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.ExchangeImpl:void setConduit(org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractEndpointSelectionInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:java.lang.String preprocess(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.ClientConfiguration:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void checkResponse(java.lang.reflect.Method,javax.ws.rs.core.Response,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Exchange createExchange(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.URL setupURL(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectAuthorizationLoop(java.lang.String,org.apache.cxf.message.Message,java.net.URL,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void detectRedirectLoop(java.lang.String,java.net.URL,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DestinationRegistryImpl:void addDestination(org.apache.cxf.transport.http.AbstractHTTPDestination)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$1:void cacheInput()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyKnownRequestParameters(javax.servlet.http.HttpServletRequest,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String setEncoding(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupContinuation(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.http.osgi.HTTPTransportActivator:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.transport.http.Headers:void writeSessionCookies(java.util.Map)",
            "org.apache.cxf.transport.http.Headers:void setFromClientPolicy(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.Headers:void setFromServerPolicy(org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.Headers:void setAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:void setProxyAuthorization(java.lang.String)",
            "org.apache.cxf.transport.http.Headers:java.util.Map getSetProtocolHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.Headers:void readFromConnection(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.http.Headers:void copyFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http.auth.DigestAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.http.Cookies:void handleSetCookie(java.util.List)",
            "org.apache.cxf.transport.http.HttpServletRequestSnapshot:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.AbstractHTTPServlet:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void setupContinuation(org.apache.cxf.message.Message,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfQNames(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getBuilder()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder()",
            "org.apache.cxf.binding.xml.XMLBinding:org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:java.lang.String getEncoding(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void copyJaxwsProperties(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void processTypes(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultName(java.lang.String,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultReason(java.lang.String,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storePartialResponseSent(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.WSAContextUtils:void storeUsingAddressing(boolean,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.WSAContextUtils:void storeTo(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypesWithSchemaImports(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.CXFBusImpl:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.RuntimeDelegateImpl:void <init>()",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleExtensionMappings(org.apache.cxf.message.Message,javax.ws.rs.core.UriInfo)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptLanguageHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleMethod(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.HttpHeaders)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void handleCType(org.apache.cxf.message.Message,javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void updateAcceptTypeHeader(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.impl.RequestPreprocessor:void <clinit>()",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void <init>(java.util.Map,boolean,boolean)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:void add(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.impl.MetadataMap:java.util.List put(java.lang.Object,java.util.List)",
            "org.apache.cxf.jaxrs.impl.MediaTypeHeaderProvider:void addParameter(java.util.Map,java.lang.String)",
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProvider(java.lang.Class,org.apache.cxf.jaxrs.lifecycle.ResourceProvider)",
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:void setResourceProviders(java.util.List)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void <init>(org.apache.cxf.jaxrs.model.MethodDispatcher,org.apache.cxf.jaxrs.model.ClassResourceInfo)",
            "org.apache.cxf.jaxrs.model.MethodDispatcher:void bind(org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void generateQName(java.lang.StringBuilder,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,java.lang.Class,boolean,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:void loadSchemasIntoCache(java.lang.String)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:java.util.Map addContextField(java.util.Map,java.lang.reflect.Field)",
            "org.apache.cxf.jaxrs.model.AbstractResourceInfo:void addToMap(java.util.Map,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.jaxrs.ext.multipart.MultipartBody createAttachments(java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.fiql.FiqlParser:void <clinit>()",
            "org.apache.cxf.jaxrs.ext.search.SearchBean:void set(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.ext.search.Beanspector:void init()",
            "org.apache.cxf.jaxrs.ext.search.SearchContextImpl:org.apache.cxf.jaxrs.ext.search.SearchConditionParser getParser(java.lang.Class,java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void processResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void serializeMessage(org.apache.cxf.message.Message,javax.ws.rs.core.Response,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void setResponseStatus(org.apache.cxf.message.Message,int)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void processRequest(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor:void setExchangeProperties(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.OperationResourceInfo,javax.ws.rs.core.MultivaluedMap,int)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object processFormParam(org.apache.cxf.message.Message,java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.lang.String,boolean)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.util.List intersectMimeTypes(java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void getAllTypesForResource(org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.ResourceTypes,boolean)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void checkJaxbType(java.lang.Class,java.lang.reflect.Type,org.apache.cxf.jaxrs.model.ResourceTypes,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.utils.HttpUtils:java.lang.String getPathToMatch(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.jaxrs.utils.HttpUtils:void updatePath(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.security.KerberosAuthOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ThreadLocalClientState:org.apache.cxf.jaxrs.client.ClientState getState()",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:void initValuesMap(java.lang.Object[])",
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.ClientMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void prepareConduitSelector(org.apache.cxf.message.Message,java.net.URI,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setContexts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,java.util.Map,boolean)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void setEmptyRequestProperty(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.provider.FormEncodingProvider:void persistParamsOnMessage(javax.ws.rs.core.MultivaluedMap)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:void init(java.util.List)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getClassContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:javax.xml.bind.JAXBContext getPackageContext(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.RequestDispatcherProvider$HttpServletRequestFilter:void doSetParameters(java.lang.String,java.lang.String[])",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setInMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider:void setOutMediaTemplates(java.util.Map)",
            "org.apache.cxf.jaxrs.provider.XSLTJaxbProvider$TemplatesImpl:void setTransformerParameter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void setSchemaLocation(java.lang.String)",
            "org.apache.cxf.jaxrs.provider.json.utils.PrefixCollectingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxrs.provider.aegis.AbstractAegisProvider:org.apache.cxf.aegis.AegisContext getClassContext(java.lang.reflect.Type)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor:void setContentType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBinding:org.apache.cxf.message.Message createMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxrs.client.AbstractClient:org.apache.cxf.message.Message createMessage(java.lang.Object,java.lang.String,javax.ws.rs.core.MultivaluedMap,java.net.URI,org.apache.cxf.message.Exchange,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor:org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.message.Message createMessage(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.MessageContextImpl:org.apache.cxf.message.Message getOutMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.MessageContextImpl:void convertToAttachments(java.lang.Object)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void access$100(org.apache.cxf.interceptor.ServiceInvokerInterceptor,org.apache.cxf.message.Message,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:org.apache.cxf.interceptor.LoggingMessage setupBuffer(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor:org.apache.cxf.interceptor.LoggingMessage access$000(org.apache.cxf.interceptor.LoggingOutInterceptor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeDeferUncorrelatedMessageAbort(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeDeferredUncorrelatedMessageAbort(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.impl.ServletOutputStreamFilter:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.ServletOutputStreamFilter:void write(int)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.HttpServletResponseFilter:void setStatus(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.JAXRSInvoker:void persistRoots(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxrs.client.AbstractClient:void setPlainOperationNameProperty(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.ClientProxyImpl:java.lang.Object doChainedInvocation(java.net.URI,javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.lang.Object,int,org.apache.cxf.message.Exchange,java.util.Map)",
            "org.apache.cxf.jaxrs.client.WebClient:javax.ws.rs.core.Response doChainedInvocation(java.lang.String,javax.ws.rs.core.MultivaluedMap,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,org.apache.cxf.message.Exchange,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http.DestinationRegistry,org.apache.cxf.service.model.EndpointInfo,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.ServiceInfo[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:boolean equals(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:java.lang.Object intersect(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:boolean isAsserted(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)"
        ]
    },
    "org.apache.cxf.common.util.SystemUtils$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.SystemUtils:java.lang.String getSpringValidationMode()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:java.io.File createTempFile(java.lang.String,java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void setDefaultMaxSize(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.interceptor.JAXRSOutInterceptor:void writeTo(javax.ws.rs.ext.MessageBodyWriter,java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.client.AbstractClient:void writeBody(java.lang.Object,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider$MessageBodyWriterDataHandler:void writeTo(java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:void writeTo(org.dom4j.Document,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.transport.TransportURIResolver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.Bus,org.apache.cxf.wsdl.EndpointReferenceUtils$1)"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.catalog.OASISCatalogManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPTransportFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.TransportFinder:java.util.Set getPrefixes(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.util.Set access$200(java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.https_jetty.JettySslConnectorFactory:org.eclipse.jetty.server.AbstractConnector createConnector(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1:org.eclipse.jetty.server.AbstractConnector createConnector(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.auth.DefaultBasicAuthSupplier:java.lang.String getAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy,java.net.URL,org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:void delete(java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File,boolean)",
            "org.apache.cxf.helpers.FileUtils:void delete(java.io.File)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()"
        ]
    },
    "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void registerExtensors(org.apache.cxf.wsdl.WSDLManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.wsdl11.XMLWSDLExtensionLoader:void setupBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeDefaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.jaxrs.security.JAASAuthenticationFilter$1:javax.security.auth.callback.CallbackHandler getCallbackHandler(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector()"
        ]
    },
    "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.JAXRSServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.BindingOperationInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.AbstractMessageContainer:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.MessagePartInfo:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getRealOperation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.jaxrs.model.ProviderInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.ProviderInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean compare(java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void processBusAttribute(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)"
        ]
    },
    "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.Class getClassObject(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Class getClassObject(java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.Class loadInterface(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Class loadInterface(java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.QueryContextProvider:org.apache.cxf.jaxrs.ext.search.QueryContext createContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.search.QueryContextProvider:java.lang.Object createContext(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.SearchContextProvider:java.lang.Object createContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:java.lang.Class getFormClass(org.apache.cxf.jaxrs.model.OperationResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.wadl.WadlGenerator:boolean handleOperation(java.lang.StringBuilder,java.util.Set,org.apache.cxf.jaxrs.model.wadl.ElementQNameResolver,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,java.util.Map,org.apache.cxf.jaxrs.model.OperationResourceInfo,boolean,boolean,int)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Class getValueTypeFromAdapter(java.lang.Class,java.lang.Class,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleBean(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MultivaluedMap,org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Object convertWithAdapter(java.lang.Object,java.lang.Class,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.InjectionUtils:java.lang.Object handleParameter(java.lang.String,boolean,java.lang.Class,java.lang.'annotation'.Annotation[],org.apache.cxf.jaxrs.model.ParameterType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.utils.JAXBUtils:java.lang.Object useAdapter(java.lang.Object,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object checkAdapter(java.lang.Object,java.lang.Class,java.lang.'annotation'.Annotation[],boolean)",
            "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider$CollectionWrapper:java.lang.Object getCollectionOrArray(java.lang.Class,java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void marshalCollection(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesReaderCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.PrimitiveTextProvider:boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.ProviderFactory:boolean matchesWriterCriterias(org.apache.cxf.jaxrs.model.ProviderInfo,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,org.apache.cxf.jaxrs.model.URITemplate,java.lang.String,java.lang.String,java.lang.String,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.AbstractJAXBProvider:java.lang.Object checkAdapter(java.lang.Object,java.lang.Class,java.lang.'annotation'.Annotation[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.JAXBElementProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.json.JSONProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.blueprint.BlueprintResourceFactory:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.spring.SpringResourceFactory:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.spring.JAXRSServerFactoryBeanDefinitionParser$SpringJAXRSServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.jaxrs.model.OperationResourceInfo:void <init>(java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo createOperationInfo(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,javax.ws.rs.Path,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:void evaluateResourceClass(org.apache.cxf.jaxrs.model.ClassResourceInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.impl.PathSegmentImpl:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.impl.UriBuilderImpl:javax.ws.rs.core.PathSegment replacePathSegment(javax.ws.rs.core.PathSegment)"
        ]
    },
    "org.apache.cxf.jaxrs.model.URITemplate:org.apache.cxf.jaxrs.model.URITemplate createTemplate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.model.URITemplate:org.apache.cxf.jaxrs.model.URITemplate createTemplate(javax.ws.rs.Path)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createServiceClassResourceInfo(java.util.Map,org.apache.cxf.jaxrs.model.UserResource,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxrs.client.WebClient:void <init>(org.apache.cxf.jaxrs.client.ClientState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean:org.apache.cxf.jaxrs.client.WebClient createWebClient()",
            "org.apache.cxf.jaxrs.client.WebClient:org.apache.cxf.jaxrs.client.WebClient fromClient(org.apache.cxf.jaxrs.client.Client,boolean)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeAtomElement(org.apache.abdera.model.Element,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.provider.atom.AtomPojoProvider:void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.jaxrs.provider.atom.AbstractAtomProvider:java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.ext.multipart.Attachment:java.lang.Object getObject(java.lang.Class)",
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object readFromMessageBody(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],java.io.InputStream,javax.ws.rs.core.MediaType,java.util.List,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxrs.client.ServerWebApplicationException:java.lang.Object toErrorObject(org.apache.cxf.jaxrs.client.Client,java.lang.Class)",
            "org.apache.cxf.jaxrs.client.AbstractClient:java.lang.Object readBody(javax.ws.rs.core.Response,org.apache.cxf.message.Message,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.client.ResponseReader:java.lang.Object readFrom(java.lang.Class,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)",
            "org.apache.cxf.jaxrs.provider.MultipartProvider:java.lang.Object fromAttachment(org.apache.cxf.jaxrs.ext.multipart.Attachment,java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxrs.provider.JAXRSDataBinding$MessageBodyDataReader:java.lang.Object read(java.lang.Class)",
            "org.apache.cxf.jaxrs.provider.dom4j.DOM4JProvider:org.dom4j.Document readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.'annotation'.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:void setConduit(org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:org.apache.cxf.interceptor.LoggingMessage access$000(org.apache.cxf.interceptor.LoggingOutInterceptor,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:java.lang.Object intersect(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:boolean isAsserted(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:boolean isAsserted(org.apache.cxf.message.Message,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.SystemUtils:java.lang.String getSpringValidationMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.io.File createTempFile(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)",
            "org.apache.cxf.common.util.Compiler:void checkLongClasspath(java.lang.String,java.util.List,int)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()"
        ]
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.Bus,org.apache.cxf.wsdl.EndpointReferenceUtils$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.util.Set access$200(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$URIBeanLoaderListener:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File)",
            "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File,boolean)",
            "org.apache.cxf.helpers.FileUtils:void access$000(java.io.File,boolean)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:void delete(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)",
            "org.apache.cxf.io.CachedOutputStream:void deleteTempFile()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setEndpoint(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.ProviderInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean compare(java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.ProviderInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean compare(java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.jaxrs.model.ProviderInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean compare(java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.MessagePartInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxrs.model.ProviderInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.jaxrs.ext.search.PrimitiveSearchCondition:boolean compare(java.lang.Object,org.apache.cxf.jaxrs.ext.search.ConditionType,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Class getClassObject(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Class loadInterface(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.jaxrs.ext.search.QueryContextProvider:java.lang.Object createContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.JAXRSUtils:java.lang.Object createContextValue(org.apache.cxf.message.Message,java.lang.reflect.Type,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxrs.model.URITemplate:org.apache.cxf.jaxrs.model.URITemplate createTemplate(javax.ws.rs.Path)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.ClassResourceInfo createClassResourceInfo(java.lang.Class,java.lang.Class,boolean,boolean,org.apache.cxf.Bus)",
            "org.apache.cxf.jaxrs.utils.ResourceUtils:org.apache.cxf.jaxrs.model.OperationResourceInfo createOperationInfo(java.lang.reflect.Method,java.lang.reflect.Method,org.apache.cxf.jaxrs.model.ClassResourceInfo,javax.ws.rs.Path,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.policy.impl.ClientPolicyCalculator:boolean isAsserted(org.apache.cxf.message.Message,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Compiler:void checkLongClasspath(java.lang.String,java.util.List,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.FileUtils:void access$000(java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils$1:void run()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void deleteTempFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertConstraintsFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setEndpoint(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.FileUtils$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    }
}
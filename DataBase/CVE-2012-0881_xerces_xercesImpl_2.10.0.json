{
    "org.apache.xerces.util.SoftReferenceSymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.util.SoftReferenceSymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolHash:void clear()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void prepareForTraverse()",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.SymbolHash:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl)",
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addIDConstraintDecl(org.apache.xerces.impl.xs.identity.IdentityConstraint)",
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)",
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <init>()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDeclAll(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalSimpleTypeDecl(org.apache.xerces.impl.dv.XSSimpleType)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalSimpleTypeDecl(org.apache.xerces.impl.dv.XSSimpleType,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addIDConstraintDecl(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.identity.IdentityConstraint)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addIDConstraintDecl(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.identity.IdentityConstraint,java.lang.String)",
            "org.apache.xerces.impl.xs.XSConstraints:void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[],short)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.util.SymbolHash buildSubGroups_Org()",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.util.SymbolHash buildSubGroups()",
            "org.apache.xerces.parsers.AbstractSAXParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:void rehash()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:int hash(char[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:int hash(char[],int,int)",
            "org.apache.xerces.util.SoftReferenceSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SoftReferenceSymbolTable:void rehash()",
            "org.apache.xerces.util.SoftReferenceSymbolTable:boolean containsSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:void rehash()",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:int hash(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:int hash(java.lang.String)",
            "org.apache.xerces.util.SoftReferenceSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SoftReferenceSymbolTable:boolean containsSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:void prepareAndPopulateTableView()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.XMLAttributesImpl:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:org.apache.xerces.xni.QName checkDuplicatesNS()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:int getTableViewBucket(java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.XMLAttributesImpl:org.apache.xerces.xni.QName checkDuplicatesNS()"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:void prepareTableView()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.XMLAttributesImpl:org.apache.xerces.xni.QName checkDuplicatesNS()",
            "org.apache.xerces.util.XMLAttributesImpl:void prepareAndPopulateTableView()"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.util.SoftReferenceSymbolTable:void rehash()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.SoftReferenceSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SoftReferenceSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolHash:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addIDConstraintDecl(org.apache.xerces.impl.xs.identity.IdentityConstraint)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSAttributeDecl getGlobalAttributeDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSAttributeGroupDecl getGlobalAttributeGroupDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSElementDecl getGlobalElementDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSGroupDecl getGlobalGroupDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSNotationDecl getGlobalNotationDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraintDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.util.XSNamedMap4Types:org.apache.xerces.xs.XSObject itemByName(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.util.XSNamedMapImpl:org.apache.xerces.xs.XSObject itemByName(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <init>()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDeclAll(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeDecl getGlobalAttributeDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeDecl getGlobalAttributeDecl(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeGroupDecl getGlobalAttributeGroupDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeGroupDecl getGlobalAttributeGroupDecl(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl getGlobalElementDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl getGlobalElementDecl(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl getGlobalGroupDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl getGlobalGroupDecl(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSNotationDecl getGlobalNotationDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSNotationDecl getGlobalNotationDecl(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraintDecl(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraintDecl(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSConstraints:void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSObjectList getSubstitutionGroup(org.apache.xerces.xs.XSElementDeclaration)",
            "org.apache.xerces.parsers.AbstractSAXParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.XMLAttributesImpl:int getTableViewBucket(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xerces.util.XMLAttributesImpl:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.XMLAttributesImpl:void prepareAndPopulateTableView()"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.parsers.DOMParserImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:boolean hasNonSchemaAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getURI(int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getLocalName(int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotationElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:boolean hasNonSchemaAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getName(int)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.parsers.DOMParserImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getName(int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:void getName(int,org.apache.xerces.xni.QName)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:boolean isEntityDeclared(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$LocationPath[] parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$LocationPath[] parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$LocationPath[] parseExpression(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLStreamReader)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillXMLAttributes(javax.xml.stream.XMLStreamReader)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.impl.xs.SchemaGrammar loadSchema(org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.xni.parser.XMLInputSource,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport:java.lang.String getURI(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getURI(java.lang.String)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void finishNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void access$200(org.apache.xerces.jaxp.validation.DOMValidatorHelper,org.apache.xerces.xni.QName,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillQName(org.apache.xerces.xni.QName,javax.xml.namespace.QName)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void fillXMLAttributes(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String access$700(org.apache.xerces.jaxp.JAXPValidatorComponent,java.lang.String)"
        ]
    },
    "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()",
            "org.apache.xerces.util.NamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getExternalEntityRefInAttrValue(java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:java.lang.String getAttributeTypeName(org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getSymbol(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.xpath.XPath$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.impl.xpath.XPath$Tokens:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String symbolize(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.util.JAXPNamespaceContextWrapper:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)",
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean access$300(org.apache.xerces.xpointer.ElementSchemePointer$Scanner,org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean scanExpr(org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean access$400(org.apache.xerces.xpointer.XPointerHandler$Scanner,org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPI()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLScanner:void scanPI()"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPI()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLScanner:void scanPI()"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)"
        ]
    },
    "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void fillQName(org.apache.xerces.xni.QName,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:java.lang.String addSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void prepareForTraverse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void endDTD(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addIDConstraintDecl(org.apache.xerces.impl.xs.identity.IdentityConstraint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeGroupDecl(org.apache.xerces.impl.xs.XSAttributeGroupDecl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDeclAll(org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDecl(org.apache.xerces.impl.xs.XSElementDecl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalNotationDecl(org.apache.xerces.impl.xs.XSNotationDecl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalSimpleTypeDecl(org.apache.xerces.impl.dv.XSSimpleType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalSimpleTypeDecl(org.apache.xerces.impl.dv.XSSimpleType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addIDConstraintDecl(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.identity.IdentityConstraint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addIDConstraintDecl(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.identity.IdentityConstraint,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void findElemInTable(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.util.SymbolHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[],short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.impl.xs.SchemaGrammar[],short)",
            "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[])"
        ]
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.util.SymbolHash buildSubGroups_Org()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.util.SymbolHash buildSubGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[],short)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.ShadowedSymbolTable:int hash(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:int hash(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SymbolTable:void rehash()",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SoftReferenceSymbolTable:boolean containsSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:boolean containsSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.ShadowedSymbolTable:int hash(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:int hash(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.SoftReferenceSymbolTable:boolean containsSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.SymbolTable:boolean containsSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void access$400(org.apache.xerces.jaxp.JAXPValidatorComponent,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSAttributeDecl getGlobalAttributeDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(java.lang.String,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSAttributeGroupDecl getGlobalAttributeGroupDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(java.lang.String,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSElementDecl getGlobalElementDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(java.lang.String,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSGroupDecl getGlobalGroupDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(java.lang.String,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.XSNotationDecl getGlobalNotationDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(java.lang.String,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(java.lang.String,int)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraintDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(java.lang.String,int)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSNamedMap4Types:org.apache.xerces.xs.XSObject itemByName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.util.XSNamedMapImpl:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSNamedMapImpl:org.apache.xerces.xs.XSObject itemByName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.util.XSNamedMapImpl:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeDecl getGlobalAttributeDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <clinit>()",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeDecl getGlobalAttributeDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeGroupDecl getGlobalAttributeGroupDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSAttributeGroupDecl getGlobalAttributeGroupDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl getGlobalElementDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl getMatchingElemDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootElementDeclQName(javax.xml.namespace.QName,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl getGlobalElementDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl getGlobalGroupDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl getGlobalGroupDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSNotationDecl getGlobalNotationDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSNotationDecl getGlobalNotationDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:boolean checkBuiltIn(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootTypeQName(javax.xml.namespace.QName)",
            "org.apache.xerces.impl.xs.XSConstraints:void <clinit>()",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getGlobalTypeDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraintDecl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.identity.IdentityConstraint getIDConstraintDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.xs.XSObjectList getSubstitutionGroup(org.apache.xerces.xs.XSElementDeclaration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int,int)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.DOMParserImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:boolean hasNonSchemaAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.DOMParserImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotationElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:void getName(int,org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.identity.XPathMatcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.StAXEventResultBuilder$AttributeIterator:java.lang.Object next()",
            "org.apache.xerces.jaxp.validation.StAXStreamResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:boolean isEntityDeclared(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityDeclared(java.lang.String)",
            "org.apache.xerces.impl.validation.ConfigurableValidationState:boolean isEntityDeclared(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:boolean isEntityUnparsed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.dtd.ENTITYDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.EntityDV:void checkExtraRules(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityUnparsed(java.lang.String)",
            "org.apache.xerces.impl.validation.ConfigurableValidationState:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$LocationPath[] parseExpression(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.StAXInputSource,boolean,short,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillXMLAttributes(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillQName(org.apache.xerces.xni.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillXMLAttributes(javax.xml.stream.events.StartElement)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSequence(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseLocalElements()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.impl.xs.SchemaGrammar loadSchema(org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.xni.parser.XMLInputSource,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.impl.xs.SchemaGrammar loadSchema(org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.xni.parser.XMLInputSource,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaNamespaceSupport:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void addNamespaceDeclarations(int)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.String findQName(java.lang.String,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()",
            "org.apache.xerces.util.NamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.util.NamespaceSupport:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String getURI(java.lang.String)",
            "org.apache.xerces.impl.xpath.XPath:org.apache.xerces.impl.xpath.XPath$NodeTest parseNodeTest(int,org.apache.xerces.impl.xpath.XPath$Tokens,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startNamespaceMapping()",
            "org.apache.xerces.util.NamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void finishNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void access$200(org.apache.xerces.jaxp.validation.DOMValidatorHelper,org.apache.xerces.xni.QName,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillQName(org.apache.xerces.xni.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillXMLAttributes(javax.xml.stream.events.StartElement)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void fillXMLAttributes(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttributes2(org.xml.sax.ext.Attributes2)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:java.lang.String access$700(org.apache.xerces.jaxp.JAXPValidatorComponent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:org.apache.xerces.xni.QName toQName(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ValidationState:java.lang.String getURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.QNameDV:java.lang.Object getActualValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:java.lang.String getURI(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.NamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.MultipleScopeNamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLStreamReader)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.ElementSchemePointer$Scanner:boolean access$300(org.apache.xerces.xpointer.ElementSchemePointer$Scanner,org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.ElementSchemePointer$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.ElementSchemePointer:void parseXPointer(java.lang.String)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler$Scanner:boolean access$400(org.apache.xerces.xpointer.XPointerHandler$Scanner,org.apache.xerces.util.SymbolTable,org.apache.xerces.xpointer.XPointerHandler$Tokens,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler:void parseXPointer(java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Element)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.DocumentFragment)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.StAXInputSource,boolean,short,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()"
        ]
    },
    "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanPI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)",
            "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void loadGrammar(org.apache.xerces.xni.parser.XMLInputSource[])",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarPreparser:org.apache.xerces.xni.grammars.Grammar preparseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void endEntity()"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:void <clinit>()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.FullDVFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void resolveKeyRefs()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar createGrammarFrom(org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar getSchemaGrammar(org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:boolean checkBuiltIn(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType errorType(java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel(short)",
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinAttrDecl:org.apache.xerces.xs.XSNamespaceItem getNamespaceItem()",
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)",
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <init>()",
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <clinit>()",
            "org.apache.xerces.impl.xs.SchemaGrammar$XSAnyType:org.apache.xerces.xs.XSNamespaceItem getNamespaceItem()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <init>(java.lang.String,org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalElementDeclAll(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.util.SimpleLocator)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addRedefinedGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.util.SimpleLocator)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSComplexTypeDecl[] getUncheckedComplexTypeDecls()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.util.SimpleLocator[] getUncheckedCTLocators()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl[] getRedefinedGroupDecls()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.util.SimpleLocator[] getRGLocators()",
            "org.apache.xerces.impl.xs.SchemaGrammar:void setUncheckedTypeNum(int)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroups()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.SchemaGrammar getS4SGrammar(short)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSNamedMap getComponents(short)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.datatypes.ObjectList getComponentsExt(short)",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.xni.grammars.XSGrammar[])",
            "org.apache.xerces.impl.xs.SchemaGrammar:void <clinit>()",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean typeDerivationOK(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean getDBMethods(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootTypeQName(javax.xml.namespace.QName)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <clinit>()",
            "org.apache.xerces.impl.xs.XSComplexTypeDecl:boolean derivedFromType(org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSComplexTypeDecl:boolean derivedFrom(java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSConstraints:void <clinit>()",
            "org.apache.xerces.impl.xs.XSGrammarBucket:org.apache.xerces.impl.xs.SchemaGrammar[] getGrammars()",
            "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[],short)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.impl.xs.SchemaGrammar$Schema4Annotations:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addNewGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponents(java.util.Vector,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void putGrammar(org.apache.xerces.xni.grammars.Grammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addNewGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addNewGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addNewGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addNewGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addNewGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.impl.xs.SchemaGrammar[],short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel(short)"
        ]
    },
    "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.ElementPSVImpl:org.apache.xerces.xs.XSModel getSchemaInformation()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.xni.grammars.XSGrammar[])",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(char[],int,int)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(char[],int,int)"
        ]
    },
    "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ShadowedSymbolTable:java.lang.String addSymbol(java.lang.String)",
            "org.apache.xerces.util.SynchronizedSymbolTable:boolean containsSymbol(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void access$400(org.apache.xerces.jaxp.JAXPValidatorComponent,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSNamedMapImpl:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:int getNodeNumber(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:java.lang.Object setUserData(org.w3c.dom.Node,java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xerces.dom.CoreDocumentImpl:java.lang.Object getUserData(org.w3c.dom.Node,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:java.util.Hashtable getUserDataRecord(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:java.util.Hashtable removeUserDataTable(org.w3c.dom.Node)",
            "org.apache.xerces.impl.xs.util.XSNamedMapImpl:boolean containsKey(java.lang.Object)",
            "org.apache.xerces.stax.events.StartElementImpl:javax.xml.stream.events.Attribute getAttributeByName(javax.xml.namespace.QName)",
            "org.apache.xerces.util.HTTPInputSource:java.lang.String getHTTPRequestProperty(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponents(java.util.Vector)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSAttributeDeclaration getAttributeDeclaration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:boolean hasSchemaComponent(org.apache.xerces.impl.xs.SchemaGrammar,short,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void initValueStoresFor(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.identity.FieldActivator)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String[] getRecognizedFeatures()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String[] getRecognizedProperties()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Boolean getFeatureDefault(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object getPropertyDefault(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <clinit>()",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)",
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.StandardParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDeclFromGrammar(org.apache.xerces.impl.xs.SchemaGrammar,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSAttributeGroupDefinition getAttributeGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSElementDeclaration getElementDeclaration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:boolean hasSchemaComponent(org.apache.xerces.impl.xs.SchemaGrammar,short,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl getMatchingElemDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler,int)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootElementDeclQName(javax.xml.namespace.QName,org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModelGroupDefinition getModelGroupDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSNotationDeclaration getNotationDeclaration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <init>(org.apache.xerces.impl.xs.traversers.XSDHandler)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] getAvailableArray()",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void returnAttrArray(java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSParticleDecl checkOccurrences(org.apache.xerces.impl.xs.XSParticleDecl,java.lang.String,org.w3c.dom.Element,int,long)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:java.lang.String processAttValue(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSParticleDecl getErrorContent()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSWildcardDecl getErrorWildcard()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGrpOrAttrGrpRedefinedByRestriction(int,org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:boolean checkBuiltIn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSTypeDefinition getTypeDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType errorType(java.lang.String,java.lang.String,short)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:boolean hasSchemaComponent(org.apache.xerces.impl.xs.SchemaGrammar,short,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)",
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.StandardParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootTypeQName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSAllCM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.Object[] validRestrictionOf(java.lang.String,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:org.apache.xerces.impl.xs.XSParticleDecl getEmptySequence()",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition,java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:void gatherChildren(int,org.apache.xerces.impl.xs.XSParticleDecl,java.util.Vector)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSCompat(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSSubset(org.apache.xerces.impl.xs.XSWildcardDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(java.lang.Object,java.lang.Object,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLStreamReader)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void normalizeDocument()"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.XPathMatcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXEventResultBuilder$AttributeIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void cloneNode(org.apache.xerces.dom.CoreDocumentImpl,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:void callUserDataHandlers(org.w3c.dom.Node,org.w3c.dom.Node,short,java.util.Hashtable)",
            "org.apache.xerces.dom.DocumentImpl:void removeNodeIterator(org.w3c.dom.traversal.NodeIterator)",
            "org.apache.xerces.dom.DocumentImpl:void removeStaleReferences(java.lang.ref.ReferenceQueue,java.util.List)",
            "org.apache.xerces.dom.DocumentImpl:void removeRange(org.w3c.dom.ranges.Range)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesReplacedText(org.apache.xerces.dom.CharacterDataImpl)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesDeletedText(org.apache.xerces.dom.CharacterDataImpl,int,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedText(org.apache.xerces.dom.CharacterDataImpl,int,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesSplitData(org.w3c.dom.Node,org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedNode(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.DocumentImpl:void notifyIteratorsRemovingNode(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesRemovingNode(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dv.dtd.XML11DTDDVFactoryImpl:java.util.Hashtable getBuiltInTypes()",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillXMLAttributes(javax.xml.stream.events.StartElement)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillDeclaredPrefixes(java.util.Iterator)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void endElement()",
            "org.apache.xerces.impl.XMLEntityManager:java.lang.String setupCurrentEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void reset()",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillXMLAttributes(javax.xml.stream.events.StartElement)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillDeclaredPrefixes(java.util.Iterator)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void restoreInitialState()",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void setFeatures(java.util.Hashtable)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void setDocumentBuilderFactoryAttributes(java.util.Hashtable)",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void restoreInitState()",
            "org.apache.xerces.jaxp.SAXParserImpl:void setFeatures(java.util.Hashtable)",
            "org.apache.xerces.stax.events.ElementImpl$NoRemoveIterator:java.lang.Object next()",
            "org.apache.xerces.stax.events.ElementImpl:void <init>(javax.xml.namespace.QName,boolean,java.util.Iterator,javax.xml.stream.Location)",
            "org.apache.xerces.stax.events.StartElementImpl:void <init>(javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext,javax.xml.stream.Location)",
            "org.apache.xerces.stax.events.StartElementImpl:void writeAsEncodedUnicode(java.io.Writer)",
            "org.apache.xerces.util.AugmentationsImpl$LargeContainer:java.lang.String toString()",
            "org.apache.xerces.xinclude.XIncludeTextReader:java.io.Reader getReader(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXStreamResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.StAXStreamResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityDeclared(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityDeclared(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ConfigurableValidationState:boolean isEntityDeclared(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityDeclared(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dv.dtd.ENTITYDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void validateDTDattribute(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dv.dtd.ListDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.EntityDV:void checkExtraRules(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkExtraRules(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityUnparsed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.dtd.ENTITYDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.EntityDV:void checkExtraRules(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.validation.ConfigurableValidationState:boolean isEntityUnparsed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.dtd.ENTITYDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.EntityDV:void checkExtraRules(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl$ValidationContextImpl:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xpath.XPath:void main(java.lang.String[])",
            "org.apache.xerces.impl.xs.identity.Field$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.identity.Selector$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.StAXInputSource,boolean,short,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillXMLAttributes(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSequence(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseLocalElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseSimpleTypeDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootTypeQName(javax.xml.namespace.QName)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootElementDeclQName(javax.xml.namespace.QName,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()"
        ]
    },
    "org.apache.xerces.util.NamespaceSupport:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDExternalSubset(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDTDInternalSubset(boolean,boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillXMLAttributes(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttributes2(org.xml.sax.ext.Attributes2)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:org.apache.xerces.xni.QName toQName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.MultipleScopeNamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeNamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void finishNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.ElementSchemePointer:void parseXPointer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler:void parseXPointer(java.lang.String)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void parseXPointer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.DocumentFragment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanXMLDeclOrTextDecl(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLScanner:void scanPI()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLScanner:void scanPI()"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarPreparser:org.apache.xerces.xni.grammars.Grammar preparseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl$NS11ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanRootElementHook()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher:boolean scanRootElementHook()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanDocument(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.NonValidatingConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void loadGrammar(org.apache.xerces.xni.parser.XMLInputSource[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory:javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarPreparser:org.apache.xerces.xni.grammars.Grammar preparseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void endEntity()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityScanner:boolean load(int,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.BaseDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.FullDVFactory:org.apache.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void createBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.impl.dv.XSSimpleType getBuiltInType(java.lang.String)",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.util.SymbolHash getBuiltInTypes()",
            "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:void <clinit>()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.ExtendedSchemaDVFactoryImpl:org.apache.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void resolveKeyRefs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar createGrammarFrom(org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar getSchemaGrammar(org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar getSchemaGrammar(org.apache.xerces.impl.xs.XSDDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType errorType(java.lang.String,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinAttrDecl:org.apache.xerces.xs.XSNamespaceItem getNamespaceItem()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalAttributeDecl(org.apache.xerces.impl.xs.XSAttributeDecl,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar$XSAnyType:org.apache.xerces.xs.XSNamespaceItem getNamespaceItem()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalTypeDecl(org.apache.xerces.xs.XSTypeDefinition,java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaGrammar:void addGlobalComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void <init>(java.lang.String,org.apache.xerces.impl.xs.XSDDescription,org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar getSchemaGrammar(org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addComplexTypeDecl(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.util.SimpleLocator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void addRedefinedGroupDecl(org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.XSGroupDecl,org.apache.xerces.impl.xs.util.SimpleLocator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSComplexTypeDecl[] getUncheckedComplexTypeDecls()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.util.SimpleLocator[] getUncheckedCTLocators()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSGroupDecl[] getRedefinedGroupDecls()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.util.SimpleLocator[] getRGLocators()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:void setUncheckedTypeNum(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.util.SymbolHash buildSubGroups_Org()",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.util.SymbolHash buildSubGroups()"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.impl.xs.SchemaGrammar getS4SGrammar(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSModelImpl:void <init>(org.apache.xerces.impl.xs.SchemaGrammar[],short)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSNamedMap getComponents(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void mergeSchemaGrammars(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.datatypes.ObjectList getComponentsExt(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalElementDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.xni.grammars.XSGrammar[])",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.xs.XSModel toXSModel(org.apache.xerces.xni.grammars.XSGrammar[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean typeDerivationOK(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean substitutionGroupOK(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,short)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean typeDerivationOK(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean getDBMethods(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup[] getSubGroupB(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)"
        ]
    },
    "org.apache.xerces.impl.xs.XSComplexTypeDecl:boolean derivedFromType(org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSComplexTypeDecl:boolean derivedFrom(java.lang.String,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.Object[] validRestrictionOf(java.lang.String,org.apache.xerces.impl.xs.XSAttributeGroupDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivationOk(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkSimpleDerivation(org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.dv.XSSimpleType,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkTypeDerivationOk(org.apache.xerces.xs.XSTypeDefinition,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivationOk(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean checkComplexDerivation(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.xs.XSTypeDefinition,short)"
        ]
    },
    "org.apache.xerces.impl.xs.XSGrammarBucket:org.apache.xerces.impl.xs.SchemaGrammar[] getGrammars()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler$XSAnnotationGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void updateImportListWith(org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void addGrammars(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.impl.xs.XSGrammarBucket)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addNewGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalComponents(java.util.Vector,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(org.apache.xerces.impl.xs.util.XSInputSource,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl$XSGrammarMerger:void putGrammar(org.apache.xerces.xni.grammars.Grammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.XMLGrammarPoolImpl:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])"
        ]
    },
    "org.apache.xerces.impl.xs.ElementPSVImpl:org.apache.xerces.xs.XSModel getSchemaInformation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.PSVIElementNSImpl:void setPSVI(org.apache.xerces.xs.ElementPSVI)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:int getNodeNumber(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:int getNodeNumber()"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:java.lang.Object setUserData(org.w3c.dom.Node,java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void setUserData(org.apache.xerces.dom.NodeImpl,java.lang.Object)",
            "org.apache.xerces.dom.NodeImpl:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:java.lang.Object getUserData(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:java.lang.Object getUserData(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.NodeImpl:java.lang.Object getUserData(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:java.util.Hashtable getUserDataRecord(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:java.util.Hashtable getUserDataRecord()"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:java.util.Hashtable removeUserDataTable(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSNamedMapImpl:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.stax.events.StartElementImpl:javax.xml.stream.events.Attribute getAttributeByName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.HTTPInputSource:java.lang.String getHTTPRequestProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,java.util.Hashtable,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponents(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(org.apache.xerces.impl.xs.util.XSInputSource,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:boolean hasSchemaComponent(org.apache.xerces.impl.xs.SchemaGrammar,short,org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void reset()",
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void reset()",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void resetSchemaValidator()",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void resetSchemaValidator()",
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void resetCommon()",
            "org.apache.xerces.parsers.XML11Configuration:void resetXML11()",
            "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetXML11()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetXML11()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void initValueStoresFor(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.identity.FieldActivator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String[] getRecognizedFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent,org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)",
            "org.apache.xerces.parsers.BasicParserConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11Configuration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String[] getRecognizedProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent,org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)",
            "org.apache.xerces.parsers.BasicParserConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11Configuration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Boolean getFeatureDefault(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void setFeatureDefaults(org.apache.xerces.xni.parser.XMLComponent,java.lang.String[],org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)",
            "org.apache.xerces.parsers.BasicParserConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11Configuration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object getPropertyDefault(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void setPropertyDefaults(org.apache.xerces.xni.parser.XMLComponent,java.lang.String[])",
            "org.apache.xerces.parsers.BasicParserConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11Configuration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)",
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:javax.xml.parsers.DocumentBuilder newDocumentBuilder()",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserFactoryImpl:javax.xml.parsers.SAXParser newSAXParser()",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.parsers.IntegratedParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XPointerParserConfiguration:void configureXML11Pipeline()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XPointerParserConfiguration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSAllCM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler,int)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object findMatchingDecl(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.Object oneTransition(org.apache.xerces.xni.QName,int[],org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void <init>(org.apache.xerces.impl.xs.traversers.XSDHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] getAvailableArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void returnAttrArray(java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAny(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseAnyAttribute(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void returnSchemaAttrs()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSParticleDecl checkOccurrences(org.apache.xerces.impl.xs.XSParticleDecl,java.lang.String,org.w3c.dom.Element,int,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void prepareForTraverse()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:java.lang.String processAttValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseSyntheticAnnotation(org.w3c.dom.Element,java.lang.String,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSParticleDecl getErrorContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSWildcardDecl getErrorWildcard()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSParticleDecl getErrorContent()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSParticleDecl getErrorContent()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSWildcardDecl getErrorWildcard()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void <clinit>()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createTraversers()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGrpOrAttrGrpRedefinedByRestriction(int,org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSAllCM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.Object[] validRestrictionOf(java.lang.String,org.apache.xerces.impl.xs.XSAttributeGroupDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:org.apache.xerces.impl.xs.XSParticleDecl getEmptySequence()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition,java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:org.apache.xerces.impl.xs.XSParticleDecl getNonUnaryGroup(org.apache.xerces.impl.xs.XSParticleDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void gatherChildren(int,org.apache.xerces.impl.xs.XSParticleDecl,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:java.util.Vector removePointlessChildren(org.apache.xerces.impl.xs.XSParticleDecl)",
            "org.apache.xerces.impl.xs.XSConstraints:void gatherChildren(int,org.apache.xerces.impl.xs.XSParticleDecl,java.util.Vector)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNSCompat(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNSSubset(org.apache.xerces.impl.xs.XSWildcardDecl,int,int,org.apache.xerces.impl.xs.XSWildcardDecl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkNSRecurseCheckCardinality(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurse(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseUnordered(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkRecurseLax(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:void checkMapAndSum(java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler,java.util.Vector,int,int,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(java.lang.Object,java.lang.Object,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:org.apache.xerces.impl.xs.opti.ElementImpl emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void normalizeDocument()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DOMNormalizer:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void cloneNode(org.apache.xerces.dom.CoreDocumentImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.PSVIDocumentImpl:org.w3c.dom.Node cloneNode(boolean)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void callUserDataHandlers(org.w3c.dom.Node,org.w3c.dom.Node,short,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:void callUserDataHandlers(org.w3c.dom.Node,org.w3c.dom.Node,short)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void removeNodeIterator(org.w3c.dom.traversal.NodeIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeIteratorImpl:void detach()"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void removeStaleReferences(java.lang.ref.ReferenceQueue,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void removeStaleIteratorReferences()",
            "org.apache.xerces.dom.DocumentImpl:void removeStaleRangeReferences()"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void removeRange(org.w3c.dom.ranges.Range)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void detach()"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void notifyRangesReplacedText(org.apache.xerces.dom.CharacterDataImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void replacedText(org.apache.xerces.dom.CharacterDataImpl)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void notifyRangesDeletedText(org.apache.xerces.dom.CharacterDataImpl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void deletedText(org.apache.xerces.dom.CharacterDataImpl,int,int)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedText(org.apache.xerces.dom.CharacterDataImpl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void insertedText(org.apache.xerces.dom.CharacterDataImpl,int,int)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void notifyRangesSplitData(org.w3c.dom.Node,org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void splitData(org.w3c.dom.Node,org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedNode(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void insertedNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void notifyIteratorsRemovingNode(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void removingNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void notifyRangesRemovingNode(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void removingNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.dtd.XML11DTDDVFactoryImpl:java.util.Hashtable getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.validation.ConfigurableValidationState:java.lang.String checkIDRefID()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillDeclaredPrefixes(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillDeclaredPrefixes(javax.xml.stream.events.StartElement)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillDeclaredPrefixes(javax.xml.stream.events.EndElement)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void endElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:java.lang.String setupCurrentEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void reset()",
            "org.apache.xerces.impl.XMLEntityManager:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillDeclaredPrefixes(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillDeclaredPrefixes(javax.xml.stream.events.StartElement)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillDeclaredPrefixes(javax.xml.stream.events.EndElement)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void restoreInitialState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void reset()"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:void setFeatures(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:void setDocumentBuilderFactoryAttributes(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void restoreInitState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserImpl:void reset()"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void setFeatures(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)"
        ]
    },
    "org.apache.xerces.stax.events.ElementImpl$NoRemoveIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void cloneNode(org.apache.xerces.dom.CoreDocumentImpl,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:void callUserDataHandlers(org.w3c.dom.Node,org.w3c.dom.Node,short,java.util.Hashtable)",
            "org.apache.xerces.dom.DocumentImpl:void removeNodeIterator(org.w3c.dom.traversal.NodeIterator)",
            "org.apache.xerces.dom.DocumentImpl:void removeStaleReferences(java.lang.ref.ReferenceQueue,java.util.List)",
            "org.apache.xerces.dom.DocumentImpl:void removeRange(org.w3c.dom.ranges.Range)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesReplacedText(org.apache.xerces.dom.CharacterDataImpl)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesDeletedText(org.apache.xerces.dom.CharacterDataImpl,int,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedText(org.apache.xerces.dom.CharacterDataImpl,int,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesSplitData(org.w3c.dom.Node,org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedNode(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.DocumentImpl:void notifyIteratorsRemovingNode(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesRemovingNode(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dv.dtd.XML11DTDDVFactoryImpl:java.util.Hashtable getBuiltInTypes()",
            "org.apache.xerces.impl.validation.ValidationState:java.lang.String checkIDRefID()",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillXMLAttributes(javax.xml.stream.events.StartElement)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void addNamespaceDeclarations()",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillDeclaredPrefixes(java.util.Iterator)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreCache:void endElement()",
            "org.apache.xerces.impl.XMLEntityManager:java.lang.String setupCurrentEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void reset()",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillXMLAttributes(javax.xml.stream.events.StartElement)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillDeclaredPrefixes(java.util.Iterator)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void restoreInitialState()",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void setFeatures(java.util.Hashtable)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void setDocumentBuilderFactoryAttributes(java.util.Hashtable)",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void restoreInitState()",
            "org.apache.xerces.jaxp.SAXParserImpl:void setFeatures(java.util.Hashtable)",
            "org.apache.xerces.stax.events.ElementImpl$NoRemoveIterator:java.lang.Object next()",
            "org.apache.xerces.stax.events.ElementImpl:void <init>(javax.xml.namespace.QName,boolean,java.util.Iterator,javax.xml.stream.Location)",
            "org.apache.xerces.stax.events.StartElementImpl:void <init>(javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext,javax.xml.stream.Location)",
            "org.apache.xerces.stax.events.StartElementImpl:void writeAsEncodedUnicode(java.io.Writer)",
            "org.apache.xerces.util.AugmentationsImpl$LargeContainer:java.lang.String toString()",
            "org.apache.xerces.xinclude.XIncludeTextReader:java.io.Reader getReader(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.stax.events.ElementImpl:void <init>(javax.xml.namespace.QName,boolean,java.util.Iterator,javax.xml.stream.Location)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.stax.events.EndElementImpl:void <init>(javax.xml.namespace.QName,java.util.Iterator,javax.xml.stream.Location)",
            "org.apache.xerces.stax.events.StartElementImpl:void <init>(javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext,javax.xml.stream.Location)"
        ]
    },
    "org.apache.xerces.stax.events.StartElementImpl:void <init>(javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext,javax.xml.stream.Location)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext)"
        ]
    },
    "org.apache.xerces.stax.events.StartElementImpl:void writeAsEncodedUnicode(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.stax.events.XMLEventImpl:java.lang.String toString()"
        ]
    },
    "org.apache.xerces.util.AugmentationsImpl$LargeContainer:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)",
            "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()",
            "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)",
            "org.apache.xerces.util.AugmentationsImpl:java.lang.String toString()"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeTextReader:java.io.Reader getReader(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeTextReader:void parse()"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXStreamResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short,short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeUseImpl)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition,java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.impl.dv.ValidatedInfo getActualEnumValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.Object)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.Object)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void validateDTDattribute(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.impl.dtd.XMLAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.dv.dtd.ListDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void validateDTDattribute(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dv.dtd.ListDatatypeValidator:void validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkExtraRules(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void validate(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void checkExtraRules(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.xpath.XPath:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.identity.Field$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Selector$XPath:void <init>(java.lang.String,org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeNamespaceSupport:void <init>(org.apache.xerces.xni.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.xpointer.XPointerHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:java.lang.String saveXML(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanXMLDeclOrTextDecl(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.DTDConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void validateAnnotations(java.util.ArrayList)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory:javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASURI(java.lang.String)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.w3c.dom.ls.LSInput)"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean load(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11EntityScanner:int peekChar()",
            "org.apache.xerces.impl.XML11EntityScanner:int scanChar()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XML11EntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11EntityScanner:int scanContent(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11EntityScanner:int scanLiteral(int,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanData(java.lang.String,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XML11EntityScanner:boolean skipChar(int)",
            "org.apache.xerces.impl.XML11EntityScanner:boolean skipSpaces()",
            "org.apache.xerces.impl.XML11EntityScanner:boolean skipString(java.lang.String)",
            "org.apache.xerces.impl.XMLEntityScanner:int peekChar()",
            "org.apache.xerces.impl.XMLEntityScanner:int scanChar()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNmtoken()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanName()",
            "org.apache.xerces.impl.XMLEntityScanner:java.lang.String scanNCName()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLEntityScanner:int scanContent(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLEntityScanner:int scanLiteral(int,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanData(java.lang.String,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean skipChar(int)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean skipSpaces()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean skipDeclSpaces()",
            "org.apache.xerces.impl.XMLEntityScanner:boolean skipString(java.lang.String)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean load(int,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.SchemaDVFactoryImpl:org.apache.xerces.util.SymbolHash getBuiltInTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar$BuiltinSchemaGrammar:void <init>(int,short)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar[] retrieveInitialGrammarSet(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean isExistingGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean existingGrammars(java.util.Vector)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean canAddComponent(org.apache.xerces.xs.XSObject,org.apache.xerces.impl.xs.XSDDescription)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGrammars(java.util.Vector)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar getSchemaGrammar(org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.validation.ReadOnlyGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:org.apache.xerces.xni.grammars.Grammar retrieveGrammar(org.apache.xerces.xni.grammars.XMLGrammarDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGrammarComponents(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGrammars(java.util.Vector)"
        ]
    },
    "org.apache.xerces.impl.xs.util.XSGrammarPool:org.apache.xerces.xs.XSModel toXSModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean substitutionGroupOK(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl getMatchingElemDecl(org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean inSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup[] getSubGroupB(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup[] getSubGroupB(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler$OneSubGroup)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void updateImportListWith(org.apache.xerces.impl.xs.SchemaGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar createGrammarFrom(org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void addGrammars(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.impl.xs.XSGrammarBucket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(org.apache.xerces.impl.xs.util.XSInputSource,org.apache.xerces.impl.xs.XSDDescription)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.util.XMLGrammarPoolImpl:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.dom.PSVIElementNSImpl:void setPSVI(org.apache.xerces.xs.ElementPSVI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:int getNodeNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:int getNodeNumber()",
            "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void setUserData(org.apache.xerces.dom.NodeImpl,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:void setUserData(java.lang.Object)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDocumentImpl:java.lang.Object getUserData(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:java.lang.Object getUserData()"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:java.lang.Object getUserData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.NodeImpl:java.util.Hashtable getUserDataRecord()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:void callUserDataHandlers(org.w3c.dom.Node,org.w3c.dom.Node,short)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,java.util.Hashtable,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void storeKeyRef(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.XSElementDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,java.util.Hashtable,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.dom.DOMConfigurationImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void normalizeDocument()"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void setup(javax.xml.stream.Location,javax.xml.transform.stax.StAXResult,boolean)",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument()"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:void resetSchemaValidator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderImpl:org.w3c.dom.Document parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void resetSchemaValidator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(org.xml.sax.InputSource)",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.BasicParserConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void reset()",
            "org.apache.xerces.parsers.DTDConfiguration:void reset()",
            "org.apache.xerces.parsers.NonValidatingConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void resetCommon()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void resetXML11()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void resetCommon()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void resetXML11()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetCommon()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetXML11()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.dom.DOMConfigurationImpl:void addComponent(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void initXML11Components()"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent,org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)"
        ]
    },
    "org.apache.xerces.parsers.BasicParserConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.NonValidatingConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.StandardParserConfiguration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11Configuration:void addCommonComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11Configuration:void addXML11Component(org.apache.xerces.xni.parser.XMLComponent)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void addCommonComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void addXML11Component(org.apache.xerces.xni.parser.XMLComponent)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addCommonComponent(org.apache.xerces.xni.parser.XMLComponent)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addXML11Component(org.apache.xerces.xni.parser.XMLComponent)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void setFeatureDefaults(org.apache.xerces.xni.parser.XMLComponent,java.lang.String[],org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent,org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void setPropertyDefaults(org.apache.xerces.xni.parser.XMLComponent,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void addRecognizedParamsAndSetDefaults(org.apache.xerces.xni.parser.XMLComponent,org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.AbstractXMLSchema:javax.xml.validation.ValidatorHandler newValidatorHandler()"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorImpl:void <init>(org.apache.xerces.jaxp.validation.XSGrammarPoolContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.AbstractXMLSchema:javax.xml.validation.Validator newValidator()"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:javax.xml.parsers.DocumentBuilder newDocumentBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void setupDOMResultHandler(javax.xml.transform.dom.DOMSource,javax.xml.transform.dom.DOMResult)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:boolean getFeature(java.lang.String)",
            "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:void setFeature(java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserFactoryImpl:javax.xml.parsers.SAXParser newSAXParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserFactoryImpl:org.apache.xerces.jaxp.SAXParserImpl newSAXParserImpl()"
        ]
    },
    "org.apache.xerces.parsers.DTDConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeParserConfiguration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XPointerParserConfiguration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XPointerParserConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void returnSchemaAttrs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.PSVIDocumentImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void cloneNode(org.apache.xerces.dom.CoreDocumentImpl,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void callUserDataHandlers(org.w3c.dom.Node,org.w3c.dom.Node,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.PSVIDocumentImpl:org.w3c.dom.Node cloneNode(boolean)"
        ]
    },
    "org.apache.xerces.dom.NodeIteratorImpl:void detach()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DocumentImpl:void removeStaleIteratorReferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.traversal.NodeIterator createNodeIterator(org.w3c.dom.Node,int,org.w3c.dom.traversal.NodeFilter,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void removeNodeIterator(org.w3c.dom.traversal.NodeIterator)",
            "org.apache.xerces.dom.DocumentImpl:void notifyIteratorsRemovingNode(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void removeStaleRangeReferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.ranges.Range createRange()",
            "org.apache.xerces.dom.DocumentImpl:void removeRange(org.w3c.dom.ranges.Range)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesReplacedText(org.apache.xerces.dom.CharacterDataImpl)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesDeletedText(org.apache.xerces.dom.CharacterDataImpl,int,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedText(org.apache.xerces.dom.CharacterDataImpl,int,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesSplitData(org.w3c.dom.Node,org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedNode(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesRemovingNode(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void detach()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DocumentImpl:void replacedText(org.apache.xerces.dom.CharacterDataImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void setNodeValue(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void deletedText(org.apache.xerces.dom.CharacterDataImpl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void internalDeleteData(int,int,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void insertedText(org.apache.xerces.dom.CharacterDataImpl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void internalInsertData(int,java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void splitData(org.w3c.dom.Node,org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void signalSplitData(org.w3c.dom.Node,org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void insertedNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void removingNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node,boolean)"
        ]
    },
    "org.apache.xerces.impl.validation.ConfigurableValidationState:java.lang.String checkIDRefID()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillDeclaredPrefixes(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void fillDeclaredPrefixes(javax.xml.stream.events.EndElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void reset(org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void reset()",
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.jaxp.validation.XMLSchemaValidatorComponentManager:void reset()",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void resetSchemaValidator()",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void resetSchemaValidator()",
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void resetCommon()",
            "org.apache.xerces.parsers.XML11Configuration:void resetXML11()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetXML11()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetXML11()"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillDeclaredPrefixes(javax.xml.stream.events.StartElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void fillDeclaredPrefixes(javax.xml.stream.events.EndElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.stax.events.EndElementImpl:void <init>(javax.xml.namespace.QName,java.util.Iterator,javax.xml.stream.Location)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.EndElement createEndElement(javax.xml.namespace.QName,java.util.Iterator)"
        ]
    },
    "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator)",
            "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext)"
        ]
    },
    "org.apache.xerces.stax.events.XMLEventImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)",
            "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()",
            "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)"
        ]
    },
    "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)",
            "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()",
            "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.String getLexicalFacetValue(short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getMultiValueFacets()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.StringList getLexicalEnumeration()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.XSObjectList getFacets()"
        ]
    },
    "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeUseImpl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.xs.XSAttributeDecl:java.lang.String getConstraintValue()",
            "org.apache.xerces.impl.xs.XSAttributeGroupDecl:java.lang.Object[] validRestrictionOf(java.lang.String,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XSAttributeUseImpl:java.lang.String getConstraintValue()",
            "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition,java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.xs.XSConstraints:void checkNameAndTypeOK(org.apache.xerces.impl.xs.XSElementDecl,int,int,org.apache.xerces.impl.xs.XSElementDecl,int,int)",
            "org.apache.xerces.impl.xs.XSElementDecl:java.lang.String getConstraintValue()"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)",
            "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()",
            "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)"
        ]
    },
    "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.Object)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.Object)"
        ]
    },
    "org.apache.xerces.util.AugmentationsImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)",
            "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()",
            "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeTextReader:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)",
            "org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets1(org.apache.xerces.impl.dv.XSFacets,short,short,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.BaseSchemaDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl)",
            "org.apache.xerces.impl.dv.xs.FullDVFactory:void createBuiltInTypes(org.apache.xerces.util.SymbolHash)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object validate(java.lang.Object[],java.lang.String,java.lang.String,int,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeUseImpl)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.xs.XSConstraints:java.lang.Object ElementDefaultValidImmediate(org.apache.xerces.xs.XSTypeDefinition,java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:void checkDefaultValid(org.apache.xerces.impl.xs.XSAttributeUseImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.impl.dv.ValidatedInfo getActualEnumValue(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.dv.ValidationContext)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.Object)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.Object)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.Object)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void validate(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,short,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.impl.dv.ValidatedInfo validateWithInfo(java.lang.String,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object validate(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:void validate(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:java.lang.String saveXML(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,short,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.parsers.XMLParser:void parse(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void parse(java.lang.String)",
            "org.apache.xerces.parsers.AbstractSAXParser:void parse(org.xml.sax.InputSource)",
            "org.apache.xerces.parsers.DOMParser:void parse(java.lang.String)",
            "org.apache.xerces.parsers.DOMParser:void parse(org.xml.sax.InputSource)",
            "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parseURI(java.lang.String)",
            "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void validateAnnotations(java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.xni.grammars.Grammar parseGrammar(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XML11EntityScanner:int peekChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:int scanChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DTDScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:int skipInvalidEnumerationValue()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:int scanContent(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:int scanLiteral(int,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean scanData(java.lang.String,org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean skipChar(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean skipSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11EntityScanner:boolean skipString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanForDoctypeHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:int peekChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:int scanChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DTDScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:int skipInvalidEnumerationValue()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:int scanContent(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:int scanLiteral(int,org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean scanData(java.lang.String,org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean skipChar(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean skipSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanStartElementName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean skipDeclSpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:boolean skipString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanForDoctypeHook()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument()",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:void startDocumentParsing(org.apache.xerces.impl.XMLEntityHandler,short)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void reset()",
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reset(org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void resetSchemaValidator()",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void resetSchemaValidator()",
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void resetCommon()",
            "org.apache.xerces.parsers.XML11Configuration:void resetXML11()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetXML11()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetXML11()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean isExistingGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean existingGrammars(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(org.apache.xerces.impl.xs.util.XSInputSource,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGrammars(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(org.apache.xerces.impl.xs.util.XSInputSource,org.apache.xerces.impl.xs.XSDDescription)"
        ]
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:boolean inSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.SubstitutionGroupHandler:org.apache.xerces.impl.xs.XSElementDecl[] getSubstitutionGroup(org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void checkElementDeclsConsistent(org.apache.xerces.impl.xs.XSComplexTypeDecl,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.util.SymbolHash,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean particleValidRestriction(org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.XSParticleDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler,boolean)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSWildcardDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.util.SymbolHash buildSubGroups_Org()",
            "org.apache.xerces.impl.xs.XSModelImpl:org.apache.xerces.util.SymbolHash buildSubGroups()"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.grammars.Grammar loadGrammar(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory$XMLGrammarPoolWrapper:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$ShadowedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.CachingParserPool$SynchronizedGrammarPool:void cacheGrammars(java.lang.String,org.apache.xerces.xni.grammars.Grammar[])",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.xs.SchemaGrammar parseXMLSchema(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:org.apache.xerces.impl.dtd.DTDGrammar parseDTD(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:void setAbstractSchema(org.apache.xerces.dom3.as.ASModel)",
            "org.apache.xerces.parsers.DOMASBuilderImpl:void initGrammarPool(org.apache.xerces.dom.ASModelImpl,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractXMLDocumentParser:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentTypeImpl:int getNodeNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.NodeImpl:void setUserData(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.NodeImpl:java.lang.Object getUserData()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void storeKeyRef(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.XSElementDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper:void setup(javax.xml.stream.Location,javax.xml.transform.stax.StAXResult,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderImpl:org.w3c.dom.Document parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.SAXInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToSAX(org.xml.sax.ContentHandler)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.SAXParserImpl:void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)",
            "org.apache.xerces.jaxp.SAXParserImpl:void parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void reset()",
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.dom.DOMConfigurationImpl:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void <init>()",
            "org.apache.xerces.dom.DOMConfigurationImpl:void <init>(org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>()",
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void initXML11Components()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:void <init>()",
            "org.apache.xerces.parsers.DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.StandardParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>()",
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.NonValidatingConfiguration:void <init>()",
            "org.apache.xerces.parsers.NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.NonValidatingConfiguration:void reset()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void addCommonComponent(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configurePipeline()",
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.XML11Configuration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void configurePipeline()",
            "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void addXML11Component(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11Configuration:void initXML11Components()"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void addCommonComponent(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void addXML11Component(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void initXML11Components()"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addComponent(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void configurePipeline()"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addCommonComponent(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void addXML11Component(org.apache.xerces.xni.parser.XMLComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void configureXML11Pipeline()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void initXML11Components()"
        ]
    },
    "org.apache.xerces.jaxp.validation.AbstractXMLSchema:javax.xml.validation.ValidatorHandler newValidatorHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void <init>(org.apache.xerces.jaxp.DocumentBuilderFactoryImpl,java.util.Hashtable,java.util.Hashtable,boolean)",
            "org.apache.xerces.jaxp.SAXParserImpl:void <init>(org.apache.xerces.jaxp.SAXParserFactoryImpl,java.util.Hashtable,boolean)"
        ]
    },
    "org.apache.xerces.jaxp.validation.AbstractXMLSchema:javax.xml.validation.Validator newValidator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void setupDOMResultHandler(javax.xml.transform.dom.DOMSource,javax.xml.transform.dom.DOMResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:boolean getFeature(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.DocumentBuilderFactoryImpl:void setFeature(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserFactoryImpl:org.apache.xerces.jaxp.SAXParserImpl newSAXParserImpl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserFactoryImpl:void setFeature(java.lang.String,boolean)",
            "org.apache.xerces.jaxp.SAXParserFactoryImpl:boolean getFeature(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.AttributeMap:void reconcileDefaults(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node removeItem(org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItem(java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void moveSpecifiedAttributes(org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.AttributeMap:void reconcileDefaults(org.apache.xerces.dom.NamedNodeMapImpl)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node removeNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node safeRemoveNamedItemNS(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:void <init>(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.AttributeMap:org.apache.xerces.dom.NamedNodeMapImpl cloneMap(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.AttributeMap:void reconcileDefaults(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.apache.xerces.dom.NamedNodeMapImpl cloneMap(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.EntityReferenceImpl:java.lang.String getEntityRefValue()",
            "org.apache.xerces.dom.EntityReferenceImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:boolean hasChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getFirstChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getLastChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:int nodeListGetLength()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node nodeListItem(int)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodesUnoptimized()",
            "org.apache.xerces.dom.ParentNode:void normalize()",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NamedNodeMapImpl:org.apache.xerces.dom.NamedNodeMapImpl cloneMap(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ElementDefinitionImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.EntityImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.EntityReferenceImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void surroundContents(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseSameContainer(int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonEndContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonAncestors(org.w3c.dom.Node,org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:boolean writeAnnotation(java.lang.Object,short)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ChildNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.traversal.NodeIterator createNodeIterator(org.w3c.dom.Node,int,org.w3c.dom.traversal.NodeFilter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.traversal.NodeIterator createNodeIterator(org.w3c.dom.Node,short,org.w3c.dom.traversal.NodeFilter)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.ranges.Range createRange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.ranges.Range cloneRange()"
        ]
    },
    "org.apache.xerces.dom.CharacterDataImpl:void setNodeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void appendData(java.lang.String)",
            "org.apache.xerces.dom.CharacterDataImpl:void setData(java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:void setTextContent(java.lang.String)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text splitText(int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CharacterDataImpl:void internalDeleteData(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void deleteData(int,int)",
            "org.apache.xerces.dom.CharacterDataImpl:void replaceData(int,int,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.CharacterDataImpl:void internalInsertData(int,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void insertData(int,java.lang.String)",
            "org.apache.xerces.dom.CharacterDataImpl:void replaceData(int,int,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void signalSplitData(org.w3c.dom.Node,org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setValue(java.lang.String)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setValue(java.lang.String)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startDocumentEntity(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void loadGrammarWithContext(org.apache.xerces.impl.dtd.XMLDTDValidator,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void startDTDEntity(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11DTDProcessor:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void reset(org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMConfigurationImpl:void reset()",
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:void resetSchemaValidator()",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void resetSchemaValidator()",
            "org.apache.xerces.parsers.BasicParserConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void reset()",
            "org.apache.xerces.parsers.XML11Configuration:void resetCommon()",
            "org.apache.xerces.parsers.XML11Configuration:void resetXML11()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void resetXML11()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void reset()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetCommon()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void resetXML11()"
        ]
    },
    "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.EndElement createEndElement(javax.xml.namespace.QName,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)"
        ]
    },
    "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(javax.xml.namespace.QName,java.util.Iterator,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator)"
        ]
    },
    "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator,javax.xml.namespace.NamespaceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXEventResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.String getLexicalFacetValue(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:java.lang.String getLexicalFacetValue(short)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getMultiValueFacets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.XSObjectList getMultiValueFacets()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.StringList getLexicalEnumeration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.StringList getLexicalEnumeration()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.XSObjectList getFacets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.XSObjectList getFacets()"
        ]
    },
    "org.apache.xerces.impl.xs.XSAttributeDecl:java.lang.String getConstraintValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.PSVIAttrNSImpl:java.lang.String getSchemaDefault()",
            "org.apache.xerces.impl.xs.AttributePSVImpl:java.lang.String getSchemaDefault()"
        ]
    },
    "org.apache.xerces.impl.xs.XSAttributeUseImpl:java.lang.String getConstraintValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSElementDecl:java.lang.String getConstraintValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.PSVIElementNSImpl:java.lang.String getSchemaDefault()",
            "org.apache.xerces.impl.xs.ElementPSVImpl:java.lang.String getSchemaDefault()"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.dv.ValidationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:void applyFacets(org.apache.xerces.impl.dv.XSFacets,short,short,org.apache.xerces.impl.dv.ValidationContext)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:void validate(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:void validate(org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,short,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(java.lang.String)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.SAXInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToSAX(org.xml.sax.ContentHandler)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser:void parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMParser:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMParser:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)",
            "org.apache.xerces.jaxp.DocumentBuilderImpl:org.w3c.dom.Document parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parseURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11DTDScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:int skipInvalidEnumerationValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:boolean scanForDoctypeHook()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLVersionDetector:void startDocumentParsing(org.apache.xerces.impl.XMLEntityHandler,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.XSAllCM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(java.lang.Object,java.lang.Object,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.XSWildcardDecl,org.apache.xerces.impl.xs.SubstitutionGroupHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:boolean overlapUPA(java.lang.Object,java.lang.Object,org.apache.xerces.impl.xs.SubstitutionGroupHandler)"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void setAbstractSchema(org.apache.xerces.dom3.as.ASModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.SAXInputSource,boolean,short,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToSAX(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:boolean writeAnnotation(java.lang.Object,short)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.SAXParserImpl:void parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DOMConfigurationImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void normalizeDocument()",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.DOMConfiguration getDomConfig()"
        ]
    },
    "org.apache.xerces.dom.DOMConfigurationImpl:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void <init>()"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.SchemaParsingConfig:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DTDConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.StandardParserConfiguration:void <init>()",
            "org.apache.xerces.parsers.StandardParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.StandardParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.IntegratedParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XML11Configuration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.XML11Configuration:void <init>()",
            "org.apache.xerces.parsers.XML11Configuration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.XML11Configuration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>()",
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>()",
            "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void initXML11Components()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void initXML11Components()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11DTDConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>()",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void configurePipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void configureXML11Pipeline()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void initXML11Components()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.jaxp.SAXParserFactoryImpl:void setFeature(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.SAXParserFactoryImpl:boolean getFeature(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.AttributeMap:void reconcileDefaults(org.apache.xerces.dom.NamedNodeMapImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:void reconcileDefaultAttributes()"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node removeItem(org.w3c.dom.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItem(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node removeNamedItem(java.lang.String)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node safeRemoveNamedItem(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:void moveSpecifiedAttributes(org.apache.xerces.dom.AttributeMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:void moveSpecifiedAttributes(org.apache.xerces.dom.ElementImpl)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node removeNamedItemNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node safeRemoveNamedItemNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:void removeAttributeNS(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:void <init>(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.NamedNodeMapImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.apache.xerces.dom.NamedNodeMapImpl cloneMap(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.NamedNodeMap getAttributes()",
            "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:int setXercesAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:void moveSpecifiedAttributes(org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.ElementImpl:void setupDefaultAttributes()"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.apache.xerces.dom.NamedNodeMapImpl cloneMap(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ElementDefinitionImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Node cloneNode(boolean)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:org.apache.xerces.dom.NamedNodeMapImpl cloneMap(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ElementDefinitionImpl:org.w3c.dom.Node cloneNode(boolean)"
        ]
    },
    "org.apache.xerces.dom.EntityReferenceImpl:java.lang.String getEntityRefValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:java.lang.String getValue()",
            "org.apache.xerces.dom.EntityReferenceImpl:java.lang.String getEntityRefValue()"
        ]
    },
    "org.apache.xerces.dom.EntityReferenceImpl:void setReadOnly(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DeferredEntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.EntityReferenceImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.EntityReferenceImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void setHidden(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void setVisible(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DocumentTypeImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ElementImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:boolean hasChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.NameNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node previousNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getFirstChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getLastChild(org.w3c.dom.Node)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.TextSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getFirstChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLCollectionImpl:int getLength(org.w3c.dom.Element)",
            "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node item(org.w3c.dom.Element,org.apache.html.dom.CollectionIndex)",
            "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node namedItem(org.w3c.dom.Element,java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getDocumentElement()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getHead()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getBody()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)",
            "org.apache.html.dom.HTMLOptionElementImpl:java.lang.String getText()",
            "org.apache.html.dom.HTMLOptionElementImpl:void setText(java.lang.String)",
            "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getText()",
            "org.apache.html.dom.HTMLScriptElementImpl:void setText(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:int getCellIndex()",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setCellIndex(int)",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableCaptionElement getCaption()",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableSectionElement getTHead()",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableSectionElement getTFoot()",
            "org.apache.html.dom.HTMLTableElementImpl:void insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)",
            "org.apache.html.dom.HTMLTableElementImpl:void deleteRow(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setCells(org.w3c.dom.html.HTMLCollection)",
            "org.apache.html.dom.HTMLTableRowElementImpl:org.w3c.dom.html.HTMLElement insertCell(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void deleteCell(int)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:int insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:int deleteRowX(int)",
            "org.apache.html.dom.HTMLTitleElementImpl:java.lang.String getText()",
            "org.apache.html.dom.HTMLTitleElementImpl:void setText(java.lang.String)",
            "org.apache.html.dom.NameNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void expandEntityRef(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DocumentImpl:void dispatchEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)",
            "org.apache.xerces.dom.DocumentImpl:void dispatchingEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getFirstElementChild()",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getFirstElementChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NodeImpl:short compareTreePosition(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:java.lang.String getTextContent()",
            "org.apache.xerces.dom.ParentNode:void getTextContent(java.lang.StringBuffer)",
            "org.apache.xerces.dom.ParentNode:void setTextContent(java.lang.String)",
            "org.apache.xerces.dom.ParentNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void selectNodeContents(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:java.lang.String toString()",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.RangeImpl:int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node getSelectedNode(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.TextImpl:boolean getWholeTextForward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node)",
            "org.apache.xerces.dom.TextImpl:boolean canModifyNext(org.w3c.dom.Node)",
            "org.apache.xerces.dom.TextImpl:boolean hasTextOnlyChildren(org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getFirstChild(org.w3c.dom.Node)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(org.w3c.dom.Node)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstVisibleChildElement(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstVisibleChildElement(org.w3c.dom.Node,java.util.Hashtable)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String[])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String[][])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getChildText(org.w3c.dom.Node)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:void prepareForSerialization(org.apache.xml.serialize.XMLSerializer,org.w3c.dom.Node)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.OutputFormat:java.lang.String whichMethod(org.w3c.dom.Document)",
            "org.apache.xml.serialize.TextSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.TextSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getLastChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:void synchronizeData()",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getLastElementChild()",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getLastElementChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node previousNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.TextImpl:boolean getWholeTextBackward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node)",
            "org.apache.xerces.dom.TextImpl:boolean canModifyPrev(org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getLastChild(org.w3c.dom.Node)",
            "org.apache.xerces.parsers.AbstractDOMParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void setCharacterData(boolean)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastVisibleChildElement(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastVisibleChildElement(org.w3c.dom.Node,java.util.Hashtable)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String[])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElementNS(org.w3c.dom.Node,java.lang.String[][])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:int nodeListGetLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode:int getLength()",
            "org.apache.xerces.dom.ParentNode:int access$000(org.apache.xerces.dom.ParentNode)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node nodeListItem(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node item(int)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node access$100(org.apache.xerces.dom.ParentNode,int)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodesUnoptimized()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLFormElementImpl:org.w3c.dom.NodeList getChildNodes()",
            "org.apache.html.dom.HTMLSelectElementImpl:org.w3c.dom.NodeList getChildNodes()"
        ]
    },
    "org.apache.xerces.dom.ParentNode:void normalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentFragmentImpl:void normalize()",
            "org.apache.xerces.dom.ElementImpl:void normalize()",
            "org.apache.xerces.dom.ParentNode:void normalize()"
        ]
    },
    "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DeferredEntityImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.DocumentTypeImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.EntityImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.EntityReferenceImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void setHidden(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void setVisible(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ElementDefinitionImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLFormElementImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.html.dom.HTMLMapElementImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.html.dom.HTMLSelectElementImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.html.dom.HTMLTableRowElementImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.EntityImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.EntityReferenceImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void surroundContents(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseSameContainer(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseContents(int)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseContents(int)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonEndContainer(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseContents(int)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonAncestors(org.w3c.dom.Node,org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseContents(int)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseNode(org.w3c.dom.Node,boolean,boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseLeftBoundary(org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void endEntity()"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XSAnnotationImpl:boolean writeAnnotation(java.lang.Object,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ChildNode:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:org.w3c.dom.traversal.NodeIterator createNodeIterator(org.w3c.dom.Node,short,org.w3c.dom.traversal.NodeFilter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.ranges.Range cloneRange()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CharacterDataImpl:void appendData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void normalize()",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DocumentFragmentImpl:void normalize()",
            "org.apache.xerces.dom.ElementImpl:void normalize()",
            "org.apache.xerces.parsers.AbstractDOMParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CharacterDataImpl:void setData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.parsers.AbstractDOMParser:void setCharacterData(boolean)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:void setTextContent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text splitText(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CharacterDataImpl:void deleteData(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void deleteData(org.w3c.dom.CharacterData,int,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseSameContainer(int)"
        ]
    },
    "org.apache.xerces.dom.CharacterDataImpl:void replaceData(int,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CharacterDataImpl:void insertData(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void insertData(org.w3c.dom.CharacterData,int,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setNodeValue(java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:void setValue(int,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:java.lang.String normalizeAttributeValue(java.lang.String,org.w3c.dom.Attr)",
            "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getHead()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getBody()",
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setCellIndex(int)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void expandEntityRef(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text splitText(int)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getHead()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getBody()",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:void setText(java.lang.String)",
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLScriptElementImpl:void setText(java.lang.String)",
            "org.apache.html.dom.HTMLSelectElementImpl:void add(org.w3c.dom.html.HTMLElement,org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setCellIndex(int)",
            "org.apache.html.dom.HTMLTableElementImpl:void insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)",
            "org.apache.html.dom.HTMLTableRowElementImpl:org.w3c.dom.html.HTMLElement insertCell(int)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:int insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)",
            "org.apache.html.dom.HTMLTitleElementImpl:void setText(java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void expandEntityRef(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.DeferredDocumentTypeImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text splitText(int)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:void remove(int)",
            "org.apache.xerces.dom.AttrImpl:void normalize()",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node removeChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.parsers.AbstractDOMParser:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void setCharacterData(boolean)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLOptionElementImpl:void setText(java.lang.String)",
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLScriptElementImpl:void setText(java.lang.String)",
            "org.apache.html.dom.HTMLSelectElementImpl:void remove(int)",
            "org.apache.html.dom.HTMLTableElementImpl:void deleteCaption()",
            "org.apache.html.dom.HTMLTableElementImpl:void deleteTHead()",
            "org.apache.html.dom.HTMLTableElementImpl:void deleteTFoot()",
            "org.apache.html.dom.HTMLTableElementImpl:void deleteRow(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setCells(org.w3c.dom.html.HTMLCollection)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void deleteCell(int)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:int deleteRowX(int)",
            "org.apache.html.dom.HTMLTitleElementImpl:void setText(java.lang.String)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node removeChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DocumentFragmentImpl:void normalize()",
            "org.apache.xerces.dom.ElementImpl:void normalize()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:void setTextContent(java.lang.String)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node removeChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.parsers.AbstractDOMParser:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void setCharacterData(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:void setInputSource(org.apache.xerces.xni.parser.XMLInputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DTDConfiguration:boolean parse(boolean)",
            "org.apache.xerces.parsers.NonValidatingConfiguration:boolean parse(boolean)"
        ]
    },
    "org.apache.xerces.impl.dtd.XML11DTDProcessor:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.xni.parser.XMLEntityResolver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11DTDProcessor:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.EndElement createEndElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXEventResultBuilder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.stax.XMLEventFactoryImpl:javax.xml.stream.events.StartElement createStartElement(java.lang.String,java.lang.String,java.lang.String,java.util.Iterator,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.validation.StAXEventResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.StAXEventResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.XSObjectList getMultiValueFacets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDelegate:org.apache.xerces.xs.XSObjectList getMultiValueFacets()"
        ]
    },
    "org.apache.xerces.dom.PSVIAttrNSImpl:java.lang.String getSchemaDefault()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.AttributePSVImpl:java.lang.String getSchemaDefault()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.PSVIElementNSImpl:java.lang.String getSchemaDefault()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.ElementPSVImpl:java.lang.String getSchemaDefault()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.DOMConfiguration getDomConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.PSVIDocumentImpl:org.w3c.dom.DOMConfiguration getDomConfig()"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void <init>(org.apache.xerces.impl.xs.XSGrammarBucket)"
        ]
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.StandardParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.SecurityConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.SoftReferenceSymbolTableConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)",
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void <init>()",
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void createAnnotationValidator()",
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:org.apache.xerces.xni.parser.XMLParserConfiguration initialize()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.parsers.DOMParser getDOMParser()",
            "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.parsers.SAXParser getSAXParser()"
        ]
    },
    "org.apache.xerces.parsers.XML11Configuration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XIncludeParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XPointerParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XML11DTDConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XML11NonValidatingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementImpl:void reconcileDefaultAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:void rename(java.lang.String)",
            "org.apache.xerces.dom.ElementNSImpl:void rename(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node removeNamedItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node safeRemoveNamedItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:void removeAttribute(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void moveSpecifiedAttributes(org.apache.xerces.dom.ElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void removeAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.NamedNodeMap getAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DeferredElementImpl:void synchronizeData()",
            "org.apache.xerces.dom.DeferredElementNSImpl:void synchronizeData()",
            "org.apache.xerces.dom.DocumentImpl:void dispatchEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)",
            "org.apache.xerces.dom.DocumentImpl:void dispatchingEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Attr[] getAttrs(org.w3c.dom.Element)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLAnchorElementImpl:void setAccessKey(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setCharset(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setCoords(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setHref(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setHreflang(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setRel(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setRev(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setShape(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setTabIndex(int)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setTarget(java.lang.String)",
            "org.apache.html.dom.HTMLAnchorElementImpl:void setType(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setAlt(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setArchive(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setCode(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setCodeBase(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setHeight(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setHspace(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setObject(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setVspace(java.lang.String)",
            "org.apache.html.dom.HTMLAppletElementImpl:void setWidth(java.lang.String)",
            "org.apache.html.dom.HTMLAreaElementImpl:void setAccessKey(java.lang.String)",
            "org.apache.html.dom.HTMLAreaElementImpl:void setAlt(java.lang.String)",
            "org.apache.html.dom.HTMLAreaElementImpl:void setCoords(java.lang.String)",
            "org.apache.html.dom.HTMLAreaElementImpl:void setHref(java.lang.String)",
            "org.apache.html.dom.HTMLAreaElementImpl:void setShape(java.lang.String)",
            "org.apache.html.dom.HTMLAreaElementImpl:void setTabIndex(int)",
            "org.apache.html.dom.HTMLAreaElementImpl:void setTarget(java.lang.String)",
            "org.apache.html.dom.HTMLBRElementImpl:void setClear(java.lang.String)",
            "org.apache.html.dom.HTMLBaseElementImpl:void setHref(java.lang.String)",
            "org.apache.html.dom.HTMLBaseElementImpl:void setTarget(java.lang.String)",
            "org.apache.html.dom.HTMLBaseFontElementImpl:void setColor(java.lang.String)",
            "org.apache.html.dom.HTMLBaseFontElementImpl:void setFace(java.lang.String)",
            "org.apache.html.dom.HTMLBaseFontElementImpl:void setSize(java.lang.String)",
            "org.apache.html.dom.HTMLBodyElementImpl:void setALink(java.lang.String)",
            "org.apache.html.dom.HTMLBodyElementImpl:void setBackground(java.lang.String)",
            "org.apache.html.dom.HTMLBodyElementImpl:void setBgColor(java.lang.String)",
            "org.apache.html.dom.HTMLBodyElementImpl:void setLink(java.lang.String)",
            "org.apache.html.dom.HTMLBodyElementImpl:void setText(java.lang.String)",
            "org.apache.html.dom.HTMLBodyElementImpl:void setVLink(java.lang.String)",
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.html.dom.HTMLButtonElementImpl:void setAccessKey(java.lang.String)",
            "org.apache.html.dom.HTMLButtonElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLButtonElementImpl:void setTabIndex(int)",
            "org.apache.html.dom.HTMLButtonElementImpl:void setValue(java.lang.String)",
            "org.apache.html.dom.HTMLDivElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLElementImpl:void setId(java.lang.String)",
            "org.apache.html.dom.HTMLElementImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLElementImpl:void setLang(java.lang.String)",
            "org.apache.html.dom.HTMLElementImpl:void setDir(java.lang.String)",
            "org.apache.html.dom.HTMLElementImpl:void setClassName(java.lang.String)",
            "org.apache.html.dom.HTMLElementImpl:void setAttribute(java.lang.String,boolean)",
            "org.apache.html.dom.HTMLFontElementImpl:void setColor(java.lang.String)",
            "org.apache.html.dom.HTMLFontElementImpl:void setFace(java.lang.String)",
            "org.apache.html.dom.HTMLFontElementImpl:void setSize(java.lang.String)",
            "org.apache.html.dom.HTMLFormElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLFormElementImpl:void setAcceptCharset(java.lang.String)",
            "org.apache.html.dom.HTMLFormElementImpl:void setAction(java.lang.String)",
            "org.apache.html.dom.HTMLFormElementImpl:void setEnctype(java.lang.String)",
            "org.apache.html.dom.HTMLFormElementImpl:void setMethod(java.lang.String)",
            "org.apache.html.dom.HTMLFormElementImpl:void setTarget(java.lang.String)",
            "org.apache.html.dom.HTMLFrameElementImpl:void setFrameBorder(java.lang.String)",
            "org.apache.html.dom.HTMLFrameElementImpl:void setLongDesc(java.lang.String)",
            "org.apache.html.dom.HTMLFrameElementImpl:void setMarginHeight(java.lang.String)",
            "org.apache.html.dom.HTMLFrameElementImpl:void setMarginWidth(java.lang.String)",
            "org.apache.html.dom.HTMLFrameElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLFrameElementImpl:void setScrolling(java.lang.String)",
            "org.apache.html.dom.HTMLFrameElementImpl:void setSrc(java.lang.String)",
            "org.apache.html.dom.HTMLFrameSetElementImpl:void setCols(java.lang.String)",
            "org.apache.html.dom.HTMLFrameSetElementImpl:void setRows(java.lang.String)",
            "org.apache.html.dom.HTMLHRElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLHRElementImpl:void setSize(java.lang.String)",
            "org.apache.html.dom.HTMLHRElementImpl:void setWidth(java.lang.String)",
            "org.apache.html.dom.HTMLHeadElementImpl:void setProfile(java.lang.String)",
            "org.apache.html.dom.HTMLHeadingElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLHtmlElementImpl:void setVersion(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setFrameBorder(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setHeight(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setLongDesc(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setMarginHeight(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setMarginWidth(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setScrolling(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setSrc(java.lang.String)",
            "org.apache.html.dom.HTMLIFrameElementImpl:void setWidth(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setLowSrc(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setSrc(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setAlt(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setBorder(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setHeight(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setHspace(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setLongDesc(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setUseMap(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setVspace(java.lang.String)",
            "org.apache.html.dom.HTMLImageElementImpl:void setWidth(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setDefaultValue(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setAccept(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setAccessKey(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setAlt(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setMaxLength(int)",
            "org.apache.html.dom.HTMLInputElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setSize(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setSrc(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setTabIndex(int)",
            "org.apache.html.dom.HTMLInputElementImpl:void setUseMap(java.lang.String)",
            "org.apache.html.dom.HTMLInputElementImpl:void setValue(java.lang.String)",
            "org.apache.html.dom.HTMLIsIndexElementImpl:void setPrompt(java.lang.String)",
            "org.apache.html.dom.HTMLLIElementImpl:void setType(java.lang.String)",
            "org.apache.html.dom.HTMLLIElementImpl:void setValue(int)",
            "org.apache.html.dom.HTMLLabelElementImpl:void setAccessKey(java.lang.String)",
            "org.apache.html.dom.HTMLLabelElementImpl:void setHtmlFor(java.lang.String)",
            "org.apache.html.dom.HTMLLegendElementImpl:void setAccessKey(java.lang.String)",
            "org.apache.html.dom.HTMLLegendElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setCharset(java.lang.String)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setHref(java.lang.String)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setHreflang(java.lang.String)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setMedia(java.lang.String)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setRel(java.lang.String)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setRev(java.lang.String)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setTarget(java.lang.String)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setType(java.lang.String)",
            "org.apache.html.dom.HTMLMapElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLMetaElementImpl:void setContent(java.lang.String)",
            "org.apache.html.dom.HTMLMetaElementImpl:void setHttpEquiv(java.lang.String)",
            "org.apache.html.dom.HTMLMetaElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLMetaElementImpl:void setScheme(java.lang.String)",
            "org.apache.html.dom.HTMLModElementImpl:void setCite(java.lang.String)",
            "org.apache.html.dom.HTMLModElementImpl:void setDateTime(java.lang.String)",
            "org.apache.html.dom.HTMLOListElementImpl:void setStart(int)",
            "org.apache.html.dom.HTMLOListElementImpl:void setType(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setCode(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setArchive(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setBorder(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setCodeBase(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setCodeType(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setData(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setHeight(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setHspace(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setStandby(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setTabIndex(int)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setType(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setUseMap(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setVspace(java.lang.String)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setWidth(java.lang.String)",
            "org.apache.html.dom.HTMLOptGroupElementImpl:void setLabel(java.lang.String)",
            "org.apache.html.dom.HTMLOptionElementImpl:void setLabel(java.lang.String)",
            "org.apache.html.dom.HTMLOptionElementImpl:void setValue(java.lang.String)",
            "org.apache.html.dom.HTMLParagraphElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLParamElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLParamElementImpl:void setType(java.lang.String)",
            "org.apache.html.dom.HTMLParamElementImpl:void setValue(java.lang.String)",
            "org.apache.html.dom.HTMLParamElementImpl:void setValueType(java.lang.String)",
            "org.apache.html.dom.HTMLPreElementImpl:void setWidth(int)",
            "org.apache.html.dom.HTMLQuoteElementImpl:void setCite(java.lang.String)",
            "org.apache.html.dom.HTMLScriptElementImpl:void setHtmlFor(java.lang.String)",
            "org.apache.html.dom.HTMLScriptElementImpl:void setEvent(java.lang.String)",
            "org.apache.html.dom.HTMLScriptElementImpl:void setCharset(java.lang.String)",
            "org.apache.html.dom.HTMLScriptElementImpl:void setSrc(java.lang.String)",
            "org.apache.html.dom.HTMLScriptElementImpl:void setType(java.lang.String)",
            "org.apache.html.dom.HTMLSelectElementImpl:void setValue(java.lang.String)",
            "org.apache.html.dom.HTMLSelectElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSize(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:void setTabIndex(int)",
            "org.apache.html.dom.HTMLStyleElementImpl:void setMedia(java.lang.String)",
            "org.apache.html.dom.HTMLStyleElementImpl:void setType(java.lang.String)",
            "org.apache.html.dom.HTMLTableCaptionElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setAbbr(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setAxis(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setBgColor(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setCh(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setChOff(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setColSpan(int)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setHeaders(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setHeight(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setRowSpan(int)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setScope(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setVAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setWidth(java.lang.String)",
            "org.apache.html.dom.HTMLTableColElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableColElementImpl:void setCh(java.lang.String)",
            "org.apache.html.dom.HTMLTableColElementImpl:void setChOff(java.lang.String)",
            "org.apache.html.dom.HTMLTableColElementImpl:void setSpan(int)",
            "org.apache.html.dom.HTMLTableColElementImpl:void setVAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableColElementImpl:void setWidth(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setBgColor(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setBorder(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setCellPadding(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setCellSpacing(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setFrame(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setRules(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setSummary(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:void setWidth(java.lang.String)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setBgColor(java.lang.String)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setCh(java.lang.String)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setChOff(java.lang.String)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setVAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:void setAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:void setCh(java.lang.String)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:void setChOff(java.lang.String)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:void setVAlign(java.lang.String)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setDefaultValue(java.lang.String)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setAccessKey(java.lang.String)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setCols(int)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setName(java.lang.String)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setRows(int)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setTabIndex(int)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setValue(java.lang.String)",
            "org.apache.html.dom.HTMLUListElementImpl:void setType(java.lang.String)",
            "org.apache.wml.dom.WMLAElementImpl:void setHref(java.lang.String)",
            "org.apache.wml.dom.WMLAElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLAElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLAElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLAElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLAccessElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLAccessElementImpl:void setDomain(java.lang.String)",
            "org.apache.wml.dom.WMLAccessElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLAccessElementImpl:void setPath(java.lang.String)",
            "org.apache.wml.dom.WMLAnchorElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLAnchorElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLAnchorElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLAnchorElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLBElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLBElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLBElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLBigElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLBigElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLBigElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLBrElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLBrElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLBrElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLCardElementImpl:void setOnTimer(java.lang.String)",
            "org.apache.wml.dom.WMLCardElementImpl:void setOnEnterBackward(java.lang.String)",
            "org.apache.wml.dom.WMLCardElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLCardElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLCardElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLCardElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLCardElementImpl:void setOnEnterForward(java.lang.String)",
            "org.apache.wml.dom.WMLDoElementImpl:void setOptional(java.lang.String)",
            "org.apache.wml.dom.WMLDoElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLDoElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLDoElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLDoElementImpl:void setLabel(java.lang.String)",
            "org.apache.wml.dom.WMLDoElementImpl:void setType(java.lang.String)",
            "org.apache.wml.dom.WMLDoElementImpl:void setName(java.lang.String)",
            "org.apache.wml.dom.WMLElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLElementImpl:void setAttribute(java.lang.String,boolean)",
            "org.apache.wml.dom.WMLElementImpl:void setAttribute(java.lang.String,int)",
            "org.apache.wml.dom.WMLEmElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLEmElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLEmElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLFieldsetElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLFieldsetElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLFieldsetElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLFieldsetElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLGoElementImpl:void setSendreferer(java.lang.String)",
            "org.apache.wml.dom.WMLGoElementImpl:void setAcceptCharset(java.lang.String)",
            "org.apache.wml.dom.WMLGoElementImpl:void setHref(java.lang.String)",
            "org.apache.wml.dom.WMLGoElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLGoElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLGoElementImpl:void setMethod(java.lang.String)",
            "org.apache.wml.dom.WMLHeadElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLHeadElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLIElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLIElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLIElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setWidth(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setLocalSrc(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setHeight(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setAlign(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setVspace(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setAlt(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setHspace(java.lang.String)",
            "org.apache.wml.dom.WMLImgElementImpl:void setSrc(java.lang.String)",
            "org.apache.wml.dom.WMLInputElementImpl:void setFormat(java.lang.String)",
            "org.apache.wml.dom.WMLInputElementImpl:void setValue(java.lang.String)",
            "org.apache.wml.dom.WMLInputElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLInputElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLInputElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLInputElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLInputElementImpl:void setType(java.lang.String)",
            "org.apache.wml.dom.WMLInputElementImpl:void setName(java.lang.String)",
            "org.apache.wml.dom.WMLMetaElementImpl:void setScheme(java.lang.String)",
            "org.apache.wml.dom.WMLMetaElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLMetaElementImpl:void setHttpEquiv(java.lang.String)",
            "org.apache.wml.dom.WMLMetaElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLMetaElementImpl:void setContent(java.lang.String)",
            "org.apache.wml.dom.WMLMetaElementImpl:void setName(java.lang.String)",
            "org.apache.wml.dom.WMLNoopElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLNoopElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLOneventElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLOneventElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLOneventElementImpl:void setType(java.lang.String)",
            "org.apache.wml.dom.WMLOptgroupElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLOptgroupElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLOptgroupElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLOptgroupElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLOptionElementImpl:void setValue(java.lang.String)",
            "org.apache.wml.dom.WMLOptionElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLOptionElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLOptionElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLOptionElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLOptionElementImpl:void setOnPick(java.lang.String)",
            "org.apache.wml.dom.WMLPElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLPElementImpl:void setMode(java.lang.String)",
            "org.apache.wml.dom.WMLPElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLPElementImpl:void setAlign(java.lang.String)",
            "org.apache.wml.dom.WMLPElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLPostfieldElementImpl:void setValue(java.lang.String)",
            "org.apache.wml.dom.WMLPostfieldElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLPostfieldElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLPostfieldElementImpl:void setName(java.lang.String)",
            "org.apache.wml.dom.WMLPrevElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLPrevElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLRefreshElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLRefreshElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setValue(java.lang.String)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setIValue(java.lang.String)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setIName(java.lang.String)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setName(java.lang.String)",
            "org.apache.wml.dom.WMLSetvarElementImpl:void setValue(java.lang.String)",
            "org.apache.wml.dom.WMLSetvarElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLSetvarElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLSetvarElementImpl:void setName(java.lang.String)",
            "org.apache.wml.dom.WMLSmallElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLSmallElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLSmallElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLStrongElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLStrongElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLStrongElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLTableElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLTableElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLTableElementImpl:void setAlign(java.lang.String)",
            "org.apache.wml.dom.WMLTableElementImpl:void setTitle(java.lang.String)",
            "org.apache.wml.dom.WMLTableElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLTdElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLTdElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLTdElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLTemplateElementImpl:void setOnTimer(java.lang.String)",
            "org.apache.wml.dom.WMLTemplateElementImpl:void setOnEnterBackward(java.lang.String)",
            "org.apache.wml.dom.WMLTemplateElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLTemplateElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLTemplateElementImpl:void setOnEnterForward(java.lang.String)",
            "org.apache.wml.dom.WMLTimerElementImpl:void setValue(java.lang.String)",
            "org.apache.wml.dom.WMLTimerElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLTimerElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLTimerElementImpl:void setName(java.lang.String)",
            "org.apache.wml.dom.WMLTrElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLTrElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLUElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLUElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLUElementImpl:void setId(java.lang.String)",
            "org.apache.wml.dom.WMLWmlElementImpl:void setClassName(java.lang.String)",
            "org.apache.wml.dom.WMLWmlElementImpl:void setXmlLang(java.lang.String)",
            "org.apache.wml.dom.WMLWmlElementImpl:void setId(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,java.util.Hashtable,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void addNamespaceDecl(java.lang.String,java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:int setXercesAttributeNode(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void setupDefaultAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredElementImpl:void synchronizeData()",
            "org.apache.xerces.dom.DeferredElementNSImpl:void synchronizeData()",
            "org.apache.xerces.dom.ElementImpl:void synchronizeData()"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:java.lang.String getNodeValue()",
            "org.apache.xerces.dom.AttrImpl:void setValue(java.lang.String)",
            "org.apache.xerces.dom.AttrImpl:java.lang.String toString()",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNode(org.w3c.dom.Attr,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.impl.xs.opti.ElementImpl:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xerces.impl.xs.opti.ElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void processAttributes(org.w3c.dom.NamedNodeMap)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getValue(org.w3c.dom.Attr)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:void setReadOnly(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void setHidden(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void setVisible(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DeferredEntityReferenceImpl:void synchronizeChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.EntityReferenceImpl:java.lang.String getEntityRefValue()",
            "org.apache.xerces.dom.EntityReferenceImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:boolean hasChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getFirstChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getLastChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:int nodeListGetLength()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node nodeListItem(int)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodesUnoptimized()",
            "org.apache.xerces.dom.ParentNode:void normalize()",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:void setReadOnly(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setReadOnly(boolean,boolean)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:void setHidden(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:void setVisible(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.AttrImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)"
        ]
    },
    "org.apache.xerces.dom.DocumentTypeImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ElementImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)"
        ]
    },
    "org.apache.html.dom.NameNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node item(int)"
        ]
    },
    "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node item(int)"
        ]
    },
    "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node nextNode()",
            "org.apache.xerces.dom.NodeIteratorImpl:void removeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node previousNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node previousNode()",
            "org.apache.xerces.dom.NodeIteratorImpl:void removeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getFirstChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node firstChild()",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node nextNode()",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getNextSibling(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getFirstChild(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getLastChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node lastChild()",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node previousNode()",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getPreviousSibling(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getLastChild(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.TextSerializer:void serializeElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.TextSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void setStart(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:void setEnd(org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.html.dom.HTMLCollectionImpl:int getLength(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLCollectionImpl:int getLength()",
            "org.apache.html.dom.HTMLCollectionImpl:int getLength(org.w3c.dom.Element)"
        ]
    },
    "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node item(org.w3c.dom.Element,org.apache.html.dom.CollectionIndex)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node item(int)",
            "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node item(org.w3c.dom.Element,org.apache.html.dom.CollectionIndex)"
        ]
    },
    "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node namedItem(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node namedItem(java.lang.String)",
            "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node namedItem(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getDocumentElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getHead()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getBody()",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport:void <init>(org.w3c.dom.Element,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getRoot(org.w3c.dom.Document)"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getHead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getBody()",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getBody()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getImages()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getApplets()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getLinks()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getForms()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getAnchors()"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.html.dom.HTMLOptionElementImpl:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:int getCellIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setCellIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableCaptionElement getCaption()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createCaption()",
            "org.apache.html.dom.HTMLTableElementImpl:void deleteCaption()"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableSectionElement getTHead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createTHead()",
            "org.apache.html.dom.HTMLTableElementImpl:void deleteTHead()"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableSectionElement getTFoot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createTFoot()",
            "org.apache.html.dom.HTMLTableElementImpl:void deleteTFoot()"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:void insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement insertRow(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setRowIndex(int)"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:void deleteRow(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void setCells(org.w3c.dom.html.HTMLCollection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:org.w3c.dom.html.HTMLElement insertCell(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableSectionElementImpl:org.w3c.dom.html.HTMLElement insertRow(int)"
        ]
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void deleteCell(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:int insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:void insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setSectionRowIndex(int)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:org.w3c.dom.html.HTMLElement insertRow(int)"
        ]
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:int deleteRowX(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:void deleteRow(int)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:void deleteRow(int)"
        ]
    },
    "org.apache.html.dom.HTMLTitleElementImpl:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()"
        ]
    },
    "org.apache.html.dom.HTMLTitleElementImpl:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void expandEntityRef(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void dispatchEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void mutationEventsInsertedNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void mutationEventsRemovingNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void dispatchingEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void dispatchEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)",
            "org.apache.xerces.dom.DocumentImpl:void dispatchingEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getFirstElementChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:int getChildElementCount()"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getFirstElementChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getFirstElementChild()",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getNextElementSibling()"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:short compareTreePosition(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ParentNode:java.lang.String getTextContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.dom.ParentNode:java.lang.String getTextContent()"
        ]
    },
    "org.apache.xerces.dom.ParentNode:void getTextContent(java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode:java.lang.String getTextContent()",
            "org.apache.xerces.dom.ParentNode:void getTextContent(java.lang.StringBuffer)",
            "org.apache.xerces.dom.TextImpl:boolean getWholeTextForward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:void setTextContent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:boolean isEqualNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void selectNodeContents(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.RangeImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)",
            "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()",
            "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonAncestors(org.w3c.dom.Node,org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node nextNode(org.w3c.dom.Node,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:java.lang.String toString()"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:int indexOf(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:short compareBoundaryPoints(short,org.w3c.dom.ranges.Range)",
            "org.apache.xerces.dom.RangeImpl:void insertedNodeFromDOM(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void removeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonEndContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonAncestors(org.w3c.dom.Node,org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node getSelectedNode(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseSameContainer(int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseLeftBoundary(org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.xerces.dom.TextImpl:boolean getWholeTextForward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TextImpl:java.lang.String getWholeText()",
            "org.apache.xerces.dom.TextImpl:boolean getWholeTextForward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.TextImpl:boolean canModifyNext(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.dom.TextImpl:boolean canModifyNext(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.TextImpl:boolean hasTextOnlyChildren(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.dom.TextImpl:boolean hasTextOnlyChildren(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean nonAnnotationContent(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstVisibleChildElement(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstVisibleChildElement(org.w3c.dom.Node,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String[][])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:java.lang.String getChildText(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.DOMUtil:java.lang.String getChildText(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.DOMSerializerImpl:void prepareForSerialization(org.apache.xml.serialize.XMLSerializer,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.OutputFormat:java.lang.String whichMethod(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.OutputFormat:void <init>(org.w3c.dom.Document)"
        ]
    },
    "org.apache.xml.serialize.TextSerializer:void serializeNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Element)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.DocumentFragment)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.TextSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.TextSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DeferredDocumentImpl:void synchronizeData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:void putIdentifier(java.lang.String,org.w3c.dom.Element)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Element getIdentifier(java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:void removeIdentifier(java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:java.util.Enumeration getIdentifiers()",
            "org.apache.xerces.dom.DeferredDocumentImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.NodeImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.NodeImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NodeImpl:boolean getReadOnly()",
            "org.apache.xerces.dom.NodeImpl:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getLastElementChild()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getLastElementChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getLastElementChild()",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getPreviousElementSibling()"
        ]
    },
    "org.apache.xerces.dom.TextImpl:boolean getWholeTextBackward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TextImpl:java.lang.String getWholeText()",
            "org.apache.xerces.dom.TextImpl:boolean getWholeTextBackward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.TextImpl:boolean canModifyPrev(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.dom.TextImpl:boolean canModifyPrev(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void setCharacterData(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractDOMParser:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastVisibleChildElement(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastVisibleChildElement(org.w3c.dom.Node,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElementNS(org.w3c.dom.Node,java.lang.String[][])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ParentNode:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:int access$000(org.apache.xerces.dom.ParentNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode$1:int getLength()"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()",
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:void remove(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node access$100(org.apache.xerces.dom.ParentNode,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode$1:org.w3c.dom.Node item(int)"
        ]
    },
    "org.apache.html.dom.HTMLFormElementImpl:org.w3c.dom.NodeList getChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLSelectElementImpl:org.w3c.dom.NodeList getChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentFragmentImpl:void normalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentFragmentImpl:void normalize()",
            "org.apache.xerces.dom.ElementImpl:void normalize()",
            "org.apache.xerces.dom.ParentNode:void normalize()"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void normalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentFragmentImpl:void normalize()",
            "org.apache.xerces.dom.ElementImpl:void normalize()",
            "org.apache.xerces.dom.ParentNode:void normalize()"
        ]
    },
    "org.apache.xerces.dom.DeferredEntityImpl:void synchronizeChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:boolean hasChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getFirstChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getLastChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:int nodeListGetLength()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node nodeListItem(int)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodesUnoptimized()",
            "org.apache.xerces.dom.ParentNode:void normalize()",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.DocumentTypeImpl:void setReadOnly(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DeferredDocumentTypeImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.EntityReferenceImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void setHidden(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void setVisible(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void setReadOnly(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.EntityReferenceImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void setHidden(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void setVisible(org.w3c.dom.Node)"
        ]
    },
    "org.apache.html.dom.HTMLFormElementImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLMapElementImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLSelectElementImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:org.w3c.dom.Node cloneNode(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NamedNodeMapImpl:void cloneContent(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traversePartiallySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseContents(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void deleteContents()",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment extractContents()",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment cloneContents()"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseLeftBoundary(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonEndContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonAncestors(org.w3c.dom.Node,org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void endEntity()"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:void normalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.ElementImpl:void normalize()"
        ]
    },
    "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean characterData(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void sendCharactersToValidator(java.lang.String)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void sendCharactersToValidator(java.lang.String)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeTextReader:void parse()",
            "org.apache.xerces.xpointer.XPointerHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void deleteData(org.w3c.dom.CharacterData,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.RangeImpl:void insertData(org.w3c.dom.CharacterData,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.AttrImpl:void setNodeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:void setTextContent(java.lang.String)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:void setValue(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean normalizeAttrValue(org.apache.xerces.xni.XMLAttributes,int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:java.lang.String normalizeAttributeValue(java.lang.String,org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.ElementImpl:void setAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,java.util.Hashtable,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.html.dom.HTMLBuilder:void characters(java.lang.String)",
            "org.apache.html.dom.HTMLBuilder:void characters(char[],int,int)",
            "org.apache.html.dom.HTMLBuilder:void ignorableWhitespace(char[],int,int)",
            "org.apache.html.dom.HTMLBuilder:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getDocumentElement()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getBody()",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setCellIndex(int)",
            "org.apache.html.dom.HTMLTableElementImpl:void setCaption(org.w3c.dom.html.HTMLTableCaptionElement)",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createCaption()",
            "org.apache.html.dom.HTMLTableElementImpl:void setTHead(org.w3c.dom.html.HTMLTableSectionElement)",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createTHead()",
            "org.apache.html.dom.HTMLTableElementImpl:void setTFoot(org.w3c.dom.html.HTMLTableSectionElement)",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createTFoot()",
            "org.apache.html.dom.HTMLTableElementImpl:void insertRowX(int,org.apache.html.dom.HTMLTableRowElementImpl)",
            "org.apache.html.dom.HTMLTableRowElementImpl:void setCells(org.w3c.dom.html.HTMLCollection)",
            "org.apache.html.dom.HTMLTableRowElementImpl:org.w3c.dom.html.HTMLElement insertCell(int)",
            "org.apache.html.dom.HTMLTableSectionElementImpl:org.w3c.dom.html.HTMLElement insertRow(int)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.CoreDOMImplementationImpl:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)",
            "org.apache.xerces.dom.CoreDocumentImpl:void <init>(org.w3c.dom.DocumentType,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:void cloneNode(org.apache.xerces.dom.CoreDocumentImpl,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ParentNode:void setTextContent(java.lang.String)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void surroundContents(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseSameContainer(int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonStartContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonEndContainer(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseCommonAncestors(org.w3c.dom.Node,org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseLeftBoundary(org.w3c.dom.Node,int)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void append(org.w3c.dom.Node)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void add(org.w3c.dom.html.HTMLElement,org.w3c.dom.html.HTMLElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getHead()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLElement getBody()",
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setCellIndex(int)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void expandEntityRef(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseRightBoundary(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text splitText(int)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DeferredDocumentTypeImpl:void synchronizeChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.NamedNodeMap getEntities()",
            "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.NamedNodeMap getNotations()",
            "org.apache.xerces.dom.DocumentTypeImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.NamedNodeMap getElements()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:boolean hasChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getFirstChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getLastChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:int nodeListGetLength()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node nodeListItem(int)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodesUnoptimized()",
            "org.apache.xerces.dom.ParentNode:void normalize()",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void remove(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node removeChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void endCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:void deleteCaption()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:void setCaption(org.w3c.dom.html.HTMLTableCaptionElement)"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:void deleteTHead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:void setTHead(org.w3c.dom.html.HTMLTableSectionElement)"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:void deleteTFoot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableElementImpl:void setTFoot(org.w3c.dom.html.HTMLTableSectionElement)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node removeChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:void remove(int)",
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.apache.xerces.dom.ElementImpl replaceRenameElement(org.apache.xerces.dom.ElementImpl,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:void setTextContent(java.lang.String)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node removeChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseFullySelected(org.w3c.dom.Node,int)",
            "org.apache.xerces.dom.TextImpl:org.w3c.dom.Text replaceWholeText(java.lang.String)",
            "org.apache.xerces.parsers.AbstractDOMParser:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void setCharacterData(boolean)"
        ]
    },
    "org.apache.xerces.impl.dtd.XML11DTDProcessor:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11DTDProcessor:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.dtd.XMLDTDLoader:void <init>()"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>()",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXEventResultBuilder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void endNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.StAXEventResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXEventResultBuilder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.PSVIDocumentImpl:org.w3c.dom.DOMConfiguration getDomConfig()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void <init>(org.apache.xerces.impl.xs.XSGrammarBucket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.XMLEntityManager,org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder)"
        ]
    },
    "org.apache.xerces.parsers.SecurityConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.SecurityConfiguration:void <init>()",
            "org.apache.xerces.parsers.SecurityConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.SecurityConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.SoftReferenceSymbolTableConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.SoftReferenceSymbolTableConfiguration:void <init>()",
            "org.apache.xerces.parsers.SoftReferenceSymbolTableConfiguration:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.parsers.SoftReferenceSymbolTableConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.XIncludeAwareParserConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void createAnnotationValidator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void validateAnnotations(java.util.ArrayList)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StreamValidatorHelper:org.apache.xerces.xni.parser.XMLParserConfiguration initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StreamValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.parsers.DOMParser getDOMParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaGrammar:org.apache.xerces.parsers.SAXParser getSAXParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToSAX(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void rename(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementNSImpl:void rename(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLElementImpl:void setAttribute(java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.dom.DeferredElementImpl:void synchronizeData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:void rename(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getNodeName()",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.NamedNodeMap getAttributes()",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNode(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getTagName()",
            "org.apache.xerces.dom.ElementImpl:void removeAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void removeAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:int setXercesAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:int getXercesAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean hasAttributes()",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNode(org.w3c.dom.Attr,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.TypeInfo getSchemaTypeInfo()",
            "org.apache.xerces.dom.ElementImpl:void moveSpecifiedAttributes(org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.NodeImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.NodeImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NodeImpl:boolean getReadOnly()",
            "org.apache.xerces.dom.NodeImpl:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.DeferredElementNSImpl:void synchronizeData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:void rename(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getNodeName()",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.NamedNodeMap getAttributes()",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNode(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getTagName()",
            "org.apache.xerces.dom.ElementImpl:void removeAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void removeAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:int setXercesAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:int getXercesAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean hasAttributes()",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNode(org.w3c.dom.Attr,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.TypeInfo getSchemaTypeInfo()",
            "org.apache.xerces.dom.ElementImpl:void moveSpecifiedAttributes(org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.ElementNSImpl:void rename(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementNSImpl:java.lang.String getNamespaceURI()",
            "org.apache.xerces.dom.ElementNSImpl:java.lang.String getPrefix()",
            "org.apache.xerces.dom.ElementNSImpl:void setPrefix(java.lang.String)",
            "org.apache.xerces.dom.ElementNSImpl:java.lang.String getLocalName()",
            "org.apache.xerces.dom.ElementNSImpl:boolean isDerivedFrom(java.lang.String,java.lang.String,int)",
            "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.NodeImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.NodeImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NodeImpl:boolean getReadOnly()",
            "org.apache.xerces.dom.NodeImpl:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:boolean isEqualNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Attr[] getAttrs(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.DOMSerializerImpl:void prepareForSerialization(org.apache.xml.serialize.XMLSerializer,org.w3c.dom.Node)"
        ]
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setAccessKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setCoords(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setHref(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setHreflang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setRel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setRev(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setShape(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setTarget(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setAlt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setArchive(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setCode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setCodeBase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setHeight(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setHspace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setVspace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:void setAccessKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:void setAlt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:void setCoords(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:void setHref(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:void setShape(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:void setTarget(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBRElementImpl:void setClear(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseElementImpl:void setHref(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseElementImpl:void setTarget(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseFontElementImpl:void setColor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseFontElementImpl:void setFace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseFontElementImpl:void setSize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:void setALink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:void setBackground(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:void setBgColor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:void setLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:void setVLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:void setAccessKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDivElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:void setLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:void setDir(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:void setAttribute(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLAreaElementImpl:void setNoHref(boolean)",
            "org.apache.html.dom.HTMLButtonElementImpl:void setDisabled(boolean)",
            "org.apache.html.dom.HTMLDListElementImpl:void setCompact(boolean)",
            "org.apache.html.dom.HTMLDirectoryElementImpl:void setCompact(boolean)",
            "org.apache.html.dom.HTMLFrameElementImpl:void setNoResize(boolean)",
            "org.apache.html.dom.HTMLHRElementImpl:void setNoShade(boolean)",
            "org.apache.html.dom.HTMLImageElementImpl:void setIsMap(boolean)",
            "org.apache.html.dom.HTMLInputElementImpl:void setDefaultChecked(boolean)",
            "org.apache.html.dom.HTMLInputElementImpl:void setChecked(boolean)",
            "org.apache.html.dom.HTMLInputElementImpl:void setDisabled(boolean)",
            "org.apache.html.dom.HTMLInputElementImpl:void setReadOnly(boolean)",
            "org.apache.html.dom.HTMLLinkElementImpl:void setDisabled(boolean)",
            "org.apache.html.dom.HTMLMenuElementImpl:void setCompact(boolean)",
            "org.apache.html.dom.HTMLOListElementImpl:void setCompact(boolean)",
            "org.apache.html.dom.HTMLObjectElementImpl:void setDeclare(boolean)",
            "org.apache.html.dom.HTMLOptGroupElementImpl:void setDisabled(boolean)",
            "org.apache.html.dom.HTMLOptionElementImpl:void setDefaultSelected(boolean)",
            "org.apache.html.dom.HTMLOptionElementImpl:void setDisabled(boolean)",
            "org.apache.html.dom.HTMLOptionElementImpl:void setSelected(boolean)",
            "org.apache.html.dom.HTMLScriptElementImpl:void setDefer(boolean)",
            "org.apache.html.dom.HTMLSelectElementImpl:void setDisabled(boolean)",
            "org.apache.html.dom.HTMLSelectElementImpl:void setMultiple(boolean)",
            "org.apache.html.dom.HTMLStyleElementImpl:void setDisabled(boolean)",
            "org.apache.html.dom.HTMLTableCellElementImpl:void setNoWrap(boolean)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setDisabled(boolean)",
            "org.apache.html.dom.HTMLTextAreaElementImpl:void setReadOnly(boolean)",
            "org.apache.html.dom.HTMLUListElementImpl:void setCompact(boolean)"
        ]
    },
    "org.apache.html.dom.HTMLFontElementImpl:void setColor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFontElementImpl:void setFace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFontElementImpl:void setSize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:void setAcceptCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:void setAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:void setEnctype(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:void setMethod(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:void setTarget(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:void setFrameBorder(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:void setLongDesc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:void setMarginHeight(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:void setMarginWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:void setScrolling(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:void setSrc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameSetElementImpl:void setCols(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameSetElementImpl:void setRows(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHRElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHRElementImpl:void setSize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHRElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHeadElementImpl:void setProfile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHeadingElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHtmlElementImpl:void setVersion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setFrameBorder(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setHeight(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setLongDesc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setMarginHeight(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setMarginWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setScrolling(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setSrc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setLowSrc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setSrc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setAlt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setBorder(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setHeight(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setHspace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setLongDesc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setUseMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setVspace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setDefaultValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setAccept(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setAccessKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setAlt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setMaxLength(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setSize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setSrc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setUseMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIsIndexElementImpl:void setPrompt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLIElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLIElementImpl:void setValue(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLabelElementImpl:void setAccessKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLabelElementImpl:void setHtmlFor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLegendElementImpl:void setAccessKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLegendElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setHref(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setHreflang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setMedia(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setRel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setRev(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setTarget(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMapElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMetaElementImpl:void setContent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMetaElementImpl:void setHttpEquiv(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMetaElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMetaElementImpl:void setScheme(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLModElementImpl:void setCite(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLModElementImpl:void setDateTime(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOListElementImpl:void setStart(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOListElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setCode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setArchive(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setBorder(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setCodeBase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setCodeType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setHeight(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setHspace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setStandby(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setUseMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setVspace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptGroupElementImpl:void setLabel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:void setLabel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParagraphElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParamElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParamElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParamElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParamElementImpl:void setValueType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLPreElementImpl:void setWidth(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLQuoteElementImpl:void setCite(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:void setHtmlFor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:void setEvent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:void setCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:void setSrc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void setSize(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLStyleElementImpl:void setMedia(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLStyleElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCaptionElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setAbbr(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setAxis(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setBgColor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setCh(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setChOff(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setColSpan(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setHeaders(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setHeight(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setRowSpan(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setScope(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setVAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:void setCh(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:void setChOff(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:void setSpan(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:void setVAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setBgColor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setBorder(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setCellPadding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setCellSpacing(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setFrame(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setRules(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setSummary(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void setBgColor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void setCh(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void setChOff(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void setVAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:void setCh(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:void setChOff(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:void setVAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setDefaultValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setAccessKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setCols(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setRows(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLUListElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:void setHref(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAccessElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAccessElementImpl:void setDomain(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAccessElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAccessElementImpl:void setPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAnchorElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAnchorElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAnchorElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAnchorElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBigElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBigElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBigElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBrElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBrElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBrElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setOnTimer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setOnEnterBackward(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setOnEnterForward(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:void setOptional(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:void setLabel(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLElementImpl:void setAttribute(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.wml.dom.WMLCardElementImpl:void setOrdered(boolean)",
            "org.apache.wml.dom.WMLCardElementImpl:void setNewContext(boolean)",
            "org.apache.wml.dom.WMLInputElementImpl:void setEmptyOk(boolean)",
            "org.apache.wml.dom.WMLMetaElementImpl:void setForua(boolean)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setMultiple(boolean)"
        ]
    },
    "org.apache.wml.dom.WMLElementImpl:void setAttribute(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.wml.dom.WMLInputElementImpl:void setSize(int)",
            "org.apache.wml.dom.WMLInputElementImpl:void setMaxLength(int)",
            "org.apache.wml.dom.WMLInputElementImpl:void setTabIndex(int)",
            "org.apache.wml.dom.WMLSelectElementImpl:void setTabIndex(int)",
            "org.apache.wml.dom.WMLTableElementImpl:void setColumns(int)"
        ]
    },
    "org.apache.wml.dom.WMLEmElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLEmElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLEmElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLFieldsetElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLFieldsetElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLFieldsetElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLFieldsetElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:void setSendreferer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:void setAcceptCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:void setHref(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:void setMethod(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLHeadElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLHeadElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLIElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLIElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLIElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setLocalSrc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setHeight(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setVspace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setAlt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setHspace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:void setSrc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setFormat(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:void setScheme(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:void setHttpEquiv(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:void setContent(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLNoopElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLNoopElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOneventElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOneventElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOneventElementImpl:void setType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptgroupElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptgroupElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptgroupElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptgroupElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:void setOnPick(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:void setMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPostfieldElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPostfieldElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPostfieldElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPostfieldElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPrevElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPrevElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLRefreshElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLRefreshElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setIValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setIName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSetvarElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSetvarElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSetvarElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSetvarElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSmallElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSmallElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSmallElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLStrongElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLStrongElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLStrongElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:void setAlign(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTdElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTdElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTdElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:void setOnTimer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:void setOnEnterBackward(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:void setOnEnterForward(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTimerElementImpl:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTimerElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTimerElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTimerElementImpl:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTrElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTrElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLUElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLUElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLUElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLWmlElementImpl:void setClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLWmlElementImpl:void setXmlLang(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLWmlElementImpl:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void addNamespaceDecl(java.lang.String,java.lang.String,org.apache.xerces.dom.ElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void synchronizeData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:void rename(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getNodeName()",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.NamedNodeMap getAttributes()",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNode(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getTagName()",
            "org.apache.xerces.dom.ElementImpl:void removeAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void removeAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:int setXercesAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.dom.ElementImpl:int getXercesAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean hasAttributes()",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNode(org.w3c.dom.Attr,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.TypeInfo getSchemaTypeInfo()",
            "org.apache.xerces.dom.ElementImpl:void moveSpecifiedAttributes(org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.ElementNSImpl:void rename(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementNSImpl:java.lang.String getNamespaceURI()",
            "org.apache.xerces.dom.ElementNSImpl:java.lang.String getPrefix()",
            "org.apache.xerces.dom.ElementNSImpl:void setPrefix(java.lang.String)",
            "org.apache.xerces.dom.ElementNSImpl:java.lang.String getLocalName()",
            "org.apache.xerces.dom.ElementNSImpl:boolean isDerivedFrom(java.lang.String,java.lang.String,int)",
            "org.apache.xerces.dom.NodeImpl:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.NodeImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.NodeImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NodeImpl:boolean getReadOnly()",
            "org.apache.xerces.dom.NodeImpl:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void normalize()",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getValue(int)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void dispatchAggregateEvents(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.AttrImpl,java.lang.String,short)",
            "org.apache.xerces.dom.DocumentImpl:void saveEnclosingAttr(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.DocumentImpl:void setAttrNode(org.apache.xerces.dom.AttrImpl,org.apache.xerces.dom.AttrImpl)",
            "org.apache.xerces.dom.DocumentImpl:void mutationEventsRemovedAttrNode(org.apache.xerces.dom.AttrImpl,org.apache.xerces.dom.NodeImpl,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.NodeImpl:java.lang.String getTextContent()",
            "org.apache.xerces.dom.NodeImpl:void getTextContent(java.lang.StringBuffer)",
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.NodeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String toString()",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:java.lang.String toString()",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseSameContainer(int)",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.Node traverseCharacterDataNode(org.w3c.dom.Node,boolean,int)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getChildText(org.w3c.dom.Node)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)",
            "org.apache.xml.serialize.OutputFormat:java.lang.String whichMethod(org.w3c.dom.Document)",
            "org.apache.xml.serialize.TextSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)",
            "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()",
            "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLCollectionImpl:boolean collectionMatch(org.w3c.dom.Element,java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)",
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getAttribute(java.lang.String)",
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.html.dom.NameNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.wml.dom.WMLAElementImpl:java.lang.String getHref()",
            "org.apache.wml.dom.WMLAElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLAElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLAElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLAElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLAccessElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLAccessElementImpl:java.lang.String getDomain()",
            "org.apache.wml.dom.WMLAccessElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLAccessElementImpl:java.lang.String getPath()",
            "org.apache.wml.dom.WMLAnchorElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLAnchorElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLAnchorElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLAnchorElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLBElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLBElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLBElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLBigElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLBigElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLBigElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLBrElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLBrElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLBrElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getOnTimer()",
            "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getOnEnterBackward()",
            "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getOnEnterForward()",
            "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getOptional()",
            "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getLabel()",
            "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getType()",
            "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getName()",
            "org.apache.wml.dom.WMLElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLElementImpl:boolean getAttribute(java.lang.String,boolean)",
            "org.apache.wml.dom.WMLElementImpl:int getAttribute(java.lang.String,int)",
            "org.apache.wml.dom.WMLEmElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLEmElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLEmElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLFieldsetElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLFieldsetElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLFieldsetElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLFieldsetElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getSendreferer()",
            "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getAcceptCharset()",
            "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getHref()",
            "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getMethod()",
            "org.apache.wml.dom.WMLHeadElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLHeadElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLIElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLIElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLIElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getWidth()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getLocalSrc()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getHeight()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getAlign()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getVspace()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getAlt()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getHspace()",
            "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getSrc()",
            "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getFormat()",
            "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getValue()",
            "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getType()",
            "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getName()",
            "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getScheme()",
            "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getHttpEquiv()",
            "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getContent()",
            "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getName()",
            "org.apache.wml.dom.WMLNoopElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLNoopElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLOneventElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLOneventElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLOneventElementImpl:java.lang.String getType()",
            "org.apache.wml.dom.WMLOptgroupElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLOptgroupElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLOptgroupElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLOptgroupElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getValue()",
            "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getOnPick()",
            "org.apache.wml.dom.WMLPElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLPElementImpl:java.lang.String getMode()",
            "org.apache.wml.dom.WMLPElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLPElementImpl:java.lang.String getAlign()",
            "org.apache.wml.dom.WMLPElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLPostfieldElementImpl:java.lang.String getValue()",
            "org.apache.wml.dom.WMLPostfieldElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLPostfieldElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLPostfieldElementImpl:java.lang.String getName()",
            "org.apache.wml.dom.WMLPrevElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLPrevElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLRefreshElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLRefreshElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getValue()",
            "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getIValue()",
            "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getIName()",
            "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getName()",
            "org.apache.wml.dom.WMLSetvarElementImpl:java.lang.String getValue()",
            "org.apache.wml.dom.WMLSetvarElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLSetvarElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLSetvarElementImpl:java.lang.String getName()",
            "org.apache.wml.dom.WMLSmallElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLSmallElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLSmallElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLStrongElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLStrongElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLStrongElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getAlign()",
            "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getTitle()",
            "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLTdElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLTdElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLTdElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getOnTimer()",
            "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getOnEnterBackward()",
            "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getOnEnterForward()",
            "org.apache.wml.dom.WMLTimerElementImpl:java.lang.String getValue()",
            "org.apache.wml.dom.WMLTimerElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLTimerElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLTimerElementImpl:java.lang.String getName()",
            "org.apache.wml.dom.WMLTrElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLTrElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLUElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLUElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLUElementImpl:java.lang.String getId()",
            "org.apache.wml.dom.WMLWmlElementImpl:java.lang.String getClassName()",
            "org.apache.wml.dom.WMLWmlElementImpl:java.lang.String getXmlLang()",
            "org.apache.wml.dom.WMLWmlElementImpl:java.lang.String getId()",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getAttrValue(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getAttrValueNS(org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void setIdAttributeNode(org.w3c.dom.Attr,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.opti.ElementImpl:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLCollectionImpl:boolean collectionMatch(org.w3c.dom.Element,java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getAttrValue(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.ElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getAttrValueNS(org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:java.lang.String getValue(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)"
        ]
    },
    "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()",
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:void remove(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.DeepNodeListImpl:int getLength()",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node nextNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.NodeIteratorImpl:void removeNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void notifyIteratorsRemovingNode(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.NodeIteratorImpl:org.w3c.dom.Node previousNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node firstChild()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node nextNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getNextSibling(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getNextSibling(org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getNextSibling(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getFirstChild(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node lastChild()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node previousNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getPreviousSibling(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getPreviousSibling(org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getPreviousSibling(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getLastChild(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void setStart(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.ranges.Range cloneRange()"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void setEnd(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.ranges.Range cloneRange()"
        ]
    },
    "org.apache.html.dom.HTMLCollectionImpl:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLFormElementImpl:int getLength()",
            "org.apache.html.dom.HTMLSelectElementImpl:int getLength()"
        ]
    },
    "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableRowElementImpl:void setCells(org.w3c.dom.html.HTMLCollection)"
        ]
    },
    "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node namedItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:java.lang.String lookupPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupPrefix(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.SchemaNamespaceSupport:void <init>(org.w3c.dom.Element,org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDocumentInfo:void <init>(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSAttributeChecker,org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getRoot(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.SAXInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.DOMInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.StAXInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean element2Locator(org.w3c.dom.Element,org.apache.xerces.impl.xs.util.SimpleLocator)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDOMImplementationImpl:org.w3c.dom.html.HTMLDocument createHTMLDocument(java.lang.String)"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getImages()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getApplets()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getLinks()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getForms()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.html.HTMLCollection getAnchors()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createCaption()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createTHead()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement createTFoot()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLElement insertRow(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void setRowIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:org.w3c.dom.html.HTMLElement insertRow(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:void setSectionRowIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:void deleteRow(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DocumentImpl:void mutationEventsInsertedNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void insertedNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void mutationEventsRemovingNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void removingNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:int getChildElementCount()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getNextElementSibling()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:int getChildElementCount()"
        ]
    },
    "org.apache.xerces.dom.DocumentTypeImpl:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:boolean isEqualNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:short compareBoundaryPoints(short,org.w3c.dom.ranges.Range)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.RangeImpl:void insertedNodeFromDOM(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesInsertedNode(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void removeNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void notifyRangesRemovingNode(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.TextImpl:java.lang.String getWholeText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean nonAnnotationContent(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)"
        ]
    },
    "org.apache.xml.serialize.OutputFormat:void <init>(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.OutputFormat:void <init>(org.w3c.dom.Document,java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void putIdentifier(java.lang.String,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setValue(java.lang.String)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNode(org.w3c.dom.Attr,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Element getIdentifier(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void removeIdentifier(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setValue(java.lang.String)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:void putIdentifier(java.lang.String,org.w3c.dom.Element)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNode(org.w3c.dom.Attr,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:java.util.Enumeration getIdentifiers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DeferredDocumentImpl:void synchronizeChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void cloneNode(org.apache.xerces.dom.CoreDocumentImpl,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.DocumentType getDoctype()",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xerces.dom.CoreDocumentImpl:void normalizeDocument()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:boolean hasChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getFirstChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getLastChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:int nodeListGetLength()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node nodeListItem(int)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodesUnoptimized()",
            "org.apache.xerces.dom.ParentNode:void normalize()",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.TextImpl:void setValues(org.apache.xerces.dom.CoreDocumentImpl,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:void setReadOnly(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.EntityReferenceImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.NamedNodeMapImpl:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void setHidden(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void setVisible(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:boolean getReadOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.DOMUtil:boolean isHidden(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Element getPreviousElementSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void startCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex()",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getSectionRowIndex()"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)"
        ]
    },
    "org.apache.xerces.dom.ParentNode$1:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.ParentNode$1:org.w3c.dom.Node item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()",
            "org.apache.html.dom.HTMLOptionElementImpl:void setIndex(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)",
            "org.apache.html.dom.HTMLSelectElementImpl:void remove(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:void deleteContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment extractContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.RangeImpl:void surroundContents(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment cloneContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean characterData(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void sendCharactersToValidator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void sendCharactersToValidator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeTextReader:void parse()"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean normalizeAttrValue(org.apache.xerces.xni.XMLAttributes,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.html.dom.HTMLBuilder:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBuilder:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLBuilder:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLBuilder:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setCaption(org.w3c.dom.html.HTMLTableCaptionElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setTHead(org.w3c.dom.html.HTMLTableSectionElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:void setTFoot(org.w3c.dom.html.HTMLTableSectionElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDOMImplementationImpl:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void <init>(org.w3c.dom.DocumentType,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:void <init>(org.w3c.dom.DocumentType)",
            "org.apache.xerces.dom.DocumentImpl:void <init>(org.w3c.dom.DocumentType,boolean)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void append(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void doctypeDecl(org.w3c.dom.DocumentType)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void characters(org.w3c.dom.Text)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void cdata(org.w3c.dom.CDATASection)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void comment(org.w3c.dom.Comment)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void processingInstruction(org.w3c.dom.ProcessingInstruction)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void resolveExternalSubsetAndRead()",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void doctypeDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void normalizeDocument(org.apache.xerces.dom.CoreDocumentImpl,org.apache.xerces.dom.DOMConfigurationImpl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endDocument()",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.NamedNodeMap getEntities()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.EntityReferenceImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void doctypeDecl(org.w3c.dom.DocumentType)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void setupEntityMap(org.w3c.dom.Document)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.NamedNodeMap getNotations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void doctypeDecl(org.w3c.dom.DocumentType)",
            "org.apache.xerces.parsers.AbstractDOMParser:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentTypeImpl:org.w3c.dom.NamedNodeMap getElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:org.apache.xerces.dom.NamedNodeMapImpl getDefaultAttributes()",
            "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void endCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void endCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void endCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void endCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void endCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XML11DTDProcessor:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.dtd.XMLDTDLoader:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDOMImplementationImpl:org.apache.xerces.impl.dtd.XMLDTDLoader getDTDLoader(java.lang.String)",
            "org.apache.xerces.impl.dtd.XML11DTDProcessor:void <init>()"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>()"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable)"
        ]
    },
    "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.XMLEntityManager,org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void <init>()",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void <init>(org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void <init>(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder)"
        ]
    },
    "org.apache.xerces.parsers.SecurityConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.SecurityConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.SecurityConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.SoftReferenceSymbolTableConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.SoftReferenceSymbolTableConfiguration:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.SoftReferenceSymbolTableConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementImpl:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void endElement(java.lang.String)",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableCaptionElement getCaption()",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableSectionElement getTHead()",
            "org.apache.html.dom.HTMLTableElementImpl:org.w3c.dom.html.HTMLTableSectionElement getTFoot()",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getQName(int)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.dom.DocumentTypeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:org.apache.xerces.dom.NamedNodeMapImpl getDefaultAttributes()",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int findNamePoint(java.lang.String,int)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int findNamePoint(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int addItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.NodeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String toString()",
            "org.apache.xerces.dom.RangeImpl:org.w3c.dom.DocumentFragment traverseSameContainer(int)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMErrorHandlerWrapper:void printError(org.w3c.dom.DOMError)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String[])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String[])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String[])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getName(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getLocalName(org.w3c.dom.Node)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)",
            "org.apache.xml.serialize.OutputFormat:java.lang.String whichMethod(org.w3c.dom.Document)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.ProcessingInstructionImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.util.DOMInputSource:java.lang.String getSystemIdFromNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLElementImpl:org.w3c.dom.Attr getAttributeNode(java.lang.String)",
            "org.apache.html.dom.HTMLElementImpl:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean hasAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Attr getAttr(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:java.lang.String getTagName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLCollectionImpl:boolean collectionMatch(org.w3c.dom.Element,java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:boolean canRenameElements(java.lang.String,java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.html.dom.HTMLTableElementImpl:void setCaption(org.w3c.dom.html.HTMLTableCaptionElement)",
            "org.apache.html.dom.HTMLTableElementImpl:void setTHead(org.w3c.dom.html.HTMLTableSectionElement)",
            "org.apache.html.dom.HTMLTableElementImpl:void setTFoot(org.w3c.dom.html.HTMLTableSectionElement)",
            "org.apache.wml.dom.WMLDocumentImpl:boolean canRenameElements(java.lang.String,java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.TextSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLElementImpl:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean hasAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Attr getAttrNS(org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:int getXercesAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:int addAttribute(org.apache.xerces.xni.QName,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:void moveSpecifiedAttributes(org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.TypeInfo getSchemaTypeInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementNSImpl:java.lang.String getNamespaceURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:boolean canRenameElements(java.lang.String,java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getURI(int)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int findNamePoint(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int addItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.NodeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String[][])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElementNS(org.w3c.dom.Node,java.lang.String[][])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String[][])",
            "org.apache.xerces.util.DOMUtil:java.lang.String getNamespaceURI(org.w3c.dom.Node)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.dom.ElementNSImpl:java.lang.String getPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getPrefix(int)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.NodeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getPrefix(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ElementNSImpl:void setPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementNSImpl:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getLocalName(int)",
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void updateQName(org.w3c.dom.Node,org.apache.xerces.xni.QName)",
            "org.apache.xerces.dom.DeepNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int findNamePoint(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int addItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.dom.NodeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void fillQName(org.apache.xerces.xni.QName,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElementNS(org.w3c.dom.Node,java.lang.String[][])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElementNS(org.w3c.dom.Node,java.lang.String[][])",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String[][])",
            "org.apache.xerces.util.DOMUtil:java.lang.String getLocalName(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.dom.ElementNSImpl:boolean isDerivedFrom(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:void setNoHref(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:void setDisabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDListElementImpl:void setCompact(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDirectoryElementImpl:void setCompact(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:void setNoResize(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHRElementImpl:void setNoShade(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:void setIsMap(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setDefaultChecked(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setChecked(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setDisabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:void setReadOnly(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:void setDisabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMenuElementImpl:void setCompact(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOListElementImpl:void setCompact(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:void setDeclare(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptGroupElementImpl:void setDisabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:void setDefaultSelected(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:void setDisabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:void setSelected(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)"
        ]
    },
    "org.apache.html.dom.HTMLScriptElementImpl:void setDefer(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void setDisabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:void setMultiple(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLStyleElementImpl:void setDisabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:void setNoWrap(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setDisabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:void setReadOnly(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLUListElementImpl:void setCompact(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setOrdered(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:void setNewContext(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setEmptyOk(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:void setForua(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setMultiple(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setSize(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setMaxLength(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:void setTabIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:void setColumns(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean normalizeAttrValue(org.apache.xerces.xni.XMLAttributes,int)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void processElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.opti.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotation(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.NamespaceContext)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void startAnnotationElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.StAXEventResultBuilder$AttributeIterator:java.lang.Object next()",
            "org.apache.xerces.jaxp.validation.StAXStreamResultBuilder:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getValue(int)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getValue(int)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xpointer.ShortHandPointer:java.lang.String getDTDDeterminedID(org.apache.xerces.xni.XMLAttributes,int)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xerces.util.AttributesProxy:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processXMLBaseAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processXMLLangAttributes(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void dispatchAggregateEvents(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.AttrImpl,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void dispatchAggregateEvents(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.DocumentImpl$EnclosingAttr)",
            "org.apache.xerces.dom.DocumentImpl:void modifiedAttrValue(org.apache.xerces.dom.AttrImpl,java.lang.String)",
            "org.apache.xerces.dom.DocumentImpl:void setAttrNode(org.apache.xerces.dom.AttrImpl,org.apache.xerces.dom.AttrImpl)",
            "org.apache.xerces.dom.DocumentImpl:void mutationEventsRemovedAttrNode(org.apache.xerces.dom.AttrImpl,org.apache.xerces.dom.NodeImpl,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void saveEnclosingAttr(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void modifyingCharacterData(org.apache.xerces.dom.NodeImpl,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void insertingNode(org.apache.xerces.dom.NodeImpl,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void mutationEventsRemovingNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void replacingNode(org.apache.xerces.dom.NodeImpl)",
            "org.apache.xerces.dom.DocumentImpl:void replacingData(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void setAttrNode(org.apache.xerces.dom.AttrImpl,org.apache.xerces.dom.AttrImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttributeMap:int addItem(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void mutationEventsRemovedAttrNode(org.apache.xerces.dom.AttrImpl,org.apache.xerces.dom.NodeImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void removedAttrNode(org.apache.xerces.dom.AttrImpl,org.apache.xerces.dom.NodeImpl,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:java.lang.String getTextContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode:java.lang.String getTextContent()"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:void getTextContent(java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ParentNode:void getTextContent(java.lang.StringBuffer)",
            "org.apache.xerces.dom.TextImpl:boolean getWholeTextForward(org.w3c.dom.Node,java.lang.StringBuffer,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DocumentTypeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:boolean isEqualNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.NodeImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredDocumentImpl:java.lang.String getNodeValue(int,int)",
            "org.apache.xerces.impl.dv.xs.ListDV$ListData:java.lang.String toString()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.Object getActualValue(java.lang.Object,org.apache.xerces.impl.dv.ValidationContext,org.apache.xerces.impl.dv.ValidatedInfo,boolean)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String normalize(java.lang.Object,short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:java.lang.String getLexicalFacetValue(short)",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.StringList getLexicalEnumeration()",
            "org.apache.xerces.impl.dv.xs.XSSimpleTypeDecl:org.apache.xerces.xs.XSObjectList getFacets()",
            "org.apache.xerces.impl.dv.ValidatedInfo:java.lang.String stringValue()",
            "org.apache.xerces.impl.xs.models.XSCMLeaf:java.lang.String toString()",
            "org.apache.xerces.impl.xs.models.XSDFACM:boolean checkUniqueParticleAttribution(org.apache.xerces.impl.xs.SubstitutionGroupHandler)",
            "org.apache.xerces.impl.xs.models.XSDFACM:java.lang.String getTermName(int)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.String expectedStr(java.util.Vector)"
        ]
    },
    "org.apache.html.dom.HTMLCollectionImpl:boolean collectionMatch(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLCollectionImpl:int getLength(org.w3c.dom.Element)",
            "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node item(org.w3c.dom.Element,org.apache.html.dom.CollectionIndex)",
            "org.apache.html.dom.HTMLCollectionImpl:org.w3c.dom.Node namedItem(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.html.dom.HTMLElementImpl:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getAccessKey()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getCharset()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getCoords()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getHref()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getHreflang()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getRel()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getRev()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getShape()",
            "org.apache.html.dom.HTMLAnchorElementImpl:int getTabIndex()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getTarget()",
            "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getAlt()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getArchive()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getCode()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getCodeBase()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getHeight()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getHspace()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getObject()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getVspace()",
            "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getWidth()",
            "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getAccessKey()",
            "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getAlt()",
            "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getCoords()",
            "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getHref()",
            "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getShape()",
            "org.apache.html.dom.HTMLAreaElementImpl:int getTabIndex()",
            "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getTarget()",
            "org.apache.html.dom.HTMLBRElementImpl:java.lang.String getClear()",
            "org.apache.html.dom.HTMLBaseElementImpl:java.lang.String getHref()",
            "org.apache.html.dom.HTMLBaseElementImpl:java.lang.String getTarget()",
            "org.apache.html.dom.HTMLBaseFontElementImpl:java.lang.String getColor()",
            "org.apache.html.dom.HTMLBaseFontElementImpl:java.lang.String getFace()",
            "org.apache.html.dom.HTMLBaseFontElementImpl:java.lang.String getSize()",
            "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getALink()",
            "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getBackground()",
            "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getBgColor()",
            "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getLink()",
            "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getText()",
            "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getVLink()",
            "org.apache.html.dom.HTMLButtonElementImpl:java.lang.String getAccessKey()",
            "org.apache.html.dom.HTMLButtonElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLButtonElementImpl:int getTabIndex()",
            "org.apache.html.dom.HTMLButtonElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLButtonElementImpl:java.lang.String getValue()",
            "org.apache.html.dom.HTMLCollectionImpl:boolean collectionMatch(org.w3c.dom.Element,java.lang.String)",
            "org.apache.html.dom.HTMLDivElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String,org.w3c.dom.Node)",
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getId()",
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getLang()",
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getDir()",
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getClassName()",
            "org.apache.html.dom.HTMLElementImpl:java.lang.String getCapitalized(java.lang.String)",
            "org.apache.html.dom.HTMLFontElementImpl:java.lang.String getColor()",
            "org.apache.html.dom.HTMLFontElementImpl:java.lang.String getFace()",
            "org.apache.html.dom.HTMLFontElementImpl:java.lang.String getSize()",
            "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getAcceptCharset()",
            "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getAction()",
            "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getEnctype()",
            "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getMethod()",
            "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getTarget()",
            "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getFrameBorder()",
            "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getLongDesc()",
            "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getMarginHeight()",
            "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getMarginWidth()",
            "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getScrolling()",
            "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getSrc()",
            "org.apache.html.dom.HTMLFrameSetElementImpl:java.lang.String getCols()",
            "org.apache.html.dom.HTMLFrameSetElementImpl:java.lang.String getRows()",
            "org.apache.html.dom.HTMLHRElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLHRElementImpl:java.lang.String getSize()",
            "org.apache.html.dom.HTMLHRElementImpl:java.lang.String getWidth()",
            "org.apache.html.dom.HTMLHeadElementImpl:java.lang.String getProfile()",
            "org.apache.html.dom.HTMLHtmlElementImpl:java.lang.String getVersion()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getFrameBorder()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getHeight()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getLongDesc()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getMarginHeight()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getMarginWidth()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getScrolling()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getSrc()",
            "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getWidth()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getLowSrc()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getSrc()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getAlt()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getBorder()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getHeight()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getHspace()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getLongDesc()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getUseMap()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getVspace()",
            "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getWidth()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getDefaultValue()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getAccept()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getAccessKey()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getAlt()",
            "org.apache.html.dom.HTMLInputElementImpl:int getMaxLength()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getSize()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getSrc()",
            "org.apache.html.dom.HTMLInputElementImpl:int getTabIndex()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getUseMap()",
            "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getValue()",
            "org.apache.html.dom.HTMLIsIndexElementImpl:java.lang.String getPrompt()",
            "org.apache.html.dom.HTMLLIElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLLIElementImpl:int getValue()",
            "org.apache.html.dom.HTMLLabelElementImpl:java.lang.String getAccessKey()",
            "org.apache.html.dom.HTMLLabelElementImpl:java.lang.String getHtmlFor()",
            "org.apache.html.dom.HTMLLegendElementImpl:java.lang.String getAccessKey()",
            "org.apache.html.dom.HTMLLegendElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getCharset()",
            "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getHref()",
            "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getHreflang()",
            "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getMedia()",
            "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getRel()",
            "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getRev()",
            "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getTarget()",
            "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLMapElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLMetaElementImpl:java.lang.String getContent()",
            "org.apache.html.dom.HTMLMetaElementImpl:java.lang.String getHttpEquiv()",
            "org.apache.html.dom.HTMLMetaElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLMetaElementImpl:java.lang.String getScheme()",
            "org.apache.html.dom.HTMLModElementImpl:java.lang.String getCite()",
            "org.apache.html.dom.HTMLModElementImpl:java.lang.String getDateTime()",
            "org.apache.html.dom.HTMLOListElementImpl:int getStart()",
            "org.apache.html.dom.HTMLOListElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getCode()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getArchive()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getBorder()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getCodeBase()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getCodeType()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getData()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getHeight()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getHspace()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getStandby()",
            "org.apache.html.dom.HTMLObjectElementImpl:int getTabIndex()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getUseMap()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getVspace()",
            "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getWidth()",
            "org.apache.html.dom.HTMLOptGroupElementImpl:java.lang.String getLabel()",
            "org.apache.html.dom.HTMLOptionElementImpl:java.lang.String getLabel()",
            "org.apache.html.dom.HTMLOptionElementImpl:java.lang.String getValue()",
            "org.apache.html.dom.HTMLParagraphElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLParamElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLParamElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLParamElementImpl:java.lang.String getValue()",
            "org.apache.html.dom.HTMLParamElementImpl:java.lang.String getValueType()",
            "org.apache.html.dom.HTMLPreElementImpl:int getWidth()",
            "org.apache.html.dom.HTMLQuoteElementImpl:java.lang.String getCite()",
            "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getHtmlFor()",
            "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getEvent()",
            "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getCharset()",
            "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getSrc()",
            "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLSelectElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLSelectElementImpl:java.lang.String getValue()",
            "org.apache.html.dom.HTMLSelectElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSize()",
            "org.apache.html.dom.HTMLSelectElementImpl:int getTabIndex()",
            "org.apache.html.dom.HTMLStyleElementImpl:java.lang.String getMedia()",
            "org.apache.html.dom.HTMLStyleElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLTableCaptionElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getAbbr()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getAxis()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getBgColor()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getCh()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getChOff()",
            "org.apache.html.dom.HTMLTableCellElementImpl:int getColSpan()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getHeaders()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getHeight()",
            "org.apache.html.dom.HTMLTableCellElementImpl:int getRowSpan()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getScope()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getVAlign()",
            "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getWidth()",
            "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getCh()",
            "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getChOff()",
            "org.apache.html.dom.HTMLTableColElementImpl:int getSpan()",
            "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getVAlign()",
            "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getWidth()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getBgColor()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getBorder()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getCellPadding()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getCellSpacing()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getFrame()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getRules()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getSummary()",
            "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getWidth()",
            "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getBgColor()",
            "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getCh()",
            "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getChOff()",
            "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getVAlign()",
            "org.apache.html.dom.HTMLTableSectionElementImpl:java.lang.String getAlign()",
            "org.apache.html.dom.HTMLTableSectionElementImpl:java.lang.String getCh()",
            "org.apache.html.dom.HTMLTableSectionElementImpl:java.lang.String getChOff()",
            "org.apache.html.dom.HTMLTableSectionElementImpl:java.lang.String getVAlign()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getDefaultValue()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getAccessKey()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:int getCols()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getName()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:int getRows()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:int getTabIndex()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getType()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getValue()",
            "org.apache.html.dom.HTMLUListElementImpl:java.lang.String getType()",
            "org.apache.html.dom.NameNodeListImpl:org.w3c.dom.Node nextMatchingElementAfter(org.w3c.dom.Node)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastChildElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getAttrValue(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.html.dom.HTMLElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.util.DOMUtil:java.lang.String getAttrValueNS(org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.wml.dom.WMLAElementImpl:java.lang.String getHref()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAccessElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAccessElementImpl:java.lang.String getDomain()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAccessElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAccessElementImpl:java.lang.String getPath()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAnchorElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAnchorElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAnchorElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLAnchorElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBigElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBigElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBigElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBrElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBrElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLBrElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getOnTimer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getOnEnterBackward()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:java.lang.String getOnEnterForward()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getOptional()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getLabel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLDoElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLElementImpl:boolean getAttribute(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.wml.dom.WMLCardElementImpl:boolean getOrdered()",
            "org.apache.wml.dom.WMLCardElementImpl:boolean getNewContext()",
            "org.apache.wml.dom.WMLInputElementImpl:boolean getEmptyOk()",
            "org.apache.wml.dom.WMLMetaElementImpl:boolean getForua()",
            "org.apache.wml.dom.WMLSelectElementImpl:boolean getMultiple()"
        ]
    },
    "org.apache.wml.dom.WMLElementImpl:int getAttribute(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.wml.dom.WMLInputElementImpl:int getSize()",
            "org.apache.wml.dom.WMLInputElementImpl:int getMaxLength()",
            "org.apache.wml.dom.WMLInputElementImpl:int getTabIndex()",
            "org.apache.wml.dom.WMLSelectElementImpl:int getTabIndex()",
            "org.apache.wml.dom.WMLTableElementImpl:int getColumns()"
        ]
    },
    "org.apache.wml.dom.WMLEmElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLEmElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLEmElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLFieldsetElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLFieldsetElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLFieldsetElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLFieldsetElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getSendreferer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getAcceptCharset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getHref()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLGoElementImpl:java.lang.String getMethod()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLHeadElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLHeadElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLIElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLIElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLIElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getLocalSrc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getHeight()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getVspace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getAlt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getHspace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLImgElementImpl:java.lang.String getSrc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getFormat()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getScheme()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getHttpEquiv()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLNoopElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLNoopElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOneventElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOneventElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOneventElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptgroupElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptgroupElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptgroupElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptgroupElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLOptionElementImpl:java.lang.String getOnPick()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:java.lang.String getMode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPostfieldElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPostfieldElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPostfieldElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPostfieldElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPrevElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLPrevElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLRefreshElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLRefreshElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getIValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getIName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSetvarElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSetvarElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSetvarElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSetvarElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSmallElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSmallElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSmallElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLStrongElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLStrongElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLStrongElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTdElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTdElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTdElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getOnTimer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getOnEnterBackward()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTemplateElementImpl:java.lang.String getOnEnterForward()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTimerElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTimerElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTimerElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTimerElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTrElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTrElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLUElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLUElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLUElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLWmlElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLWmlElementImpl:java.lang.String getXmlLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLWmlElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:java.lang.String genAnonTypeName(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:java.lang.String getAttrValue(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void storeKeyRef(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.XSElementDecl)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:java.lang.String getAttrValueNS(org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DeepNodeListImpl:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getNextSibling(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node nextSibling()",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node nextNode()"
        ]
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node getPreviousSibling(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node previousSibling()",
            "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node previousNode()"
        ]
    },
    "org.apache.html.dom.HTMLFormElementImpl:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLSelectElementImpl:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:java.lang.String getTitle()",
            "org.apache.html.dom.HTMLDocumentImpl:void setTitle(java.lang.String)",
            "org.apache.html.dom.HTMLDocumentImpl:void setBody(org.w3c.dom.html.HTMLElement)",
            "org.apache.html.dom.HTMLOptionElementImpl:int getIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()",
            "org.apache.html.dom.HTMLSelectElementImpl:void setSelectedIndex(int)",
            "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.RangeImpl:void checkIndex(org.w3c.dom.Node,int)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.DOMInputSource,boolean,short,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar parseSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,java.util.Hashtable)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.xni.parser.XMLInputSource,org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean element2Locator(org.w3c.dom.Element,org.apache.xerces.impl.xs.util.SimpleLocator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.util.SimpleLocator element2Locator(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element,java.lang.Exception)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaWarning(java.lang.String,java.lang.Object[],org.w3c.dom.Element,java.lang.Exception)"
        ]
    },
    "org.apache.html.dom.HTMLDOMImplementationImpl:org.w3c.dom.html.HTMLDocument createHTMLDocument(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serialize.OutputFormat:void <init>(org.w3c.dom.Document,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLDocumentImpl:org.w3c.dom.Element getElementById(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.DocumentType getDoctype()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:org.apache.xerces.dom.NamedNodeMapImpl getDefaultAttributes()",
            "org.apache.xerces.dom.EntityReferenceImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void setupEntityMap(org.w3c.dom.Document)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.OutputFormat:java.lang.String whichDoctypePublic(org.w3c.dom.Document)",
            "org.apache.xml.serialize.OutputFormat:java.lang.String whichDoctypeSystem(org.w3c.dom.Document)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Element getDocumentElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport:void <init>(org.w3c.dom.Element,org.apache.xerces.util.SymbolTable)",
            "org.apache.xerces.impl.xs.XSAnnotationImpl:void writeToDOM(org.w3c.dom.Node,short)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getRoot(org.w3c.dom.Document)"
        ]
    },
    "org.apache.xerces.dom.TextImpl:void setValues(org.apache.xerces.dom.CoreDocumentImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:boolean isHidden(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getFirstVisibleChildElement(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getLastVisibleChildElement(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextVisibleSiblingElement(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:void startDocumentParsing(org.apache.xerces.impl.XMLEntityHandler,short)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void startCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void startCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$EventHelper:void validate(javax.xml.stream.XMLEventReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.validation.StAXValidatorHelper$StreamHelper:void validate(javax.xml.stream.XMLStreamReader,javax.xml.transform.stax.StAXResult)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.XMLNamespaceBinder:void startCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void startCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void startCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:int getRowIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:int getSectionRowIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CoreDocumentImpl:void <init>(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDOMImplementationImpl:org.apache.xerces.dom.CoreDocumentImpl createDocument(org.w3c.dom.DocumentType)",
            "org.apache.xerces.dom.DocumentImpl:void <init>(org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void <init>(org.w3c.dom.DocumentType,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.wml.dom.WMLDocumentImpl:void <init>(org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultAugmentor:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void doctypeDecl(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void characters(org.w3c.dom.Text)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void cdata(org.w3c.dom.CDATASection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void comment(org.w3c.dom.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void processingInstruction(org.w3c.dom.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.EntityReferenceImpl:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.ProcessingInstructionImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMInputSource:java.lang.String getSystemIdFromNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void setupEntityMap(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void validate(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendUnparsedEntity(org.apache.xerces.xinclude.XIncludeHandler$UnparsedEntity)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendNotation(org.apache.xerces.xinclude.XIncludeHandler$Notation)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.apache.xerces.dom.NamedNodeMapImpl getDefaultAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:void setupDefaultAttributes()",
            "org.apache.xerces.dom.ElementImpl:void reconcileDefaultAttributes()"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void endCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CoreDOMImplementationImpl:org.apache.xerces.impl.dtd.XMLDTDLoader getDTDLoader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void processDTD(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XML11DTDProcessor:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XML11Configuration:void initXML11Components()",
            "org.apache.xerces.parsers.XML11DTDConfiguration:void initXML11Components()"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ASDOMImplementationImpl:org.apache.xerces.dom3.as.DOMASBuilder createDOMASBuilder()"
        ]
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.parsers.DOMASBuilderImpl:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSLoaderImpl:void <init>()",
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory:void <init>()"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void <init>(org.apache.xerces.util.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.XMLGrammarCachingConfiguration:void <init>(org.apache.xerces.util.SymbolTable,org.apache.xerces.xni.grammars.XMLGrammarPool,org.apache.xerces.xni.parser.XMLComponentManager)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void <init>(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void <init>()"
        ]
    },
    "org.apache.html.dom.HTMLBuilder:void endElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:void moveSpecifiedAttributes(org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DeferredElementNSImpl:void synchronizeData()",
            "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr)",
            "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DeferredDocumentTypeImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.DeferredElementDefinitionImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.DeferredElementImpl:void synchronizeData()",
            "org.apache.xerces.dom.DeferredElementNSImpl:void synchronizeData()",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void doctypeDecl(org.w3c.dom.DocumentType)",
            "org.apache.xerces.parsers.AbstractDOMParser:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DeferredElementNSImpl:void synchronizeData()",
            "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:int findNamePoint(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItem(java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:void reconcileDefaults(org.apache.xerces.dom.NamedNodeMapImpl)",
            "org.apache.xerces.dom.AttributeMap:int addItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node removeNamedItem(java.lang.String)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int addItem(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:int findNamePoint(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.AttributeMap:int addItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node removeNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int addItem(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NamedNodeMapImpl:int getNamedItemIndex(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:int addItem(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMErrorHandlerWrapper:void printError(org.w3c.dom.DOMError)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.DOMErrorHandlerWrapper:boolean handleError(org.w3c.dom.DOMError)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElement(org.w3c.dom.Node,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:java.lang.String getName(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:java.lang.String getLocalName(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void resolveNamespace(org.w3c.dom.Element,org.w3c.dom.Attr[],org.apache.xerces.impl.xs.SchemaNamespaceSupport)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void checkNotationType(java.lang.String,org.apache.xerces.xs.XSTypeDefinition,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseComplexTypeDecl(org.w3c.dom.Element,java.lang.String,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:boolean isAttrOrAttrGroup(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object traverseGlobalDecl(int,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,java.util.Hashtable,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:boolean nonAnnotationContent(org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.dom.ProcessingInstructionImpl:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.ProcessingInstructionImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.util.DOMInputSource:java.lang.String getSystemIdFromNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.util.DOMInputSource:java.lang.String getSystemIdFromNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.DOMInputSource:void <init>(org.w3c.dom.Node)"
        ]
    },
    "org.apache.html.dom.HTMLElementImpl:org.w3c.dom.Attr getAttributeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLElementImpl:boolean getBinary(java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean hasAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttribute(java.lang.String,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Attr getAttr(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.html.dom.HTMLElementImpl:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.dom.ElementImpl:void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean hasAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:void setIdAttributeNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.NodeImpl:boolean isDefaultNamespace(java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)",
            "org.apache.xerces.util.DOMUtil:org.w3c.dom.Attr getAttrNS(org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:boolean hasAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Attr getAttr(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.html.dom.HTMLDocumentImpl:boolean canRenameElements(java.lang.String,java.lang.String,org.apache.xerces.dom.ElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.wml.dom.WMLDocumentImpl:boolean canRenameElements(java.lang.String,java.lang.String,org.apache.xerces.dom.ElementImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node renameNode(org.w3c.dom.Node,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:boolean hasAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Attr getAttrNS(org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextSiblingElementNS(org.w3c.dom.Node,java.lang.String[][])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.DOMUtil:java.lang.String getNamespaceURI(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:java.lang.String getPrefix(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:org.xml.sax.Attributes extractNamespaces(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLBuilder:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void fillXMLAttributes(org.xml.sax.Attributes)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void fillXMLAttribute(org.xml.sax.Attributes,int)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent:void updateAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:org.xml.sax.Attributes extractNamespaces(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.xpointer.ShortHandPointer:java.lang.String getDTDDeterminedID(org.apache.xerces.xni.XMLAttributes,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.ShortHandPointer:boolean hasMatchingIdentifier(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser$AttributesProxy:java.lang.String getValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.util.AttributesProxy:java.lang.String getValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void processXMLBaseAttributes(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void processXMLLangAttributes(org.apache.xerces.xni.XMLAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void dispatchAggregateEvents(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.DocumentImpl$EnclosingAttr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void mutationEventsModifiedCharacterData(org.apache.xerces.dom.NodeImpl,java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void mutationEventsInsertedNode(org.apache.xerces.dom.NodeImpl,org.apache.xerces.dom.NodeImpl,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void removedNode(org.apache.xerces.dom.NodeImpl,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void replacedNode(org.apache.xerces.dom.NodeImpl)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void modifiedAttrValue(org.apache.xerces.dom.AttrImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:void setValue(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void modifyingCharacterData(org.apache.xerces.dom.NodeImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void setNodeValueInternal(java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void insertingNode(org.apache.xerces.dom.NodeImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void replacingNode(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void replacingData(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void replaceData(int,int,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:void moveSpecifiedAttributes(org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.DeferredDocumentTypeImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.DeferredElementDefinitionImpl:void synchronizeChildren()",
            "org.apache.xerces.dom.DeferredElementImpl:void synchronizeData()",
            "org.apache.xerces.dom.DeferredElementNSImpl:void synchronizeData()",
            "org.apache.xerces.dom.ElementImpl:void setAttribute(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr)",
            "org.apache.xerces.jaxp.validation.DOMResultBuilder:void doctypeDecl(org.w3c.dom.DocumentType)",
            "org.apache.xerces.parsers.AbstractDOMParser:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.AttributeMap:int addItem(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:int setXercesAttributeNode(org.w3c.dom.Attr)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void removedAttrNode(org.apache.xerces.dom.AttrImpl,org.apache.xerces.dom.NodeImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.dom.AttrImpl:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentTypeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:boolean isEqualNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getAccessKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getCharset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getCoords()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getHref()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getHreflang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getRel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getRev()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getShape()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getTarget()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAnchorElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getAlt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getArchive()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getCodeBase()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getHeight()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getHspace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getVspace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAppletElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getAccessKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getAlt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getCoords()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getHref()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getShape()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:java.lang.String getTarget()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBRElementImpl:java.lang.String getClear()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseElementImpl:java.lang.String getHref()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseElementImpl:java.lang.String getTarget()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseFontElementImpl:java.lang.String getColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseFontElementImpl:java.lang.String getFace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBaseFontElementImpl:java.lang.String getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getALink()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getBackground()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getBgColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getLink()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLBodyElementImpl:java.lang.String getVLink()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:java.lang.String getAccessKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDivElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:java.lang.String getTitle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:java.lang.String getLang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:java.lang.String getDir()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:java.lang.String getClassName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLElementImpl:java.lang.String getCapitalized(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLHeadingElementImpl:java.lang.String getAlign()"
        ]
    },
    "org.apache.html.dom.HTMLFontElementImpl:java.lang.String getColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFontElementImpl:java.lang.String getFace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFontElementImpl:java.lang.String getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getAcceptCharset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getAction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getEnctype()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getMethod()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFormElementImpl:java.lang.String getTarget()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getFrameBorder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getLongDesc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getMarginHeight()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getMarginWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getScrolling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:java.lang.String getSrc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameSetElementImpl:java.lang.String getCols()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameSetElementImpl:java.lang.String getRows()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHRElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHRElementImpl:java.lang.String getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHRElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHeadElementImpl:java.lang.String getProfile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHtmlElementImpl:java.lang.String getVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getFrameBorder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getHeight()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getLongDesc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getMarginHeight()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getMarginWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getScrolling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getSrc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIFrameElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getLowSrc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getSrc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getAlt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getBorder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getHeight()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getHspace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getLongDesc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getUseMap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getVspace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getDefaultValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getAccept()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getAccessKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getAlt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:int getMaxLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getSrc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getUseMap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLIsIndexElementImpl:java.lang.String getPrompt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLIElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLIElementImpl:int getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLabelElementImpl:java.lang.String getAccessKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLabelElementImpl:java.lang.String getHtmlFor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLegendElementImpl:java.lang.String getAccessKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLegendElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getCharset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getHref()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getHreflang()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getMedia()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getRel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getRev()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getTarget()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLLinkElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMapElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMetaElementImpl:java.lang.String getContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMetaElementImpl:java.lang.String getHttpEquiv()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMetaElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMetaElementImpl:java.lang.String getScheme()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLModElementImpl:java.lang.String getCite()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLModElementImpl:java.lang.String getDateTime()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOListElementImpl:int getStart()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOListElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getArchive()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getBorder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getCodeBase()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getCodeType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getData()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getHeight()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getHspace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getStandby()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getUseMap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getVspace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptGroupElementImpl:java.lang.String getLabel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:java.lang.String getLabel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParagraphElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParamElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParamElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParamElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLParamElementImpl:java.lang.String getValueType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLPreElementImpl:int getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLQuoteElementImpl:java.lang.String getCite()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getHtmlFor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getEvent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getCharset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getSrc()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLScriptElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:int getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLStyleElementImpl:java.lang.String getMedia()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLStyleElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCaptionElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getAbbr()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getAxis()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getBgColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getCh()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getChOff()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:int getColSpan()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getHeaders()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getHeight()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:int getRowSpan()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getScope()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getVAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getCh()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getChOff()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:int getSpan()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getVAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableColElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getBgColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getBorder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getCellPadding()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getCellSpacing()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getFrame()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getRules()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getSummary()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableElementImpl:java.lang.String getWidth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getBgColor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getCh()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getChOff()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableRowElementImpl:java.lang.String getVAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:java.lang.String getCh()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:java.lang.String getChOff()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableSectionElementImpl:java.lang.String getVAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getDefaultValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getAccessKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:int getCols()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:int getRows()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLUListElementImpl:java.lang.String getType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:boolean getOrdered()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLCardElementImpl:boolean getNewContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:boolean getEmptyOk()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLMetaElementImpl:boolean getForua()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:boolean getMultiple()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:int getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:int getMaxLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLInputElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLSelectElementImpl:int getTabIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.wml.dom.WMLTableElementImpl:int getColumns()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node nextSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.TreeWalkerImpl:org.w3c.dom.Node previousSibling()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.util.SimpleLocator element2Locator(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument1(boolean,boolean,org.apache.xerces.xni.parser.XMLInputSource,org.w3c.dom.Element,java.io.IOException)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaWarning(java.lang.String,java.lang.Object[],org.w3c.dom.Element,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument1(boolean,boolean,org.apache.xerces.xni.parser.XMLInputSource,org.w3c.dom.Element,java.io.IOException)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaWarning(java.lang.String,java.lang.Object[],org.w3c.dom.Element)"
        ]
    },
    "org.apache.xml.serialize.OutputFormat:java.lang.String whichDoctypePublic(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.OutputFormat:void <init>(org.w3c.dom.Document)"
        ]
    },
    "org.apache.xml.serialize.OutputFormat:java.lang.String whichDoctypeSystem(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.OutputFormat:void <init>(org.w3c.dom.Document)"
        ]
    },
    "org.apache.xerces.util.DOMUtil:org.w3c.dom.Element getNextVisibleSiblingElement(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void startCDATA(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void startCDATA(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startCDATA(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.CoreDOMImplementationImpl:org.apache.xerces.dom.CoreDocumentImpl createDocument(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDOMImplementationImpl:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void <init>(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMImplementationImpl:org.apache.xerces.dom.CoreDocumentImpl createDocument(org.w3c.dom.DocumentType)",
            "org.apache.xerces.dom.PSVIDocumentImpl:void <init>(org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.wml.dom.WMLDocumentImpl:void <init>(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.wml.dom.WMLDOMImplementationImpl:org.apache.xerces.dom.CoreDocumentImpl createDocument(org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMResultBuilder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void ignorableWhitespace(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void ignorableWhitespace(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void endDocument(org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendUnparsedEntity(org.apache.xerces.xinclude.XIncludeHandler$UnparsedEntity)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendUnparsedEntity(org.apache.xerces.xinclude.XIncludeHandler$UnparsedEntity)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendUnparsedEntity(org.apache.xerces.xinclude.XIncludeHandler$UnparsedEntity)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendUnparsedEntity(org.apache.xerces.xinclude.XIncludeHandler$UnparsedEntity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void checkUnparsedEntity(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendUnparsedEntity(org.apache.xerces.xinclude.XIncludeHandler$UnparsedEntity)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendNotation(org.apache.xerces.xinclude.XIncludeHandler$Notation)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendNotation(org.apache.xerces.xinclude.XIncludeHandler$Notation)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendNotation(org.apache.xerces.xinclude.XIncludeHandler$Notation)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendNotation(org.apache.xerces.xinclude.XIncludeHandler$Notation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void checkNotation(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendNotation(org.apache.xerces.xinclude.XIncludeHandler$Notation)"
        ]
    },
    "org.apache.xerces.dom.ASDOMImplementationImpl:org.apache.xerces.dom3.as.DOMASBuilder createDOMASBuilder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSLoaderImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSImplementationImpl:org.apache.xerces.xs.XSLoader createXSLoader(org.apache.xerces.xs.StringList)"
        ]
    },
    "org.apache.xerces.jaxp.validation.XMLSchemaFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.DeferredElementDefinitionImpl:void synchronizeChildren()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementDefinitionImpl:org.w3c.dom.NamedNodeMap getAttributes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node cloneNode(boolean)",
            "org.apache.xerces.dom.ParentNode:void setOwnerDocument(org.apache.xerces.dom.CoreDocumentImpl)",
            "org.apache.xerces.dom.ParentNode:boolean hasChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodes()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getFirstChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node getLastChild()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalInsertBefore(org.w3c.dom.Node,org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:int nodeListGetLength()",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node nodeListItem(int)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.NodeList getChildNodesUnoptimized()",
            "org.apache.xerces.dom.ParentNode:void normalize()",
            "org.apache.xerces.dom.ParentNode:void setReadOnly(boolean,boolean)",
            "org.apache.xerces.dom.ParentNode:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node getNamedItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node remove(org.apache.xerces.dom.AttrImpl,int,boolean)",
            "org.apache.xerces.dom.AttributeMap:org.w3c.dom.Node internalRemoveNamedItemNS(java.lang.String,java.lang.String,boolean)",
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node adoptNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DocumentTypeImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getXMLBaseAttribute()",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNode(java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementImpl:org.apache.xerces.dom.NamedNodeMapImpl getDefaultAttributes()",
            "org.apache.xerces.dom.EntityReferenceImpl:java.lang.String getBaseURI()",
            "org.apache.xerces.dom.EntityReferenceImpl:void synchronizeChildren()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:boolean isEntityUnparsed(java.lang.String)",
            "org.apache.xerces.parsers.AbstractDOMParser:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void externalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void unparsedEntityDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node removeNamedItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer$XMLAttributesProxy:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xerces.dom.ElementImpl:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xerces.dom.ElementImpl:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.ElementNSImpl:org.w3c.dom.Attr getXMLBaseAttribute()"
        ]
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:org.w3c.dom.Node removeNamedItemNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.NamedNodeMapImpl:int getNamedItemIndex(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:int getXercesAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.util.DOMErrorHandlerWrapper:boolean handleError(org.w3c.dom.DOMError)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:void reportDOMError(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,java.lang.String,short,java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void reportDOMFatalError(java.lang.Exception)",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(org.w3c.dom.Node)",
            "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(int)",
            "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parseURI(java.lang.String)",
            "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.parsers.DOMParserImpl:org.apache.xerces.xni.parser.XMLInputSource dom2xmlInputSource(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.util.DOMErrorHandlerWrapper:void warning(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)",
            "org.apache.xerces.util.DOMErrorHandlerWrapper:void error(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)",
            "org.apache.xerces.util.DOMErrorHandlerWrapper:void fatalError(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void printCDATAText(java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void fatalError(java.lang.String)",
            "org.apache.xml.serialize.DOMSerializerImpl:java.lang.String writeToString(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean write(org.w3c.dom.Node,org.w3c.dom.ls.LSOutput)",
            "org.apache.xml.serialize.DOMSerializerImpl:boolean writeToURI(org.w3c.dom.Node,java.lang.String)",
            "org.apache.xml.serialize.XML11Serializer:void printCDATAText(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void checkNotationType(java.lang.String,org.apache.xerces.xs.XSTypeDefinition,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:boolean isAttrOrAttrGroup(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void processComplexContent(org.w3c.dom.Element,boolean,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.util.DOMInputSource:void <init>(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.DOMInputSource:void <init>()"
        ]
    },
    "org.apache.html.dom.HTMLElementImpl:boolean getBinary(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLAreaElementImpl:boolean getNoHref()",
            "org.apache.html.dom.HTMLButtonElementImpl:boolean getDisabled()",
            "org.apache.html.dom.HTMLDListElementImpl:boolean getCompact()",
            "org.apache.html.dom.HTMLDirectoryElementImpl:boolean getCompact()",
            "org.apache.html.dom.HTMLFrameElementImpl:boolean getNoResize()",
            "org.apache.html.dom.HTMLHRElementImpl:boolean getNoShade()",
            "org.apache.html.dom.HTMLImageElementImpl:boolean getIsMap()",
            "org.apache.html.dom.HTMLInputElementImpl:boolean getDefaultChecked()",
            "org.apache.html.dom.HTMLInputElementImpl:boolean getChecked()",
            "org.apache.html.dom.HTMLInputElementImpl:boolean getDisabled()",
            "org.apache.html.dom.HTMLInputElementImpl:boolean getReadOnly()",
            "org.apache.html.dom.HTMLLinkElementImpl:boolean getDisabled()",
            "org.apache.html.dom.HTMLMenuElementImpl:boolean getCompact()",
            "org.apache.html.dom.HTMLOListElementImpl:boolean getCompact()",
            "org.apache.html.dom.HTMLObjectElementImpl:boolean getDeclare()",
            "org.apache.html.dom.HTMLOptGroupElementImpl:boolean getDisabled()",
            "org.apache.html.dom.HTMLOptionElementImpl:boolean getDefaultSelected()",
            "org.apache.html.dom.HTMLOptionElementImpl:boolean getDisabled()",
            "org.apache.html.dom.HTMLOptionElementImpl:boolean getSelected()",
            "org.apache.html.dom.HTMLScriptElementImpl:boolean getDefer()",
            "org.apache.html.dom.HTMLSelectElementImpl:boolean getDisabled()",
            "org.apache.html.dom.HTMLSelectElementImpl:boolean getMultiple()",
            "org.apache.html.dom.HTMLStyleElementImpl:boolean getDisabled()",
            "org.apache.html.dom.HTMLTableCellElementImpl:boolean getNoWrap()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:boolean getDisabled()",
            "org.apache.html.dom.HTMLTextAreaElementImpl:boolean getReadOnly()",
            "org.apache.html.dom.HTMLUListElementImpl:boolean getCompact()"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:org.xml.sax.Attributes extractNamespaces(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.xpointer.ShortHandPointer:boolean hasMatchingIdentifier(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.ShortHandPointer:boolean resolveXPointer(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void mutationEventsModifiedCharacterData(org.apache.xerces.dom.NodeImpl,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DocumentImpl:void modifiedCharacterData(org.apache.xerces.dom.NodeImpl,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void removedNode(org.apache.xerces.dom.NodeImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node,boolean)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node internalRemoveChild(org.w3c.dom.Node,boolean)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void replacedNode(org.apache.xerces.dom.NodeImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.AttrImpl:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xerces.dom.ParentNode:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.CharacterDataImpl:void setNodeValueInternal(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void setNodeValueInternal(java.lang.String)",
            "org.apache.xerces.dom.CharacterDataImpl:void internalDeleteData(int,int,boolean)",
            "org.apache.xerces.dom.CharacterDataImpl:void internalInsertData(int,java.lang.String,boolean)"
        ]
    },
    "org.apache.html.dom.HTMLHeadingElementImpl:java.lang.String getAlign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument1(boolean,boolean,org.apache.xerces.xni.parser.XMLInputSource,org.w3c.dom.Element,java.io.IOException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.SAXInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.DOMInputSource,boolean,short,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element getSchemaDocument(java.lang.String,org.apache.xerces.util.StAXInputSource,boolean,short,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void buildGlobalNameRegistries()",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void traverseSchemas(java.util.ArrayList)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGlobalDecl(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,int,org.apache.xerces.xni.QName,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:java.lang.Object getGrpOrAttrGrpRedefinedByRestriction(int,org.apache.xerces.xni.QName,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.xni.parser.XMLInputSource resolveSchemaSource(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSharingError(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,java.util.Hashtable,java.util.Hashtable,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void checkForDuplicateNames(java.lang.String,int,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void renameRedefiningComponents(org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.w3c.dom.Element,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:int changeRedefineGroup(java.lang.String,java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaWarning(java.lang.String,java.lang.Object[],org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.SchemaGrammar findGrammar(org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.w3c.dom.Element resolveSchema(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.xni.parser.XMLInputSource resolveSchemaSource(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)"
        ]
    },
    "org.apache.xerces.dom.DOMImplementationImpl:org.apache.xerces.dom.CoreDocumentImpl createDocument(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDOMImplementationImpl:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.xerces.dom.PSVIDocumentImpl:void <init>(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.PSVIDOMImplementationImpl:org.apache.xerces.dom.CoreDocumentImpl createDocument(org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.wml.dom.WMLDOMImplementationImpl:org.apache.xerces.dom.CoreDocumentImpl createDocument(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDOMImplementationImpl:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void checkUnparsedEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void checkNotation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:org.apache.xerces.xni.XMLAttributes processAttributes(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkUnparsedEntity(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.XSImplementationImpl:org.apache.xerces.xs.XSLoader createXSLoader(org.apache.xerces.xs.StringList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.dom.ElementDefinitionImpl:org.w3c.dom.NamedNodeMap getAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDocumentImpl:org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean,boolean,java.util.HashMap)",
            "org.apache.xerces.dom.CoreDocumentImpl:void undeferChildren(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DocumentImpl:void dispatchEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)",
            "org.apache.xerces.dom.DocumentImpl:void dispatchingEventToSubtree(org.w3c.dom.Node,org.w3c.dom.events.Event)",
            "org.apache.xerces.dom.ElementImpl:org.apache.xerces.dom.NamedNodeMapImpl getDefaultAttributes()",
            "org.apache.xerces.dom.NodeImpl:short compareDocumentPosition(org.w3c.dom.Node)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xerces.dom.NodeImpl:java.lang.String lookupNamespacePrefix(java.lang.String,org.apache.xerces.dom.ElementImpl)",
            "org.apache.xerces.impl.xs.opti.SchemaDOM:void traverse(org.w3c.dom.Node,int)",
            "org.apache.xerces.impl.xs.SchemaNamespaceSupport$SchemaRootContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper$DOMNamespaceContext:void fillNamespaceContext()",
            "org.apache.xerces.jaxp.validation.DOMValidatorHelper:void beginNode(org.w3c.dom.Node)",
            "org.apache.xerces.parsers.AbstractDOMParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.util.DOMUtil:void copyInto(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.ElementImpl:org.w3c.dom.Attr getXMLBaseAttribute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()"
        ]
    },
    "org.apache.xerces.jaxp.validation.DOMValidatorHelper:boolean isEntityUnparsed(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.validation.ValidationState:boolean isEntityUnparsed(java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.ElementNSImpl:org.w3c.dom.Attr getXMLBaseAttribute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.ElementImpl:java.lang.String getBaseURI()"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void reportDOMError(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,java.lang.String,short,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void namespaceFixUp(org.apache.xerces.dom.ElementImpl,org.apache.xerces.dom.AttributeMap)",
            "org.apache.xerces.dom.DOMNormalizer:void isCDataWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,java.lang.String,boolean)",
            "org.apache.xerces.dom.DOMNormalizer:void isXMLCharWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,java.lang.String,boolean)",
            "org.apache.xerces.dom.DOMNormalizer:void isCommentWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,java.lang.String,boolean)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:void reportDOMFatalError(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURIList(org.apache.xerces.xs.StringList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadInputList(org.apache.xerces.xs.LSInputList)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel loadURI(java.lang.String)",
            "org.apache.xerces.impl.xs.XSLoaderImpl:org.apache.xerces.xs.XSModel load(org.w3c.dom.ls.LSInput)"
        ]
    },
    "org.apache.xerces.parsers.AbstractDOMParser:void handleBaseURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractDOMParser:void endGeneralEntity(java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.DOMParserImpl:org.apache.xerces.xni.parser.XMLInputSource dom2xmlInputSource(org.w3c.dom.ls.LSInput)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.DOMASBuilderImpl:org.apache.xerces.dom3.as.ASModel parseASInputSource(org.w3c.dom.ls.LSInput)",
            "org.apache.xerces.parsers.DOMParserImpl:org.w3c.dom.Document parse(org.w3c.dom.ls.LSInput)"
        ]
    },
    "org.apache.xerces.util.DOMErrorHandlerWrapper:void warning(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)",
            "org.apache.xerces.util.ErrorHandlerProxy:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xerces.util.DOMErrorHandlerWrapper:void error(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)",
            "org.apache.xerces.util.ErrorHandlerProxy:void error(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xerces.util.DOMErrorHandlerWrapper:void fatalError(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)",
            "org.apache.xerces.util.ErrorHandlerProxy:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void printCDATAText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void fatalError(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(char[],int,int)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void printCDATAText(java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void surrogates(int,int,boolean)",
            "org.apache.xml.serialize.XML11Serializer:void characters(char[],int,int)",
            "org.apache.xml.serialize.XML11Serializer:void printEscaped(java.lang.String)",
            "org.apache.xml.serialize.XML11Serializer:void printCDATAText(java.lang.String)",
            "org.apache.xml.serialize.XML11Serializer:void surrogates(int,int,boolean)",
            "org.apache.xml.serialize.XML11Serializer:void printText(java.lang.String,boolean,boolean)",
            "org.apache.xml.serialize.XML11Serializer:void printText(char[],int,int,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void printEscaped(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void printText(java.lang.String,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void printText(char[],int,int,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.XML11Serializer:void printCDATAText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(java.lang.String)"
        ]
    },
    "org.apache.xerces.util.DOMInputSource:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLAreaElementImpl:boolean getNoHref()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLButtonElementImpl:boolean getDisabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDListElementImpl:boolean getCompact()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLDirectoryElementImpl:boolean getCompact()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLFrameElementImpl:boolean getNoResize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLHRElementImpl:boolean getNoShade()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLImageElementImpl:boolean getIsMap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:boolean getDefaultChecked()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:boolean getChecked()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:boolean getDisabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLInputElementImpl:boolean getReadOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.DOMUtil:boolean isHidden(org.w3c.dom.Node)"
        ]
    },
    "org.apache.html.dom.HTMLLinkElementImpl:boolean getDisabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLMenuElementImpl:boolean getCompact()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOListElementImpl:boolean getCompact()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLObjectElementImpl:boolean getDeclare()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptGroupElementImpl:boolean getDisabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:boolean getDefaultSelected()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:boolean getDisabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLOptionElementImpl:boolean getSelected()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.html.dom.HTMLSelectElementImpl:int getSelectedIndex()"
        ]
    },
    "org.apache.html.dom.HTMLScriptElementImpl:boolean getDefer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:boolean getDisabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLSelectElementImpl:boolean getMultiple()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLStyleElementImpl:boolean getDisabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTableCellElementImpl:boolean getNoWrap()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:boolean getDisabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.html.dom.HTMLTextAreaElementImpl:boolean getReadOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.DOMUtil:boolean isHidden(org.w3c.dom.Node)"
        ]
    },
    "org.apache.html.dom.HTMLUListElementImpl:boolean getCompact()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.xpointer.ShortHandPointer:boolean resolveXPointer(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.ElementSchemePointer:boolean resolveXPointer(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)",
            "org.apache.xerces.xpointer.XPointerHandler:boolean resolveXPointer(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void modifiedCharacterData(org.apache.xerces.dom.NodeImpl,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void setNodeValueInternal(java.lang.String,boolean)",
            "org.apache.xerces.dom.DocumentImpl:void replacedCharacterData(org.apache.xerces.dom.NodeImpl,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xerces.dom.CharacterDataImpl:void setNodeValueInternal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void setNodeValue(java.lang.String)",
            "org.apache.xerces.dom.RangeImpl:void insertNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:java.lang.Object[] checkAttributes(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,boolean)",
            "org.apache.xerces.impl.xs.traversers.XSAttributeChecker:void checkNonSchemaAttributes(org.apache.xerces.impl.xs.XSGrammarBucket)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDAbstractIDConstraintTraverser:boolean traverseIdentityConstraint(org.apache.xerces.impl.xs.identity.IdentityConstraint,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,java.lang.Object[])",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseAll(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractParticleTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseSeqChoice(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSAnnotationImpl traverseAnnotationDecl(org.w3c.dom.Element,java.lang.Object[],boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser$FacetInfo traverseFacets(org.w3c.dom.Element,org.apache.xerces.impl.dv.XSSimpleType,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.w3c.dom.Element traverseAttrsAndAttrGrps(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:void checkNotationType(java.lang.String,org.apache.xerces.xs.XSTypeDefinition,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDAbstractTraverser:org.apache.xerces.impl.xs.XSParticleDecl checkOccurrences(org.apache.xerces.impl.xs.XSParticleDecl,java.lang.String,org.w3c.dom.Element,int,long)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeGroupTraverser:org.apache.xerces.impl.xs.XSAttributeGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeUseImpl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDAttributeTraverser:org.apache.xerces.impl.xs.XSAttributeDecl traverseNamedAttr(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.impl.xs.XSComplexTypeDecl)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:org.apache.xerces.impl.xs.XSComplexTypeDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void mergeAttributes(org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.XSAttributeGroupDecl,java.lang.String,boolean,org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void handleComplexTypeError(java.lang.String,java.lang.Object[],org.w3c.dom.Element)",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:void traverseLocal(org.apache.xerces.impl.xs.XSParticleDecl,org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,int,org.apache.xerces.xs.XSObject,java.lang.String[])",
            "org.apache.xerces.impl.xs.traversers.XSDElementTraverser:org.apache.xerces.impl.xs.XSElementDecl traverseNamedElement(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar,boolean,org.apache.xerces.xs.XSObject)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSParticleDecl traverseLocal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDGroupTraverser:org.apache.xerces.impl.xs.XSGroupDecl traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDKeyrefTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDNotationTraverser:org.apache.xerces.impl.xs.XSNotationDecl traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType traverseGlobal(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType getSimpleType(java.lang.String,org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDSimpleTypeTraverser:org.apache.xerces.impl.dv.XSSimpleType findDTValidator(org.w3c.dom.Element,java.lang.String,org.apache.xerces.xni.QName,short,org.apache.xerces.impl.xs.traversers.XSDocumentInfo)",
            "org.apache.xerces.impl.xs.traversers.XSDUniqueOrKeyTraverser:void traverse(org.w3c.dom.Element,org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDWildcardTraverser:org.apache.xerces.impl.xs.XSWildcardDecl traverseWildcardDecl(org.w3c.dom.Element,java.lang.Object[],org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.xni.parser.XMLInputSource resolveSchemaSource(org.apache.xerces.impl.xs.XSDDescription,boolean,org.w3c.dom.Element,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:org.apache.xerces.impl.xs.traversers.XSDocumentInfo constructTrees(org.w3c.dom.Element,java.lang.String,org.apache.xerces.impl.xs.XSDDescription,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSharingError(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalAttributeGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalNotationDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalGroupDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void addGlobalTypeDecls(org.apache.xerces.impl.xs.SchemaGrammar,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.dom.PSVIDOMImplementationImpl:org.apache.xerces.dom.CoreDocumentImpl createDocument(org.w3c.dom.DocumentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CoreDOMImplementationImpl:org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void isCDataWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void isXMLCharWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xerces.dom.DOMNormalizer:void isAttrValueWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,org.w3c.dom.NamedNodeMap,org.w3c.dom.Attr,java.lang.String,boolean)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)"
        ]
    },
    "org.apache.xerces.dom.DOMNormalizer:void isCommentWF(org.w3c.dom.DOMErrorHandler,org.apache.xerces.dom.DOMErrorImpl,org.apache.xerces.dom.DOMLocatorImpl,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.DOMNormalizer:org.w3c.dom.Node normalizeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.DOMSerializerImpl:void verify(org.w3c.dom.Node,boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element,java.lang.Exception)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaWarning(java.lang.String,java.lang.Object[],org.w3c.dom.Element,java.lang.Exception)",
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)",
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short)"
        ]
    },
    "org.apache.xerces.util.ErrorHandlerProxy:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ErrorHandlerProxy:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xerces.util.ErrorHandlerWrapper:void warning(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)"
        ]
    },
    "org.apache.xerces.util.ErrorHandlerProxy:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.XMLSchemaFactory:javax.xml.validation.Schema newSchema(javax.xml.transform.Source[])",
            "org.apache.xerces.util.ErrorHandlerProxy:void error(org.xml.sax.SAXParseException)",
            "org.apache.xerces.util.ErrorHandlerWrapper:void error(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)"
        ]
    },
    "org.apache.xerces.util.ErrorHandlerProxy:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.util.ErrorHandlerProxy:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xerces.util.ErrorHandlerWrapper:void fatalError(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)",
            "org.apache.xml.serialize.HTMLSerializer:void characters(java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xml.serialize.HTMLSerializer:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void surrogates(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(char[],int,int)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void printCDATAText(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void printEscaped(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void printText(java.lang.String,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void printText(char[],int,int,boolean,boolean)"
        ]
    },
    "org.apache.xml.serialize.XML11Serializer:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.XML11Serializer:void printEscaped(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void printNamespaceAttr(java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void printAttribute(java.lang.String,java.lang.String,boolean,org.w3c.dom.Attr)"
        ]
    },
    "org.apache.xml.serialize.XML11Serializer:void surrogates(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(char[],int,int)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void printCDATAText(java.lang.String)",
            "org.apache.xml.serialize.XML11Serializer:void characters(char[],int,int)",
            "org.apache.xml.serialize.XML11Serializer:void printEscaped(java.lang.String)",
            "org.apache.xml.serialize.XML11Serializer:void printCDATAText(java.lang.String)",
            "org.apache.xml.serialize.XML11Serializer:void printText(java.lang.String,boolean,boolean)",
            "org.apache.xml.serialize.XML11Serializer:void printText(char[],int,int,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void printEscaped(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void printText(java.lang.String,boolean,boolean)",
            "org.apache.xml.serialize.XMLSerializer:void printText(char[],int,int,boolean,boolean)"
        ]
    },
    "org.apache.xml.serialize.XML11Serializer:void printText(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void processingInstructionIO(java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void comment(java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializePreRoot()",
            "org.apache.xml.serialize.XMLSerializer:void startDocument(java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.XML11Serializer:void printText(char[],int,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(char[],int,int)",
            "org.apache.xml.serialize.XML11Serializer:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void printEscaped(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void printNamespaceAttr(java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void printAttribute(java.lang.String,java.lang.String,boolean,org.w3c.dom.Attr)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void printText(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void processingInstructionIO(java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void comment(java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializePreRoot()",
            "org.apache.xml.serialize.XMLSerializer:void startDocument(java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void printText(char[],int,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void characters(char[],int,int)"
        ]
    },
    "org.apache.xerces.xpointer.ElementSchemePointer:boolean resolveXPointer(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler:boolean resolveXPointer(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:boolean resolveXPointer(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xpointer.XPointerHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.dom.DocumentImpl:void replacedCharacterData(org.apache.xerces.dom.NodeImpl,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.dom.CharacterDataImpl:void replaceData(int,int,java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void mergeAttributes(org.apache.xerces.impl.xs.XSAttributeGroupDecl,org.apache.xerces.impl.xs.XSAttributeGroupDecl,java.lang.String,boolean,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseSimpleContent(org.w3c.dom.Element,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)",
            "org.apache.xerces.impl.xs.traversers.XSDComplexTypeTraverser:void traverseComplexContent(org.w3c.dom.Element,boolean,org.apache.xerces.impl.xs.traversers.XSDocumentInfo,org.apache.xerces.impl.xs.SchemaGrammar)"
        ]
    },
    "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaError(java.lang.String,java.lang.Object[],org.w3c.dom.Element,java.lang.Exception)",
            "org.apache.xerces.impl.xs.traversers.XSDHandler:void reportSchemaWarning(java.lang.String,java.lang.Object[],org.w3c.dom.Element,java.lang.Exception)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:void reportError(java.lang.String,java.lang.Object[],short,java.lang.Exception)"
        ]
    },
    "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter:void reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short)",
            "org.apache.xerces.impl.xs.XSConstraints:void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])",
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(java.lang.String,java.lang.String,java.lang.Object[],short)"
        ]
    },
    "org.apache.xerces.util.ErrorHandlerWrapper:void warning(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)",
            "org.apache.xerces.util.ErrorHandlerProxy:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xerces.util.ErrorHandlerWrapper:void error(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)",
            "org.apache.xerces.util.ErrorHandlerProxy:void error(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xerces.util.ErrorHandlerWrapper:void fatalError(java.lang.String,java.lang.String,org.apache.xerces.xni.parser.XMLParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short,java.lang.Exception)",
            "org.apache.xerces.util.ErrorHandlerProxy:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void internalEntityDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void printNamespaceAttr(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void printAttribute(java.lang.String,java.lang.String,boolean,org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void processingInstructionIO(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void comment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void comment(char[],int,int)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void serializeNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void serializePreRoot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.BaseMarkupSerializer:void serialize(org.w3c.dom.Document)",
            "org.apache.xml.serialize.BaseMarkupSerializer:void endDocument()",
            "org.apache.xml.serialize.HTMLSerializer:void startDocument(java.lang.String)",
            "org.apache.xml.serialize.TextSerializer:void startDocument(java.lang.String)",
            "org.apache.xml.serialize.XMLSerializer:void startDocument(java.lang.String)"
        ]
    },
    "org.apache.xml.serialize.XMLSerializer:void startDocument(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.XMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.XMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void reportError(java.lang.String,java.lang.Object[],short,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void reportResourceError(java.lang.String,java.lang.Object[],java.lang.Exception)",
            "org.apache.xerces.xinclude.XIncludeHandler:void reportFatalError(java.lang.String,java.lang.Object[],java.lang.Exception)"
        ]
    },
    "org.apache.xerces.impl.xs.opti.SchemaDOMParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void characters(char[],int,int)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLStreamReader)",
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void sendCharactersToSchemaParser(java.lang.String,boolean)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanCharReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void handleCharacter(char,java.lang.String)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$SAX2XNI:void characters(char[],int,int)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter:void reportError(org.apache.xerces.xni.XMLLocator,java.lang.String,java.lang.String,java.lang.Object[],short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.impl.xs.XSConstraints:void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.XMLErrorReporter:java.lang.String reportError(java.lang.String,java.lang.String,java.lang.Object[],short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XML11NSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void checkStandaloneEntityRef(java.lang.String,org.apache.xerces.impl.dtd.DTDGrammar,org.apache.xerces.impl.dtd.XMLEntityDecl,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void notationDecl(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void element(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void checkDeclaredElements(org.apache.xerces.impl.dtd.DTDGrammar,int,int,org.apache.xerces.impl.dtd.XMLContentSpec)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void addDTDDefaultAttrsAndValidate(org.apache.xerces.xni.QName,int,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void validateDTDattribute(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.impl.dtd.XMLAttributeDecl)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void rootElementSpecified(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.dtd.XMLNSDTDValidator:void startNamespaceScope(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.models.CMNodeFactory:void nodeCountCheck()",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processExternalHints(java.lang.String,java.lang.String,java.util.Hashtable,org.apache.xerces.impl.XMLErrorReporter)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.parser.XMLInputSource xsdToXMLInputSource(java.lang.Object)",
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void initGrammarBucket()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter:void reportError(java.lang.String,java.lang.String,java.lang.Object[],short)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.impl.xs.SchemaGrammar findSchemaGrammar(short,java.lang.String,org.apache.xerces.xni.QName,org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XSConstraints:void reportSchemaError(org.apache.xerces.impl.XMLErrorReporter,org.apache.xerces.impl.xs.util.SimpleLocator,java.lang.String,java.lang.Object[])",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11EntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startPE(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLEntityManager:void addInternalEntity(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLEntityManager:void addExternalEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLEntityManager:void addUnparsedEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:java.io.Reader createReader(java.io.InputStream,java.lang.String,java.lang.Boolean)",
            "org.apache.xerces.impl.XMLEntityScanner:boolean scanQName(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations,boolean)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void reportFatalError(java.lang.String,java.lang.Object[])",
            "org.apache.xerces.impl.XMLVersionDetector:short determineDocVersion(org.apache.xerces.xni.parser.XMLInputSource)",
            "org.apache.xerces.xinclude.XIncludeTextReader:void parse()",
            "org.apache.xerces.xpointer.XPointerHandler:void reportWarning(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void internalEntityDecl(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.BaseMarkupSerializer:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void endDocument(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.HTMLSerializer:void startDocument(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serialize.HTMLSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.HTMLSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xml.serialize.TextSerializer:void startDocument(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serialize.TextSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)",
            "org.apache.xml.serialize.TextSerializer:void serializeElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void reportResourceError(java.lang.String,java.lang.Object[],java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:void reportResourceError(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void reportFatalError(java.lang.String,java.lang.Object[],java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void reportFatalError(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.SchemaContentHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void sendCharactersToSchemaParser(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.traversers.StAXSchemaParser:void parse(javax.xml.stream.XMLEventReader)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void checkStandaloneEntityRef(java.lang.String,org.apache.xerces.impl.dtd.DTDGrammar,org.apache.xerces.impl.dtd.XMLEntityDecl,org.apache.xerces.impl.XMLErrorReporter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void element(java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void element(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void checkDeclaredElements(org.apache.xerces.impl.dtd.DTDGrammar,int,int,org.apache.xerces.impl.dtd.XMLContentSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void checkDeclaredElements(org.apache.xerces.impl.dtd.DTDGrammar)",
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void checkDeclaredElements(org.apache.xerces.impl.dtd.DTDGrammar,int,int,org.apache.xerces.impl.dtd.XMLContentSpec)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDValidator:void rootElementSpecified(org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:boolean handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMNodeFactory:void nodeCountCheck()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMNodeFactory:org.apache.xerces.impl.dtd.models.CMNode getCMLeafNode(int,java.lang.Object,int,int)",
            "org.apache.xerces.impl.xs.models.CMNodeFactory:org.apache.xerces.impl.dtd.models.CMNode getCMRepeatingLeafNode(int,java.lang.Object,int,int,int,int)",
            "org.apache.xerces.impl.xs.models.CMNodeFactory:org.apache.xerces.impl.dtd.models.CMNode getCMUniOpNode(int,org.apache.xerces.impl.dtd.models.CMNode)",
            "org.apache.xerces.impl.xs.models.CMNodeFactory:org.apache.xerces.impl.dtd.models.CMNode getCMBinOpNode(int,org.apache.xerces.impl.dtd.models.CMNode,org.apache.xerces.impl.dtd.models.CMNode)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaLoader:org.apache.xerces.xni.parser.XMLInputSource xsdToXMLInputSource(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaLoader:void processJAXPSchemaSource(java.util.Hashtable)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$XSIErrorReporter:void reportError(java.lang.String,java.lang.String,java.lang.Object[],short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void storeLocations(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void reportSchemaError(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void addInternalEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void addExternalEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:void addUnparsedEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager:java.io.Reader createReader(java.io.InputStream,java.lang.String,java.lang.Boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityManager$ScannedEntity:void setReader(java.io.InputStream,java.lang.String,java.lang.Boolean)",
            "org.apache.xerces.impl.XMLEntityManager:java.lang.String setupCurrentEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLScanner:void reportFatalError(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XML11DTDScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XML11DocumentScannerImpl:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XML11NSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanMixed(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanChildren(java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanAttlistDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttType(java.lang.String,java.lang.String)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:java.lang.String scanAttDefaultDecl(java.lang.String,java.lang.String,java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanEntityValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanNotationDecl()",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanConditionalSect(int)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanDecls(boolean)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean skipSeparator(boolean,boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:void endOfFileHook(java.io.EOFException)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void endEntity(java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanAttribute(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanContent()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:boolean scanCDATASection(boolean)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanEntityReference()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:int handleEndElement(org.apache.xerces.xni.QName,boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void endOfFileHook(java.io.EOFException)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$PrologDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$TrailingMiscDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl$XMLDeclDispatcher:boolean dispatch(boolean)",
            "org.apache.xerces.impl.XMLDocumentScannerImpl:boolean scanDoctypeDecl()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElement()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:boolean scanStartElementAfterName()",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:void scanAttribute(org.apache.xerces.util.XMLAttributesImpl)",
            "org.apache.xerces.impl.XMLNSDocumentScannerImpl:int scanEndElement()",
            "org.apache.xerces.impl.XMLScanner:void scanXMLDeclOrTextDecl(boolean,java.lang.String[])",
            "org.apache.xerces.impl.XMLScanner:java.lang.String scanPseudoAttribute(boolean,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanPI()",
            "org.apache.xerces.impl.XMLScanner:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:void scanComment(org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanAttributeValue(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.XMLString,java.lang.String,boolean,java.lang.String)",
            "org.apache.xerces.impl.XMLScanner:void scanExternalID(java.lang.String[],boolean)",
            "org.apache.xerces.impl.XMLScanner:boolean scanPubidLiteral(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLScanner:int scanCharReferenceValue(org.apache.xerces.util.XMLStringBuffer,org.apache.xerces.util.XMLStringBuffer)",
            "org.apache.xerces.impl.XMLScanner:boolean scanSurrogates(org.apache.xerces.util.XMLStringBuffer)"
        ]
    },
    "org.apache.xerces.xpointer.XPointerHandler:void reportWarning(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xpointer.XPointerHandler:void parseXPointer(java.lang.String)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanPIData(java.lang.String,org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.impl.XMLNamespaceBinder:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void processingInstruction(java.lang.String,org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.parsers.AbstractSAXParser:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.dtd.XMLDTDValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanComment()",
            "org.apache.xerces.impl.XMLNamespaceBinder:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.TeeXMLDocumentFilterImpl:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void comment(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xml.serialize.TextSerializer:void startElement(java.lang.String,org.xml.sax.AttributeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xml.serialize.TextSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void reportResourceError(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:void reportResourceError(java.lang.String)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void reportFatalError(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:void reportFatalError(java.lang.String)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendUnparsedEntity(org.apache.xerces.xinclude.XIncludeHandler$UnparsedEntity)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkAndSendNotation(org.apache.xerces.xinclude.XIncludeHandler$Notation)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void scanElementDecl()",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void elementDecl(java.lang.String,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.dtd.XMLDTDProcessor:void checkDeclaredElements(org.apache.xerces.impl.dtd.DTDGrammar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void endDTD(org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMNodeFactory:org.apache.xerces.impl.dtd.models.CMNode getCMLeafNode(int,java.lang.Object,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl,boolean)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode copyNode(org.apache.xerces.impl.dtd.models.CMNode)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree2(org.apache.xerces.impl.xs.XSParticleDecl,int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMNodeFactory:org.apache.xerces.impl.dtd.models.CMNode getCMRepeatingLeafNode(int,java.lang.Object,int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree2(org.apache.xerces.impl.xs.XSParticleDecl,int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMNodeFactory:org.apache.xerces.impl.dtd.models.CMNode getCMUniOpNode(int,org.apache.xerces.impl.dtd.models.CMNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl,boolean)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode expandContentModel(org.apache.xerces.impl.dtd.models.CMNode,int,int)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode copyNode(org.apache.xerces.impl.dtd.models.CMNode)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree2(org.apache.xerces.impl.xs.XSParticleDecl,int,int)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMNodeFactory:org.apache.xerces.impl.dtd.models.CMNode getCMBinOpNode(int,org.apache.xerces.impl.dtd.models.CMNode,org.apache.xerces.impl.dtd.models.CMNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl,boolean)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode expandContentModel(org.apache.xerces.impl.dtd.models.CMNode,int,int)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode multiNodes(org.apache.xerces.impl.dtd.models.CMNode,int,boolean)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode copyNode(org.apache.xerces.impl.dtd.models.CMNode)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void storeLocations(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void reportSchemaError(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator$KeyRefValueStore:void endDocumentFragment()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$KeyValueStore:void checkDuplicateValues()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$UniqueValueStore:void checkDuplicateValues()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void endValueScope()",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void reportError(java.lang.String,java.lang.Object[])",
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void addValue(org.apache.xerces.impl.xs.identity.Field,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xs.XSTypeDefinition getAndCheckXsiType(org.apache.xerces.xni.QName,java.lang.String,org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:boolean getXsiNil(org.apache.xerces.xni.QName,java.lang.String)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processOneAttribute(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,int,org.apache.xerces.impl.xs.XSAttributeDecl,org.apache.xerces.impl.xs.XSAttributeUseImpl,org.apache.xerces.impl.xs.AttributePSVImpl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void addDefaultAttributes(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.impl.xs.XSAttributeGroupDecl)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processElementContent(org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidType(org.apache.xerces.xni.QName,java.lang.Object)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:java.lang.Object elementLocallyValidComplexType(org.apache.xerces.xni.QName,java.lang.Object)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootTypeQName(javax.xml.namespace.QName)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootElementDeclQName(javax.xml.namespace.QName,org.apache.xerces.xni.QName)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void checkElementMatchesRootElementDecl(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityManager$ScannedEntity:void setReader(java.io.InputStream,java.lang.String,java.lang.Boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityScanner:void setEncoding(java.lang.String)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:void endOfFileHook(java.io.EOFException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xerces.impl.XMLDocumentScannerImpl$ContentDispatcher:void endOfFileHook(java.io.EOFException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher:boolean dispatch(boolean)"
        ]
    },
    "org.apache.xml.serialize.TextSerializer:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.jaxp.validation.ValidatorHandlerImpl:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.JAXPValidatorComponent$XNI2SAX:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.parsers.AbstractSAXParser:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void reportResourceError(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void reportFatalError(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startGeneralEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void endDocument(org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void handleFallbackElement()",
            "org.apache.xerces.xinclude.XIncludeHandler:boolean handleIncludeElement(org.apache.xerces.xni.XMLAttributes)",
            "org.apache.xerces.xinclude.XIncludeHandler:void setupCurrentBaseURI(org.apache.xerces.xni.XMLLocator)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkWhitespace(org.apache.xerces.xni.XMLString)",
            "org.apache.xerces.xinclude.XIncludeHandler:void checkMultipleRootElements()"
        ]
    },
    "org.apache.xerces.impl.XMLDTDScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,boolean)",
            "org.apache.xerces.impl.XMLEntityManager:void startEntity(java.lang.String,org.apache.xerces.xni.parser.XMLInputSource,boolean,boolean)",
            "org.apache.xerces.impl.XMLVersionDetector:void startDocumentParsing(org.apache.xerces.impl.XMLEntityHandler,short)"
        ]
    },
    "org.apache.xerces.jaxp.UnparsedEntityHandler:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.dtd.XMLDTDProcessor:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.XMLDTDScannerImpl:void startEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.jaxp.UnparsedEntityHandler:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void startParameterEntity(java.lang.String,org.apache.xerces.xni.XMLResourceIdentifier,java.lang.String,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.xs.models.XSCMValidator createDFACM(org.apache.xerces.impl.xs.XSParticleDecl,boolean)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode copyNode(org.apache.xerces.impl.dtd.models.CMNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode multiNodes(org.apache.xerces.impl.dtd.models.CMNode,int,boolean)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode copyNode(org.apache.xerces.impl.dtd.models.CMNode)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree2(org.apache.xerces.impl.xs.XSParticleDecl,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode expandContentModel(org.apache.xerces.impl.dtd.models.CMNode,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.xs.models.XSCMValidator createDFACM(org.apache.xerces.impl.xs.XSParticleDecl,boolean)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode buildCompactSyntaxTree(org.apache.xerces.impl.xs.XSParticleDecl)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode multiNodes(org.apache.xerces.impl.dtd.models.CMNode,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode expandContentModel(org.apache.xerces.impl.dtd.models.CMNode,int,int)",
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.dtd.models.CMNode multiNodes(org.apache.xerces.impl.dtd.models.CMNode,int,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$KeyRefValueStore:void endDocumentFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$KeyValueStore:void checkDuplicateValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void addValue(org.apache.xerces.impl.xs.identity.Field,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$UniqueValueStore:void checkDuplicateValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void addValue(org.apache.xerces.impl.xs.identity.Field,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void endValueScope()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void endValueScopeFor(org.apache.xerces.impl.xs.identity.IdentityConstraint,int)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void reportError(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Field$Matcher:void matched(java.lang.Object,short,org.apache.xerces.xs.ShortList,boolean)",
            "org.apache.xerces.impl.xs.identity.Field$Matcher:void handleContent(org.apache.xerces.xs.XSTypeDefinition,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator$ValueStoreBase:void addValue(org.apache.xerces.impl.xs.identity.Field,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Field$Matcher:void matched(java.lang.Object,short,org.apache.xerces.xs.ShortList,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:boolean getXsiNil(org.apache.xerces.xni.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void checkElementMatchesRootElementDecl(org.apache.xerces.impl.xs.XSElementDecl,org.apache.xerces.xni.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:void processRootElementDeclQName(javax.xml.namespace.QName,org.apache.xerces.xni.QName)"
        ]
    },
    "org.apache.xerces.impl.XMLEntityScanner:void setEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.XMLDTDScannerImpl:boolean scanTextDecl()",
            "org.apache.xerces.impl.XMLDocumentFragmentScannerImpl:void scanXMLDeclOrTextDecl(boolean)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void handleFallbackElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void setupCurrentBaseURI(org.apache.xerces.xni.XMLLocator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startDocument(org.apache.xerces.xni.XMLLocator,java.lang.String,org.apache.xerces.xni.NamespaceContext,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void checkWhitespace(org.apache.xerces.xni.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void characters(org.apache.xerces.xni.XMLString,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.xinclude.XIncludeHandler:void checkMultipleRootElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.xinclude.XIncludeHandler:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)",
            "org.apache.xerces.xinclude.XIncludeHandler:void emptyElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.xs.models.XSCMValidator createDFACM(org.apache.xerces.impl.xs.XSParticleDecl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.xs.models.XSCMValidator getContentModel(org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.XMLSchemaValidator:void endValueScopeFor(org.apache.xerces.impl.xs.identity.IdentityConstraint,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xs.XSTypeDefinition,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Field$Matcher:void matched(java.lang.Object,short,org.apache.xerces.xs.ShortList,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Field$Matcher:void handleContent(org.apache.xerces.xs.XSTypeDefinition,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)",
            "org.apache.xerces.impl.xs.identity.XPathMatcher:void startElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Field$Matcher:void handleContent(org.apache.xerces.xs.XSTypeDefinition,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.XPathMatcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xs.XSTypeDefinition,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)"
        ]
    },
    "org.apache.xerces.impl.xs.models.CMBuilder:org.apache.xerces.impl.xs.models.XSCMValidator getContentModel(org.apache.xerces.impl.xs.XSComplexTypeDecl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSComplexTypeDecl:org.apache.xerces.impl.xs.models.XSCMValidator getContentModel(org.apache.xerces.impl.xs.models.CMBuilder,boolean)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.Selector$Matcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xs.XSTypeDefinition,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.identity.XPathMatcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xs.XSTypeDefinition,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.identity.Selector$Matcher:void endElement(org.apache.xerces.xni.QName,org.apache.xerces.xs.XSTypeDefinition,boolean,java.lang.Object,short,org.apache.xerces.xs.ShortList)",
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleEndElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.Augmentations)"
        ]
    },
    "org.apache.xerces.impl.xs.XSComplexTypeDecl:org.apache.xerces.impl.xs.models.XSCMValidator getContentModel(org.apache.xerces.impl.xs.models.CMBuilder,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XSComplexTypeDecl:org.apache.xerces.impl.xs.models.XSCMValidator getContentModel(org.apache.xerces.impl.xs.models.CMBuilder)",
            "org.apache.xerces.impl.xs.XSConstraints:void fullSchemaChecking(org.apache.xerces.impl.xs.XSGrammarBucket,org.apache.xerces.impl.xs.SubstitutionGroupHandler,org.apache.xerces.impl.xs.models.CMBuilder,org.apache.xerces.impl.XMLErrorReporter)"
        ]
    },
    "org.apache.xerces.impl.xs.XSComplexTypeDecl:org.apache.xerces.impl.xs.models.XSCMValidator getContentModel(org.apache.xerces.impl.xs.models.CMBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xerces.impl.xs.XMLSchemaValidator:org.apache.xerces.xni.Augmentations handleStartElement(org.apache.xerces.xni.QName,org.apache.xerces.xni.XMLAttributes,org.apache.xerces.xni.Augmentations)"
        ]
    }
}
{
    "com.opensymphony.xwork2.config.providers.XWorkConfigurationProvider:void register(com.opensymphony.xwork2.inject.ContainerBuilder,com.opensymphony.xwork2.util.location.LocatableProperties)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.opensymphony.xwork2.config.impl.MockConfiguration:void selfRegister()",
            "com.opensymphony.xwork2.config.impl.DefaultConfiguration:java.util.List reloadContainer(java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:java.lang.Object compile(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlUtil:void setValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Object)",
            "com.opensymphony.xwork2.ognl.OgnlUtil:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Object)",
            "com.opensymphony.xwork2.ognl.OgnlUtil:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Class)",
            "com.opensymphony.xwork2.ognl.OgnlUtil:void copy(java.lang.Object,java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection)",
            "com.opensymphony.xwork2.ognl.OgnlUtil:java.util.Map getBeanMap(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.config.impl.MockConfiguration:void selfRegister()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.TestNGXWorkTestCase:void setUp()"
        ]
    },
    "com.opensymphony.xwork2.config.impl.DefaultConfiguration:java.util.List reloadContainer(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.impl.DefaultConfiguration:void reload(java.util.List)",
            "com.opensymphony.xwork2.config.ConfigurationManager:com.opensymphony.xwork2.config.Configuration getConfiguration()",
            "com.opensymphony.xwork2.config.ConfigurationManager:void conditionalReload()",
            "com.opensymphony.xwork2.config.ConfigurationManager:void reload()"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void setValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor:void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)",
            "com.opensymphony.xwork2.ognl.OgnlValueStack:void trySetValue(java.lang.String,java.lang.Object,boolean,java.util.Map)",
            "com.opensymphony.xwork2.ognl.OgnlUtil:void internalSetProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map,boolean)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object getValueUsingOgnl(java.lang.String)",
            "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object getValue(java.lang.String,java.lang.Class)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void copy(java.lang.Object,java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlUtil:void copy(java.lang.Object,java.lang.Object,java.util.Map)",
            "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void copy(java.lang.Object,java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:java.util.Map getBeanMap(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:java.util.Map getBeanMap(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.TestNGXWorkTestCase:void setUp()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.config.impl.DefaultConfiguration:void reload(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.config.ConfigurationManager:com.opensymphony.xwork2.config.Configuration getConfiguration()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.XWorkTestCase:void setUp()",
            "com.opensymphony.xwork2.XWorkTestCase:void loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationProvider[])",
            "com.opensymphony.xwork2.util.XWorkTestCaseHelper:com.opensymphony.xwork2.config.ConfigurationManager setUp()",
            "com.opensymphony.xwork2.util.XWorkTestCaseHelper:com.opensymphony.xwork2.config.ConfigurationManager loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationManager,com.opensymphony.xwork2.config.ConfigurationProvider[])",
            "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String,java.util.Map)",
            "com.opensymphony.xwork2.TestNGXWorkTestCase:void loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationProvider[])",
            "com.opensymphony.xwork2.config.ConfigurationManager:void reload()"
        ]
    },
    "com.opensymphony.xwork2.config.ConfigurationManager:void conditionalReload()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.ConfigurationManager:com.opensymphony.xwork2.config.Configuration getConfiguration()"
        ]
    },
    "com.opensymphony.xwork2.config.ConfigurationManager:void reload()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.accessor.XWorkListPropertyAccessor:void setProperty(java.util.Map,java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:void trySetValue(java.lang.String,java.lang.Object,boolean,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:void setValue(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void internalSetProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperties(java.util.Map,java.lang.Object,java.util.Map,boolean)",
            "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map,boolean)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object getValueUsingOgnl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValue(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:java.lang.Object getValue(java.lang.String,java.util.Map,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object getValue(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValue(java.lang.String,java.lang.Class)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void copy(java.lang.Object,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void copy(java.lang.Object,java.lang.Object,java.util.Map,java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.ChainingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:java.util.Map getBeanMap(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.XWorkTestCase:void setUp()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.XWorkTestCase:void loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationProvider[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.util.XWorkTestCaseHelper:com.opensymphony.xwork2.config.ConfigurationManager setUp()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.XWorkTestCase:void setUp()",
            "com.opensymphony.xwork2.TestNGXWorkTestCase:void setUp()"
        ]
    },
    "com.opensymphony.xwork2.util.XWorkTestCaseHelper:com.opensymphony.xwork2.config.ConfigurationManager loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationManager,com.opensymphony.xwork2.config.ConfigurationProvider[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.XWorkTestCase:void loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationProvider[])",
            "com.opensymphony.xwork2.TestNGXWorkTestCase:void loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationProvider[])"
        ]
    },
    "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.TestNGXWorkTestCase:void loadConfigurationProviders(com.opensymphony.xwork2.config.ConfigurationProvider[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:void setValue(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:void setValue(java.lang.String,java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperties(java.util.Map,java.lang.Object,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperties(java.util.Map,java.lang.Object,java.util.Map)",
            "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperties(java.util.Map,java.lang.Object,boolean)",
            "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperties(java.util.Map,java.lang.Object,java.util.Map,boolean)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map)",
            "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map,boolean)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValueWhenExpressionIsNotNull(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValue(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValueWhenExpressionIsNotNull(java.lang.String,java.lang.Class)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ChainingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:void setValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.ParametersInterceptor:void setParameters(java.lang.Object,com.opensymphony.xwork2.util.ValueStack,java.util.Map)",
            "com.opensymphony.xwork2.interceptor.StaticParametersInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.AliasInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperties(java.util.Map,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperties(java.util.Map,java.lang.Object,java.util.Map)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperties(java.util.Map,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperties(java.util.Map,java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperties(java.util.Map,java.lang.Object,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ObjectFactory:com.opensymphony.xwork2.Result buildResult(com.opensymphony.xwork2.config.entities.ResultConfig,java.util.Map)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValueWhenExpressionIsNotNull(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object findValue(java.lang.String,boolean)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValueWhenExpressionIsNotNull(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object findValue(java.lang.String,java.lang.Class,boolean)"
        ]
    },
    "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.mock.MockInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.validator.ValidationInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.DefaultActionProxy:java.lang.String execute()",
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String invokeUnderTiming(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ParametersInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.annotations.AnnotationParameterFilterIntereptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.StaticParametersInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.PrepareInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.AliasInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.I18nInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ParameterRemoverInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.LoggingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ChainingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ParametersInterceptor:void setParameters(java.lang.Object,com.opensymphony.xwork2.util.ValueStack,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.ParametersInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.StaticParametersInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.AliasInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperties(java.util.Map,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.OgnlUtil:void setProperties(java.util.Map,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperties(java.util.Map,java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperty(java.lang.String,java.lang.Object,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ObjectFactory:com.opensymphony.xwork2.Result buildResult(com.opensymphony.xwork2.config.entities.ResultConfig,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:com.opensymphony.xwork2.Result createResult()"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object findValue(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object findValue(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object findValue(java.lang.String,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.String findString(java.lang.String,boolean)",
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object findValue(java.lang.String,java.lang.Class)"
        ]
    },
    "com.opensymphony.xwork2.mock.MockInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.validator.ValidationInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.DefaultActionProxy:java.lang.String execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ActionChainResult:void execute(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.XWork:void executeAction(java.lang.String,java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String invokeUnderTiming(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.TimerInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ScopedModelDrivenInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ParameterFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ParametersInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.annotations.AnnotationParameterFilterIntereptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ModelDrivenInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.PrepareInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.DefaultWorkflowInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.interceptor.MethodFilterInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.interceptor.I18nInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ParameterRemoverInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.LoggingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ExceptionMappingInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlReflectionProvider:void setProperties(java.util.Map,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ObjectFactory:com.opensymphony.xwork2.interceptor.Interceptor buildInterceptor(com.opensymphony.xwork2.config.entities.InterceptorConfig,java.util.Map)",
            "com.opensymphony.xwork2.ObjectFactory:com.opensymphony.xwork2.validator.Validator buildValidator(java.lang.String,java.util.Map,java.util.Map)"
        ]
    },
    "com.opensymphony.xwork2.DefaultActionInvocation:com.opensymphony.xwork2.Result createResult()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:void executeResult()"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object findValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.validator.validators.ValidatorSupport:java.lang.String getMessage(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.ValidatorSupport:java.lang.Object getFieldValue(java.lang.String,java.lang.Object)",
            "com.opensymphony.xwork2.conversion.impl.XWorkConverter:java.lang.String getConversionErrorMessage(java.lang.String,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.interceptor.AliasInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.I18nInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.String findString(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object findValue(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char[],java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator,int)",
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.String findString(java.lang.String)",
            "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.Object tryFindValue(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.ActionChainResult:void execute(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:void executeResult()"
        ]
    },
    "com.opensymphony.xwork2.ObjectFactory:com.opensymphony.xwork2.interceptor.Interceptor buildInterceptor(com.opensymphony.xwork2.config.entities.InterceptorConfig,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.InterceptorBuilder:java.util.List constructInterceptorReference(com.opensymphony.xwork2.config.entities.InterceptorLocator,java.lang.String,java.util.Map,com.opensymphony.xwork2.util.location.Location,com.opensymphony.xwork2.ObjectFactory)",
            "com.opensymphony.xwork2.config.providers.InterceptorBuilder:java.util.List constructParameterizedInterceptorReferences(com.opensymphony.xwork2.config.entities.InterceptorLocator,com.opensymphony.xwork2.config.entities.InterceptorStackConfig,java.util.Map,com.opensymphony.xwork2.ObjectFactory)"
        ]
    },
    "com.opensymphony.xwork2.ObjectFactory:com.opensymphony.xwork2.validator.Validator buildValidator(java.lang.String,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultValidatorFileParser:void parseValidatorDefinitions(java.util.Map,java.io.InputStream,java.lang.String)",
            "com.opensymphony.xwork2.validator.DefaultValidatorFactory:com.opensymphony.xwork2.validator.Validator getValidator(com.opensymphony.xwork2.validator.ValidatorConfig)"
        ]
    },
    "com.opensymphony.xwork2.DefaultActionInvocation:void executeResult()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.DefaultActionInvocation:java.lang.String invoke()"
        ]
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[])",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ValidatorSupport:java.lang.String getMessage(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateObject(java.lang.String,java.lang.Object,java.lang.String)",
            "com.opensymphony.xwork2.validator.validators.ValidatorSupport:void addActionError(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.ValidatorSupport:void addFieldError(java.lang.String,java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ValidatorSupport:java.lang.Object getFieldValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator:boolean validateExpression(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.ExpressionValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.RequiredStringValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.RequiredFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.AbstractRangeValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.FieldExpressionValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.RegexFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.URLValidator:void validate(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.conversion.impl.XWorkConverter:java.lang.String getConversionErrorMessage(java.lang.String,com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.ConversionErrorFieldValidator:void doValidate(java.lang.Object)",
            "com.opensymphony.xwork2.interceptor.ConversionErrorInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char[],java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char,java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator)",
            "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char[],java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator)",
            "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char,java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator,int)"
        ]
    },
    "com.opensymphony.xwork2.ognl.OgnlValueStack:java.lang.String findString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.config.providers.InterceptorBuilder:java.util.List constructInterceptorReference(com.opensymphony.xwork2.config.entities.InterceptorLocator,java.lang.String,java.util.Map,com.opensymphony.xwork2.util.location.Location,com.opensymphony.xwork2.ObjectFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.impl.DefaultConfiguration:com.opensymphony.xwork2.config.entities.ActionConfig buildFullActionConfig(com.opensymphony.xwork2.config.entities.PackageConfig,com.opensymphony.xwork2.config.entities.ActionConfig)",
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:java.util.List lookupInterceptorReference(com.opensymphony.xwork2.config.entities.PackageConfig$Builder,org.w3c.dom.Element)"
        ]
    },
    "com.opensymphony.xwork2.config.providers.InterceptorBuilder:java.util.List constructParameterizedInterceptorReferences(com.opensymphony.xwork2.config.entities.InterceptorLocator,com.opensymphony.xwork2.config.entities.InterceptorStackConfig,java.util.Map,com.opensymphony.xwork2.ObjectFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.InterceptorBuilder:java.util.List constructInterceptorReference(com.opensymphony.xwork2.config.entities.InterceptorLocator,java.lang.String,java.util.Map,com.opensymphony.xwork2.util.location.Location,com.opensymphony.xwork2.ObjectFactory)",
            "com.opensymphony.xwork2.config.providers.InterceptorBuilder:java.util.List constructParameterizedInterceptorReferences(com.opensymphony.xwork2.config.entities.InterceptorLocator,com.opensymphony.xwork2.config.entities.InterceptorStackConfig,java.util.Map,com.opensymphony.xwork2.ObjectFactory)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultValidatorFileParser:void parseValidatorDefinitions(java.util.Map,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultValidatorFactory:void retrieveValidatorConfiguration(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultValidatorFactory:com.opensymphony.xwork2.validator.Validator getValidator(com.opensymphony.xwork2.validator.ValidatorConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:java.util.List getValidators(java.lang.Class,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:java.util.List getValidators(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale)",
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.TextProviderSupport:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.interceptor.ParametersInterceptor:void setParameters(java.lang.Object,com.opensymphony.xwork2.util.ValueStack,java.util.Map)",
            "com.opensymphony.xwork2.interceptor.StaticParametersInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.interceptor.AliasInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateObject(java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateArrayElements(java.lang.Object[],java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ValidatorSupport:void addActionError(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.ExpressionValidator:void validate(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ValidatorSupport:void addFieldError(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.RequiredStringValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.ConversionErrorFieldValidator:void doValidate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.RequiredFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.AbstractRangeValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.FieldExpressionValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.RegexFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.validators.URLValidator:void validate(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator:boolean validateExpression(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator:void validate(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ExpressionValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.RequiredStringValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.StringLengthFieldValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.RequiredFieldValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator:void validate(java.lang.Object)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.AbstractRangeValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.FieldExpressionValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.RegexFieldValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.DoubleRangeFieldValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.URLValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ConversionErrorFieldValidator:void doValidate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport:void validate(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char,java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.TextParseUtil:java.lang.String translateVariables(char,java.lang.String,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char,java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class)"
        ]
    },
    "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char[],java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.TextParseUtil:java.lang.String translateVariables(java.lang.String,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.util.TextParseUtil:java.lang.String translateVariables(java.lang.String,com.opensymphony.xwork2.util.ValueStack,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator)"
        ]
    },
    "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char,java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.config.impl.DefaultConfiguration:com.opensymphony.xwork2.config.entities.ActionConfig buildFullActionConfig(com.opensymphony.xwork2.config.entities.PackageConfig,com.opensymphony.xwork2.config.entities.ActionConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.impl.DefaultConfiguration:com.opensymphony.xwork2.config.RuntimeConfiguration buildRuntimeConfiguration()"
        ]
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:java.util.List lookupInterceptorReference(com.opensymphony.xwork2.config.entities.PackageConfig$Builder,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:java.util.List buildInterceptorList(org.w3c.dom.Element,com.opensymphony.xwork2.config.entities.PackageConfig$Builder)",
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:com.opensymphony.xwork2.config.entities.InterceptorStackConfig loadInterceptorStack(org.w3c.dom.Element,com.opensymphony.xwork2.config.entities.PackageConfig$Builder)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultValidatorFactory:void retrieveValidatorConfiguration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultValidatorFactory:void parseValidators()"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:java.util.List getValidators(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:java.util.List getValidators(java.lang.Class,java.lang.String)",
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:java.util.List getValidators(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:java.util.List getValidators(java.lang.Class,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.TextProviderSupport:boolean hasKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.CompositeTextProvider:boolean hasKey(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateArrayElements(java.lang.Object[],java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validate(java.lang.Object)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ConditionalVisitorFieldValidator:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext)"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.RepopulateConversionErrorFieldValidatorSupport:void validate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.util.TextParseUtil:java.lang.String translateVariables(char,java.lang.String,com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.ValidatorSupport:java.lang.Object conditionalParse(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.util.TextParseUtil:java.lang.Object translateVariables(char,java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.util.TextParseUtil:java.lang.String translateVariables(java.lang.String,com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.util.ResourceBundle,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.util.LocalizedTextUtil:com.opensymphony.xwork2.util.LocalizedTextUtil$GetDefaultMessageReturnArg getDefaultMessage(java.lang.String,java.util.Locale,com.opensymphony.xwork2.util.ValueStack,java.lang.Object[],java.lang.String)",
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String getMessage(java.lang.String,java.util.Locale,java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Object[])",
            "com.opensymphony.xwork2.validator.validators.ValidatorSupport:java.lang.String getMessage(java.lang.Object)",
            "com.opensymphony.xwork2.ActionChainResult:void execute(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.ActionChainResult:boolean isInChainHistory(java.lang.String,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.interceptor.StaticParametersInterceptor:java.lang.String intercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.util.TextParseUtil:java.lang.String translateVariables(java.lang.String,com.opensymphony.xwork2.util.ValueStack,com.opensymphony.xwork2.util.TextParseUtil$ParsedValueEvaluator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.config.impl.DefaultConfiguration:com.opensymphony.xwork2.config.RuntimeConfiguration buildRuntimeConfiguration()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.impl.DefaultConfiguration:void rebuildRuntimeConfiguration()"
        ]
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:java.util.List buildInterceptorList(org.w3c.dom.Element,com.opensymphony.xwork2.config.entities.PackageConfig$Builder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void addAction(org.w3c.dom.Element,com.opensymphony.xwork2.config.entities.PackageConfig$Builder)"
        ]
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:com.opensymphony.xwork2.config.entities.InterceptorStackConfig loadInterceptorStack(org.w3c.dom.Element,com.opensymphony.xwork2.config.entities.PackageConfig$Builder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void loadInterceptorStacks(org.w3c.dom.Element,com.opensymphony.xwork2.config.entities.PackageConfig$Builder)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultValidatorFactory:void parseValidators()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultValidatorFactory:void <init>(com.opensymphony.xwork2.ObjectFactory,com.opensymphony.xwork2.validator.ValidatorFileParser)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:java.util.List getValidators(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:java.util.List getValidators(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:boolean hasKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.CompositeTextProvider:boolean hasKey(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:boolean hasKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.CompositeTextProvider:boolean hasKey(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:boolean hasKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.CompositeTextProvider:boolean hasKey(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.ValidatorSupport:java.lang.String getMessage(java.lang.Object)",
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String)",
            "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateObject(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)",
            "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String,com.opensymphony.xwork2.validator.ValidatorContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.validators.VisitorFieldValidator:void validateObject(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.validators.ValidatorSupport:java.lang.Object conditionalParse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.util.ResourceBundle,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.util.ResourceBundle,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[])",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List,com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[],com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:com.opensymphony.xwork2.util.LocalizedTextUtil$GetDefaultMessageReturnArg getDefaultMessage(java.lang.String,java.util.Locale,com.opensymphony.xwork2.util.ValueStack,java.lang.Object[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.util.ResourceBundle,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String getMessage(java.lang.String,java.util.Locale,java.lang.String,com.opensymphony.xwork2.util.ValueStack,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findMessage(java.lang.Class,java.lang.String,java.lang.String,java.util.Locale,java.lang.Object[],java.util.Set,com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.ActionChainResult:boolean isInChainHistory(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.ActionChainResult:void execute(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.config.impl.DefaultConfiguration:void rebuildRuntimeConfiguration()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.impl.DefaultConfiguration:java.util.List reloadContainer(java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void addAction(org.w3c.dom.Element,com.opensymphony.xwork2.config.entities.PackageConfig$Builder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:com.opensymphony.xwork2.config.entities.PackageConfig addPackage(org.w3c.dom.Element)"
        ]
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void loadInterceptorStacks(org.w3c.dom.Element,com.opensymphony.xwork2.config.entities.PackageConfig$Builder)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void loadInterceptors(com.opensymphony.xwork2.config.entities.PackageConfig$Builder,org.w3c.dom.Element)"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultValidatorFactory:void <init>(com.opensymphony.xwork2.ObjectFactory,com.opensymphony.xwork2.validator.ValidatorFileParser)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.CompositeTextProvider:java.lang.String getText(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.DelegatingValidatorContext:java.lang.String getText(java.lang.String,java.lang.String[])",
            "com.opensymphony.xwork2.ActionSupport:java.lang.String getText(java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.validator.DefaultActionValidatorManager:void validate(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.ValidationInterceptor:java.lang.String doIntercept(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.validator.AnnotationActionValidatorManager:void validate(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.validator.ValidationInterceptor:void doBeforeInvocation(com.opensymphony.xwork2.ActionInvocation)"
        ]
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.util.ResourceBundle,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.util.ResourceBundle,java.lang.String,java.util.Locale)",
            "com.opensymphony.xwork2.TextProviderSupport:boolean hasKey(java.lang.String)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.util.List)",
            "com.opensymphony.xwork2.TextProviderSupport:java.lang.String getText(java.lang.String,java.lang.String,java.lang.String[])"
        ]
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findMessage(java.lang.Class,java.lang.String,java.lang.String,java.util.Locale,java.lang.Object[],java.util.Set,com.opensymphony.xwork2.util.ValueStack)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.lang.Class,java.lang.String,java.util.Locale,java.lang.String,java.lang.Object[],com.opensymphony.xwork2.util.ValueStack)",
            "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findMessage(java.lang.Class,java.lang.String,java.lang.String,java.util.Locale,java.lang.Object[],java.util.Set,com.opensymphony.xwork2.util.ValueStack)"
        ]
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:com.opensymphony.xwork2.config.entities.PackageConfig addPackage(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void loadPackages()",
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void reloadRequiredPackages(java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void loadInterceptors(com.opensymphony.xwork2.config.entities.PackageConfig$Builder,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:com.opensymphony.xwork2.config.entities.PackageConfig addPackage(org.w3c.dom.Element)"
        ]
    },
    "com.opensymphony.xwork2.util.LocalizedTextUtil:java.lang.String findText(java.util.ResourceBundle,java.lang.String,java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void loadPackages()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.impl.DefaultConfiguration:java.util.List reloadContainer(java.util.List)"
        ]
    },
    "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void reloadRequiredPackages(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void loadPackages()",
            "com.opensymphony.xwork2.config.providers.XmlConfigurationProvider:void reloadRequiredPackages(java.util.List)"
        ]
    }
}